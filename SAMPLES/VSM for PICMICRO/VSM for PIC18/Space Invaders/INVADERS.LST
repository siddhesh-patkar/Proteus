MPASM 03.80 Released                             INVADERS.ASM   7-30-2004  12:15:53         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;*******************************************************
                      00002 ;*                 Code Produced by the                *
                      00003 ;*             PROTON+ Compiler. Version 3.0           *
                      00004 ;* Copyright Rosetta Technologies/Crownhill Associates *
                      00005 ;*              Written by Les Johnson. 2004           *
                      00006 ;*******************************************************
                      00001         LIST
                      00002 ;{
                      00003 ;FILE F1 = INVADERS.BAS
                      00004 ;FILE F2 = c:\proton 2.2\INC\PROTON18_G8.INT
                      00005 ;}
                      00009 ;[Variable Listing]
                      00010 ;_B#VR1,002D,DT_BYTE,1
                      00011 ;_B#VR2,002E,DT_BYTE,1
                      00012 ;BASE_ENABLED,003D,DT_BYTE,9
                      00013 ;BASE_HITS,0046,DT_BYTE,9
                      00014 ;INVADER_XPOS,004F,DT_BYTE,18
                      00015 ;INVADER_YPOS,0061,DT_BYTE,18
                      00016 ;INVADER_ENABLED,0073,DT_BYTE,18
                      00017 ;SHIP_XPOS,0085,DT_BYTE,1
                      00018 ;MISSILE_YPOS,0086,DT_BYTE,1
                      00019 ;MISSILE_XPOS,0087,DT_BYTE,1
                      00020 ;SHIP_SPEED,0088,DT_BYTE,1
                      00021 ;INVADER_TICK,0089,DT_BYTE,1
                      00022 ;INVADER_MISSILE_TICK,008A,DT_BYTE,1
                      00023 ;SHIP_MISSILE_TICK,008B,DT_BYTE,1
                      00024 ;TEMP_LOOP,008C,DT_BYTE,1
                      00025 ;INVADERS_ENABLED,008D,DT_BYTE,1
                      00026 ;INVADER_SPEED,008E,DT_BYTE,1
                      00027 ;BASE_XPOS_TEST,008F,DT_BYTE,1
                      00028 ;INVADER_MISSILE_YPOS,0090,DT_BYTE,1
                      00029 ;INVADER_MISSILE_XPOS,0091,DT_BYTE,1
                      00030 ;INVADER_MISSILE_SPEED,0092,DT_BYTE,1
                      00031 ;DEFAULT_INVADER_SPEED,0093,DT_BYTE,1
                      00032 ;INVADER_MISSILE2_TICK,0094,DT_BYTE,1
                      00033 ;INVADER_MISSILE2_YPOS,0095,DT_BYTE,1
                      00034 ;INVADER_MISSILE2_XPOS,0096,DT_BYTE,1
                      00035 ;INVADER_MISSILE2_SPEED,0097,DT_BYTE,1
                      00036 ;SAUCER_XPOS,0098,DT_BYTE,1
                      00037 ;SAUCER_SPEED,0099,DT_BYTE,1
                      00038 ;SCORE,009A,DT_DWORD,4
                      00039 ;LEVEL,009E,DT_WORD,2
                      00040 ;LIVES,00A0,DT_BYTE,1
                      00041 ;RANDOM_VALUE,00A1,DT_BYTE,1
                      00042 ;[End Listing]
                      00043  #DEFINE _USELFSR 1
Message[308]: Warning level superseded by command line value. (2)
                      00044  LIST  P = 18F452,F = INHX32 ,W = 2, X = ON, R = DEC, MM = ON, N = 0, C = 255
                      00045  #INCLUDE "c:\PROTON~1.2\INC\P18F452.lpb"
                      00001
                      00709  LIST
                      00046  #DEFINE XTAL 8
                      00047  #DEFINE _CORE 16
                      00048  #DEFINE _MAXRAM 1536
                      00049  #DEFINE _RAM_END 1535
                      00050  #DEFINE _MAXMEM 32768
                      00051  #DEFINE _ADC 8
                      00052  #DEFINE _ADC_RES 10
                      00053  #DEFINE _EEPROM 256
                      00054  #DEFINE RAM_BANKS 6
                      00055  #DEFINE _USART 1
                      00056  #DEFINE _USB 0
                      00057  #DEFINE _FLASH 1
                      00058  #DEFINE BANK0_START 128
                      00059  #DEFINE BANK0_END 255
                      00060  #DEFINE BANK1_START 256
                      00061  #DEFINE BANK1_END 511
                      00062  #DEFINE BANK2_START 512
                      00063  #DEFINE BANK2_END 767
                      00064  #DEFINE BANK3_START 768
                      00065  #DEFINE BANK3_END 1023
                      00066  #DEFINE BANK4_START 1024
                      00067  #DEFINE BANK4_END 1279
                      00068  #DEFINE BANK5_START 1280
                      00069  #DEFINE BANK5_END 1535
                      00070  #DEFINE BANKA_START 0
                      00071  #DEFINE BANKA_END 127
                      00072  #DEFINE _SYSTEM_VARIABLE_COUNT 49
  00000000            00073 RAM_BANK = 0
                      00074  #DEFINE LCD#DTPORT PORTD
                      00075  #DEFINE LCD#DTPIN 4
                      00076  #DEFINE LCD#RSPORT PORTC
                      00077  #DEFINE LCD#RSPIN 1
                      00078  #DEFINE LCD#ENPORT PORTE
                      00079  #DEFINE LCD#ENPIN 0
                      00080  #DEFINE LCD#RWPORT PORTC
                      00081  #DEFINE LCD#RWPIN 0
                      00082  #DEFINE LCD#CS1PORT PORTE
                      00083  #DEFINE LCD#CS1PIN 1
                      00084  #DEFINE LCD#CS2PORT PORTE
                      00085  #DEFINE LCD#CS2PIN 2
                      00086  #DEFINE LCD#TYPE 1
                      00087  #DEFINE INTERNAL#FONT 1
                      00088  #DEFINE FONT_SLAVE#ADDR 0
                      00089  #INCLUDE "c:\PROTON~1.2\INC\REG_LD16.INC"
                      00001
                      00002 ; 16Cxxx Substitutions
                      00003
                      00004  #DEFINE CLRW CLRF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00005  #DEFINE NEGW NEGF WREG ; PIC16Cxxx code substitution (WREG is addressable)
                      00006
                      00007  #DEFINE SKPC BTFSS STATUS,C
                      00008  #DEFINE SKPNC BTFSC STATUS,C
                      00009  #DEFINE CLRC BCF STATUS,C
                      00010  #DEFINE SETC BSF STATUS,C
                      00011  #DEFINE SKPZ BTFSS STATUS,Z
                      00012  #DEFINE SKPNZ BTFSC STATUS,Z
                      00013  #DEFINE CLRZ BCF STATUS,Z
                      00014  #DEFINE SETZ BSF STATUS,Z
                      00015
                      00016 ;-------------------------------------------------------------------------------------------------
                      00017 MOVFW MACRO VARIN
                      00018         MOVF VARIN,W
                      00019         ENDM
                      00020 ;-------------------------------------------------------------------------------------------------
                      00021 RLF MACRO VARIN,DEST
                      00022     RLCF VARIN,DEST
                      00023     ENDM
                      00024 ;-------------------------------------------------------------------------------------------------
                      00025 RRF MACRO VARIN,DEST
                      00026     RRCF VARIN,DEST
                      00027     ENDM
                      00028 ;-------------------------------------------------------------------------------------------------
                      00029 JUMP MACRO LABEL
                      00030         GOTO LABEL
                      00031         ENDM
                      00032 ;-------------------------------------------------------------------------------------------------
                      00033 F@CALL MACRO DEST
                      00034     IF (DEST < 1)
                      00035         CALL DEST
                      00036     ELSE
                      00037       IF (DEST > $)
                      00038         CALL DEST
                      00039       ELSE
                      00040         IF (DEST < ($ - 0X03FF))
                      00041             CALL DEST
                      00042         ELSE
                      00043             RCALL DEST
                      00044         ENDIF
                      00045       ENDIF
                      00046     ENDIF
                      00047     ENDM
                      00048 ;-------------------------------------------------------------------------------------------------
                      00049 F@JUMP MACRO DEST
                      00050
                      00051     IFDEF WATCHDOG_REQ
                      00052         IF ($ == DEST)
                      00053                 CLRWDT          ; Walk the dog
                      00054         ENDIF
                      00055         ENDIF
                      00056     IF (DEST < 1)
                      00057         GOTO DEST
                      00058     ELSE
                      00059       IF ((DEST) > $)
                      00060         GOTO DEST
                      00061       ELSE
                      00062         IF ((DEST) < ($ - 0X03FF))
                      00063             GOTO DEST
                      00064         ELSE
                      00065             BRA DEST
                      00066         ENDIF
                      00067       ENDIF
                      00068     ENDIF
                      00069     ENDM
                      00070 ;-------------------------------------------------------------------------------------------------
                      00071     IFDEF WATCHDOG_REQ
                      00072                 CHK@SLF MACRO DEST
                      00073                         IF ($ == DEST)
                      00074                         CLRWDT          ; Walk the dog
                      00075                 ENDIF
                      00076                 ENDM
                      00077         ENDIF
                      00078
                      00079 G@OTO MACRO DEST
                      00080     IF (DEST < 1)
                      00081         BTFSC STATUS,OV
                      00082         GOTO DEST
                      00083     ELSE
                      00084         IF (DEST > $)
                      00085                 BTFSC STATUS,OV
                      00086             GOTO DEST
                      00087         ELSE
                      00088                 IF (DEST < ($ - 127))
                      00089                 BTFSC STATUS,OV
                      00090                 GOTO DEST
                      00091             ELSE
                      00092                 BOV DEST
                      00093             ENDIF
                      00094         ENDIF
                      00095     ENDIF
                      00096     ENDM
                      00097
                      00098 GO@TO MACRO DEST
                      00099     IF (DEST < 1)
                      00100         GOTO DEST
                      00101     ELSE
                      00102         IF (DEST > $)
                      00103                 GOTO DEST
                      00104         ELSE
                      00105                 IF (DEST < ($ - 0X03FF))
                      00106                 GOTO DEST
                      00107             ELSE
                      00108                 BRA DEST
                      00109             ENDIF
                      00110         ENDIF
                      00111     ENDIF
                      00112     ENDM
                      00113 ;-------------------------------------------------------------------------------------------------
                      00114 S@B MACRO VARIN
                      00115     IF ((VARIN > BANKA_END) & (VARIN < 0X0F80))
                      00116       IF ((VARIN & 0X0F00) != (RAM_BANK << 8))
                      00117         MOVLB (VARIN >> 8)
                      00118                 RAM_BANK = (VARIN >> 8)
                      00119       ENDIF
                      00120     ENDIF
                      00121     ENDM
                      00122 ;-------------------------------------------------------------------------------------------------
                      00123 R@B MACRO
                      00124     IF(RAM_BANK != 0)
                      00125         MOVLB 0
                      00126                 RAM_BANK = 0
                      00127     ENDIF
                      00128     ENDM
                      00129 ;-------------------------------------------------------------------------------------------------
                      00130 WREG_BYTE MACRO BYTEOUT
                      00131     S@B BYTEOUT
                      00132     MOVWF BYTEOUT
                      00133     R@B                                                 ; Reset the bank when the macro is finished
                      00134     ;movff WREG,byteout
                      00135     ENDM
                      00136 ;-------------------------------------------------------------------------------------------------
                      00137 WREG_BIT MACRO VAROUT,BITOUT
                      00138     S@B VAROUT
                      00139     BTFSC WREG,0
                      00140     BSF VAROUT,BITOUT
                      00141     BTFSS WREG,0
                      00142     BCF VAROUT,BITOUT
                      00143     R@B                                                 ; Reset the bank when the macro is finished
                      00144     ENDM
                      00145 ;-------------------------------------------------------------------------------------------------
                      00146 WREG_WORD MACRO WORDOUT
                      00147     S@B WORDOUT
                      00148     MOVWF WORDOUT
                      00149     S@B WORDOUT + 1
                      00150     CLRF WORDOUT + 1
                      00151     R@B                                                 ; Reset the bank when the macro is finished
                      00152     ENDM
                      00153 ;-------------------------------------------------------------------------------------------------
                      00154 WREG_DWORD MACRO DWORDOUT
                      00155     S@B DWORDOUT + 3
                      00156     CLRF DWORDOUT + 3
                      00157     S@B DWORDOUT + 2
                      00158     CLRF DWORDOUT + 2
                      00159     S@B DWORDOUT + 1
                      00160     CLRF DWORDOUT + 1
                      00161     S@B DWORDOUT
                      00162     MOVWF DWORDOUT
                      00163     R@B                                                 ; Reset the bank when the macro is finished
                      00164     ENDM
                      00165 ;-------------------------------------------------------------------------------------------------
                      00166 BYTE_WREG MACRO BYTEIN
                      00167     S@B BYTEIN
                      00168     MOVFW BYTEIN
                      00169     R@B                                                 ; Reset the bank when the macro is finished
                      00170     ;movff bytein,WREG
                      00171     ENDM
                      00172 ;-------------------------------------------------------------------------------------------------
                      00173 NUM_WREG MACRO NUMIN
                      00174     MOVLW (NUMIN & 255)
                      00175     ENDM
                      00176 ;-------------------------------------------------------------------------------------------------
                      00177 NUM_BYTE MACRO NUMIN,BYTEOUT
                      00178     S@B BYTEOUT
                      00179     IF(NUMIN == 0)
                      00180         CLRF BYTEOUT
                      00181     ELSE
                      00182         IF(NUMIN == 255)
                      00183                 SETF BYTEOUT
                      00184         ELSE
                      00185                 MOVLW (NUMIN & 255)
                      00186                 MOVWF BYTEOUT
                      00187         ENDIF
                      00188     ENDIF
                      00189     R@B                                                 ; Reset the bank when the macro is finished
                      00190     ENDM
                      00191 ;-------------------------------------------------------------------------------------------------
                      00192 NUM_BIT MACRO NUMIN,VAROUT,BITOUT
                      00193     S@B VAROUT
                      00194     IF((NUMIN & 1) == 1)
                      00195         BSF VAROUT,BITOUT
                      00196     ELSE
                      00197         BCF VAROUT,BITOUT
                      00198         ENDIF
                      00199     R@B                                                 ; Reset the bank when the macro is finished
                      00200     ENDM
                      00201 ;-------------------------------------------------------------------------------------------------
                      00202 NUM_WORD MACRO NUMIN,WORDOUT
                      00203
                      00204     IFDEF _USELFSR
                      00205         IF(WORDOUT == FSR0L)
                      00206                 LFSR 0,NUMIN
                      00207                 EXITM
                      00208         ENDIF
                      00209
                      00210         IF(WORDOUT == FSR1L)
                      00211                 LFSR 1,NUMIN
                      00212                 EXITM
                      00213         ENDIF
                      00214
                      00215         IF(WORDOUT == FSR2L)
                      00216                 LFSR 2,NUMIN
                      00217                 EXITM
                      00218         ENDIF
                      00219     ENDIF
                      00220
                      00221     IF((NUMIN & 255) == 0)
                      00222         S@B WORDOUT
                      00223         CLRF WORDOUT
                      00224     ELSE
                      00225         IF((NUMIN & 255) == 255)
                      00226             S@B WORDOUT
                      00227                 SETF WORDOUT
                      00228         ELSE
                      00229                 S@B WORDOUT
                      00230                 MOVLW (NUMIN & 255)
                      00231                 MOVWF WORDOUT
                      00232         ENDIF
                      00233     ENDIF
                      00234
                      00235     IF(((NUMIN >> 8) & 255) == 0)
                      00236         S@B WORDOUT + 1
                      00237         CLRF WORDOUT + 1
                      00238     ELSE
                      00239         IF(((NUMIN >> 8) & 255) == 255)
                      00240             S@B WORDOUT + 1
                      00241                 SETF WORDOUT + 1
                      00242         ELSE
                      00243                 S@B WORDOUT + 1
                      00244                 MOVLW ((NUMIN >> 8) & 255)
                      00245                 MOVWF WORDOUT + 1
                      00246         ENDIF
                      00247     ENDIF
                      00248     R@B                                                 ; Reset the bank when the macro is finished
                      00249     ENDM
                      00250 ;-------------------------------------------------------------------------------------------------
                      00251 NUM_DWORD MACRO NUMIN,DWORDOUT
                      00252
                      00253     IF(((NUMIN >> 24) & 255) == 0)
                      00254         S@B DWORDOUT + 3
                      00255         CLRF DWORDOUT + 3
                      00256     ELSE
                      00257         IF(((NUMIN >> 24) & 255) == 255)
                      00258             S@B DWORDOUT + 3
                      00259                 SETF DWORDOUT + 3
                      00260         ELSE
                      00261                 S@B DWORDOUT + 3
                      00262                 MOVLW ((NUMIN >> 24) & 255)
                      00263                 MOVWF DWORDOUT + 3
                      00264         ENDIF
                      00265     ENDIF
                      00266
                      00267     IF(((NUMIN >> 16) & 255) == 0)
                      00268         S@B DWORDOUT + 2
                      00269         CLRF DWORDOUT + 2
                      00270     ELSE
                      00271         IF(((NUMIN >> 16) & 255) == 255)
                      00272             S@B DWORDOUT + 2
                      00273                 SETF DWORDOUT + 2
                      00274         ELSE
                      00275                 S@B DWORDOUT + 2
                      00276                 MOVLW ((NUMIN >> 16) & 255)
                      00277                 MOVWF DWORDOUT + 2
                      00278         ENDIF
                      00279     ENDIF
                      00280
                      00281     IF(((NUMIN >> 8) & 255) == 0)
                      00282         S@B DWORDOUT + 1
                      00283         CLRF DWORDOUT + 1
                      00284     ELSE
                      00285         IF(((NUMIN >> 8) & 255) == 255)
                      00286             S@B DWORDOUT + 1
                      00287                 SETF DWORDOUT + 1
                      00288         ELSE
                      00289                 S@B DWORDOUT + 1
                      00290                 MOVLW ((NUMIN >> 8) & 255)
                      00291                 MOVWF DWORDOUT + 1
                      00292         ENDIF
                      00293     ENDIF
                      00294
                      00295     IF((NUMIN & 255) == 0)
                      00296         S@B DWORDOUT
                      00297         CLRF DWORDOUT
                      00298     ELSE
                      00299         IF((NUMIN & 255) == 255)
                      00300             S@B DWORDOUT
                      00301                 SETF DWORDOUT
                      00302         ELSE
                      00303                 S@B DWORDOUT
                      00304                 MOVLW (NUMIN & 255)
                      00305                 MOVWF DWORDOUT
                      00306         ENDIF
                      00307     ENDIF
                      00308     R@B                                                 ; Reset the bank when the macro is finished
                      00309     ENDM
                      00310 ;-------------------------------------------------------------------------------------------------
                      00311 BIT_WREG MACRO VARIN,BITIN
                      00312     S@B VARIN
                      00313     CLRW
                      00314     BTFSC VARIN,BITIN
                      00315     MOVLW 1
                      00316     R@B                                                 ; Reset the bank when the macro is finished
                      00317     ENDM
                      00318 ;-------------------------------------------------------------------------------------------------
                      00319 BIT_BYTE MACRO VARIN,BITIN,BYTEOUT
                      00320     S@B VARIN
                      00321     CLRW
                      00322     BTFSC VARIN,BITIN
                      00323     MOVLW 1
                      00324     S@B BYTEOUT
                      00325     MOVWF BYTEOUT
                      00326    ; movff WREG,byteout
                      00327     R@B                                                 ; Reset the bank when the macro is finished
                      00328     ENDM
                      00329 ;-------------------------------------------------------------------------------------------------
                      00330 BIT_BIT MACRO VARIN,BITIN,VAROUT,BITOUT
                      00331     IF ((VARIN & 0X0F00) == (VAROUT & 0X0F00))
                      00332         S@B VARIN
                      00333         BTFSC VARIN,BITIN
                      00334         BSF VAROUT,BITOUT
                      00335         BTFSS VARIN,BITIN
                      00336         BCF VAROUT,BITOUT
                      00337         ELSE
                      00338                 IF ((VARIN <= BANKA_END) | (VARIN >= 0X0F80))
                      00339                         S@B VAROUT
                      00340                         BTFSC VARIN,BITIN
                      00341                         BSF VAROUT,BITOUT
                      00342                         BTFSS VARIN,BITIN
                      00343                         BCF VAROUT,BITOUT
                      00344                         ELSE
                      00345                                 IF ((VAROUT <= BANKA_END) | (VAROUT >= 0X0F80))
                      00346                                         S@B VARIN
                      00347                                         BTFSC VARIN,BITIN
                      00348                                         BSF VAROUT,BITOUT
                      00349                                         BTFSS VARIN,BITIN
                      00350                                         BCF VAROUT,BITOUT
                      00351                                         ELSE
                      00352                                         S@B VARIN
                      00353                                         CLRDC
                      00354                                         BTFSC VARIN,BITIN
                      00355                                         SETDC
                      00356                                         S@B VAROUT
                      00357                                         SKPNDC
                      00358                                         BSF VAROUT,BITOUT
                      00359                                         SKPDC
                      00360                                         BCF VAROUT,BITOUT
                      00361                                 ENDIF
                      00362                         ENDIF
                      00363         ENDIF
                      00364         R@B                                                     ; Reset the bank when the macro is finished
                      00365     ENDM
                      00366 ;-------------------------------------------------------------------------------------------------
                      00367 BIT_WORD MACRO VARIN,BITIN,WORDOUT
                      00368     S@B WORDOUT + 1
                      00369     CLRF WORDOUT + 1
                      00370     BIT_BYTE VARIN,BITIN,WORDOUT
                      00371     ENDM
                      00372 ;-------------------------------------------------------------------------------------------------
                      00373 BIT_DWORD MACRO VARIN,BITIN,DWORDOUT
                      00374     S@B DWORDOUT + 3
                      00375     CLRF DWORDOUT + 3
                      00376     S@B DWORDOUT + 2
                      00377     CLRF DWORDOUT + 2
                      00378     S@B DWORDOUT + 1
                      00379     CLRF DWORDOUT + 1
                      00380         BIT_BYTE VARIN,BITIN,DWORDOUT
                      00381     ENDM
                      00382 ;-------------------------------------------------------------------------------------------------
                      00383 WORD_WREG MACRO WORDIN
                      00384     BYTE_WREG WORDIN
                      00385     ENDM
                      00386 ;-------------------------------------------------------------------------------------------------
                      00387 WORD_BYTE MACRO WORDIN,BYTEOUT
                      00388     BYTE_BYTE WORDIN,BYTEOUT
                      00389     ENDM
                      00390 ;-------------------------------------------------------------------------------------------------
                      00391 WORD_BIT MACRO WORDIN,VAROUT,BITOUT
                      00392     BYTE_BIT WORDIN, VAROUT, BITOUT
                      00393     ENDM
                      00394 ;-------------------------------------------------------------------------------------------------
                      00395 WORD_WORD MACRO WORDIN,WORDOUT
                      00396     MOVFF WORDIN + 1,WORDOUT + 1
                      00397     BYTE_BYTE WORDIN,WORDOUT
                      00398     ENDM
                      00399 ;-------------------------------------------------------------------------------------------------
                      00400 WORD_DWORD MACRO WORDIN,DWORDOUT
                      00401     S@B DWORDOUT + 3
                      00402     CLRF DWORDOUT + 3
                      00403     S@B DWORDOUT + 2
                      00404     CLRF DWORDOUT + 2
                      00405     WORD_WORD WORDIN,DWORDOUT
                      00406     ENDM
                      00407 ;-------------------------------------------------------------------------------------------------
                      00408 BYTE_BYTE MACRO BYTEIN,BYTEOUT
                      00409     MOVFF BYTEIN,BYTEOUT
                      00410     R@B                                                 ; Reset the bank when the macro is finished
                      00411     ENDM
                      00412 ;-------------------------------------------------------------------------------------------------
                      00413 BYTE_WORD MACRO BYTEIN,WORDOUT
                      00414     S@B WORDOUT + 1
                      00415     CLRF WORDOUT + 1
                      00416     BYTE_BYTE BYTEIN,WORDOUT
                      00417     ENDM
                      00418 ;-------------------------------------------------------------------------------------------------
                      00419 BYTE_DWORD MACRO BYTEIN,DWORDOUT
                      00420     S@B DWORDOUT + 3
                      00421     CLRF DWORDOUT + 3
                      00422     S@B DWORDOUT + 2
                      00423     CLRF DWORDOUT + 2
                      00424     S@B DWORDOUT + 1
                      00425     CLRF DWORDOUT + 1
                      00426     BYTE_BYTE BYTEIN,DWORDOUT
                      00427     ENDM
                      00428 ;-------------------------------------------------------------------------------------------------
                      00429 BYTE_BIT MACRO BYTEIN,VAROUT,BITOUT
                      00430     IF ((BYTEIN & 0X0F00) == (VAROUT & 0X0F00))
                      00431         S@B BYTEIN
                      00432         BTFSC BYTEIN,0
                      00433         BSF VAROUT,BITOUT
                      00434         BTFSS BYTEIN,0
                      00435         BCF VAROUT,BITOUT
                      00436     ELSE
                      00437       IF ((BYTEIN <= BANKA_END) | (BYTEIN >= 0X0F80))
                      00438         S@B VAROUT
                      00439         BTFSC BYTEIN,0
                      00440         BSF VAROUT,BITOUT
                      00441         BTFSS BYTEIN,0
                      00442         BCF VAROUT,BITOUT
                      00443       ELSE
                      00444           IF ((VAROUT <= BANKA_END) | (VAROUT >= 0X0F80))
                      00445         S@B BYTEIN
                      00446         BTFSC BYTEIN,0
                      00447         BSF VAROUT,BITOUT
                      00448         BTFSS BYTEIN,0
                      00449         BCF VAROUT,BITOUT
                      00450           ELSE
                      00451         S@B BYTEIN
                      00452         RRF BYTEIN,W
                      00453         S@B VAROUT
                      00454         SKPNC
                      00455         BSF VAROUT,BITOUT
                      00456         SKPC
                      00457         BCF VAROUT,BITOUT
                      00458         ENDIF
                      00459       ENDIF
                      00460     ENDIF
                      00461     R@B                                                 ; Reset the bank when the macro is finished
                      00462     ENDM
                      00463 ;-------------------------------------------------------------------------------------------------
                      00464 DWORD_WREG MACRO DWORDIN
                      00465     BYTE_WREG DWORDIN
                      00466         ENDM
                      00467 ;-------------------------------------------------------------------------------------------------
                      00468 DWORD_BYTE MACRO DWORDIN,BYTEOUT
                      00469     BYTE_BYTE DWORDIN,BYTEOUT
                      00470         ENDM
                      00471 ;-------------------------------------------------------------------------------------------------
                      00472 DWORD_WORD MACRO DWORDIN,WORDOUT
                      00473     MOVFF DWORDIN + 1,WORDOUT + 1
                      00474     BYTE_BYTE DWORDIN,WORDOUT
                      00475         ENDM
                      00476 ;-------------------------------------------------------------------------------------------------
                      00477 DWORD_DWORD MACRO DWORDIN,DWORDOUT
                      00478     MOVFF DWORDIN + 3,DWORDOUT + 3
                      00479     MOVFF DWORDIN + 2,DWORDOUT + 2
                      00480     MOVFF DWORDIN + 1,DWORDOUT + 1
                      00481     BYTE_BYTE DWORDIN,DWORDOUT
                      00482         ENDM
                      00483 ;-------------------------------------------------------------------------------------------------
                      00484 DWORD_BIT MACRO DWORDIN,VAROUT,BITOUT
                      00485     BYTE_BIT DWORDIN,VAROUT,BITOUT
                      00486         ENDM
                      00487 ;-------------------------------------------------------------------------------------------------
                      00488 NUM_FLOAT MACRO NUMIN,FLOATOUT
                      00489         NUM_BYTE NUMIN,FLOATOUT + 3
                      00490         NUM_BYTE ((NUMIN >> 8) & 255),FLOATOUT + 2
                      00491         NUM_BYTE ((NUMIN >> 16) & 255),FLOATOUT + 1
                      00492         NUM_BYTE ((NUMIN >> 24) & 255),FLOATOUT
                      00493         ENDM
                      00494 ;-------------------------------------------------------------------------------------------------
                      00495 WREG_FLOAT MACRO FLOATOUT
                      00496     CALL FLO@0832U
                      00497         MOVFF PBP_AARG,FLOATOUT
                      00498         MOVFF PBP_AARGH,FLOATOUT + 1
                      00499         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00500         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00501     ENDM
                      00502 ;-------------------------------------------------------------------------------------------------
                      00503 BIT_FLOAT MACRO VARIN,BITIN,FLOATOUT
                      00504     BIT_WREG VARIN,BITIN
                      00505     CALL FLO@0832U
                      00506         MOVFF PBP_AARG,FLOATOUT
                      00507         MOVFF PBP_AARGH,FLOATOUT + 1
                      00508         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00509         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00510     ENDM
                      00511 ;-------------------------------------------------------------------------------------------------
                      00512 BYTE_FLOAT MACRO BYTEIN,FLOATOUT
                      00513     BYTE_WREG BYTEIN
                      00514     CALL FLO@0832U
                      00515         MOVFF PBP_AARG,FLOATOUT
                      00516         MOVFF PBP_AARGH,FLOATOUT + 1
                      00517         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00518         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00519     ENDM
                      00520 ;-------------------------------------------------------------------------------------------------
                      00521 WORD_FLOAT MACRO WORDIN,FLOATOUT
                      00522     BYTE_BYTE WORDIN PBP_AARG
                      00523     BYTE_BYTE WORDIN + 1 PBP_AARGH
                      00524     CALL FLO@1632U
                      00525         MOVFF PBP_AARG,FLOATOUT
                      00526         MOVFF PBP_AARGH,FLOATOUT + 1
                      00527         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00528         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00529     ENDM
                      00530 ;-------------------------------------------------------------------------------------------------
                      00531 DWORD_FLOAT MACRO DWORDIN,FLOATOUT
                      00532         MOVFF DWORDIN,PBP_AARG
                      00533         MOVFF DWORDIN + 1,PBP_AARGH
                      00534         MOVFF DWORDIN + 2,PBP_AARGHH
                      00535         MOVFF DWORDIN + 3,PBP_AARGHHH
                      00536         CALL FLO@3232S
                      00537         MOVFF PBP_AARG,FLOATOUT
                      00538         MOVFF PBP_AARGH,FLOATOUT + 1
                      00539         MOVFF PBP_AARGHH,FLOATOUT + 2
                      00540         MOVFF PBP_AARGHHH,FLOATOUT + 3
                      00541         ENDM
                      00542 ;-------------------------------------------------------------------------------------------------
                      00543 FLOAT_FLOAT MACRO FLOATIN,FLOATOUT
                      00544         MOVFF FLOATIN,FLOATOUT
                      00545         MOVFF FLOATIN + 1,FLOATOUT + 1
                      00546         MOVFF FLOATIN + 2,FLOATOUT + 2
                      00547         MOVFF FLOATIN + 3,FLOATOUT + 3
                      00548         ENDM
                      00549 ;-------------------------------------------------------------------------------------------------
                      00550 FLOAT_WREG MACRO FLOATIN
                      00551
                      00552         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00553         CALL INT@3232
                      00554         ENDM
                      00555 ;-------------------------------------------------------------------------------------------------
                      00556 FLOAT_BIT MACRO FLOATIN,VAROUT,BITOUT
                      00557         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00558         CALL INT@3232
                      00559         WREG_BIT VAROUT,BITOUT
                      00560         ENDM
                      00561 ;-------------------------------------------------------------------------------------------------
                      00562 FLOAT_BYTE MACRO FLOATIN,BYTEOUT
                      00563         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00564         CALL INT@3232
                      00565         WREG_BYTE BYTEOUT
                      00566         ENDM
                      00567 ;-------------------------------------------------------------------------------------------------
                      00568 FLOAT_WORD MACRO FLOATIN,WORDOUT
                      00569         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00570         CALL INT@3232
                      00571         MOVFF PBP_AARGHHH,WORDOUT
                      00572         MOVFF PBP_AARGHH,WORDOUT + 1
                      00573         ENDM
                      00574 ;-------------------------------------------------------------------------------------------------
                      00575 FLOAT_DWORD MACRO FLOATIN,DWORDOUT
                      00576         FLOAT_FLOAT FLOATIN,PBP_AARG
                      00577         CALL INT@3232
                      00578         MOVFF PBP_AARGHHH,DWORDOUT
                      00579         MOVFF PBP_AARGHH,DWORDOUT + 1
                      00580         MOVFF PBP_AARGH,DWORDOUT + 2
                      00581         MOVFF PBP_AARG,DWORDOUT + 3
                      00582         ENDM
  00000000            00090 BPF = 0
  00000001            00091 BPFH = 1
  00000002            00092 CSTR@CT = 2
  00000003            00093 GEN = 3
  00000004            00094 GEN2 = 4
  00000005            00095 GEN2H = 5
  00000006            00096 GEN3 = 6
  00000007            00097 GEN3H = 7
  00000008            00098 GEN4 = 8
  00000009            00099 GEN4H = 9
  0000000A            00100 GENH = 10
  0000000B            00101 GPR = 11
  0000000C            00102 PBP#RND = 12
  0000000D            00103 PBP#RNDH = 13
  0000000E            00104 PBP#VAR0 = 14
  0000000F            00105 PBP#VAR0H = 15
  00000010            00106 PBP#VAR1 = 16
  00000011            00107 PBP#VAR1H = 17
  00000012            00108 PP0 = 18
  00000013            00109 PP0H = 19
  00000014            00110 PP0HH = 20
  00000015            00111 PP0HHH = 21
  00000016            00112 PP1 = 22
  00000017            00113 PP1H = 23
  00000018            00114 PP2 = 24
  00000019            00115 PP2H = 25
  0000001A            00116 PP2HH = 26
  0000001B            00117 PP2HHH = 27
  0000001C            00118 PP3 = 28
  0000001D            00119 PP3H = 29
  0000001E            00120 PP4 = 30
  0000001F            00121 PP4H = 31
  00000020            00122 PP5 = 32
  00000021            00123 PP5H = 33
  00000022            00124 PP6 = 34
  00000023            00125 PP6H = 35
  00000024            00126 PP7 = 36
  00000025            00127 PP7H = 37
  00000026            00128 PP7HH = 38
  00000027            00129 PP7HHH = 39
  00000028            00130 PPZ = 40
  00000029            00131 PPZH = 41
  0000002A            00132 PPZHH = 42
  0000002B            00133 PPZHHH = 43
  0000002C            00134 SP#P9 = 44
  0000002D            00135 _B#VR1 = 45
  0000002E            00136 _B#VR2 = 46
  0000002F            00137 _GLCD_FLAG = 47
  00000030            00138 _GLCD_XPOS = 48
  00000031            00139 NOTE_STATUS = 49
  00000032            00140 INTERRUPT_COUNTER1 = 50
  00000033            00141 INVADER_SOUND_COUNTER = 51
  00000034            00142 INVADER_FREQ = 52
  00000035            00143 INVADER_SOUND_DURATION = 53
  00000036            00144 INVADER_SOUND_DURATION_COUNTER = 54
  00000037            00145 MISSILE_SOUND_COUNTER = 55
  00000038            00146 MISSILE_FREQ = 56
  00000039            00147 SAUCER_SOUND_COUNTER = 57
  0000003A            00148 SAUCER_FREQ = 58
  0000003B            00149 MISSILE_STATUS = 59
  0000003C            00150 INVADER_LOOP = 60
000000                00151         ORG 0
000000 EFC3 F002      00152         GOTO START@
000008                00153         ORG 8
000008 6A13           00154 T@EB CLRF 19
00000A 6A17           00155 T@EW CLRF 23
00000C 6E16           00156 T@E MOVWF 22
00000E 0E02           00157         MOVLW 2
000010 D000           00158         BRA T@ST
000012 6E0B           00159 T@ST MOVWF 11
                      00160         MOVFW 23
000016 5C13           00161         SUBWF 19,W
000018 E102           00162         BNZ CN@EQ
                      00163         MOVFW 22
00001C 5C12           00164         SUBWF 18,W
00001E 0E04           00165 CN@EQ MOVLW 4
000020 B0D8           00166         SKPNC
000022 0E01           00167         MOVLW 1
000024 B4D8           00168         SKPNZ
000026 0E02           00169         MOVLW 2
000028 140B           00170         ANDWF 11,W
00002A A4D8           00171         SKPZ
00002C 0E01           00172         MOVLW 1
00002E EFC1 F002      00173         GOTO I@NT
000032                00174 OUT@DEC
000032 9600           00175         BCF 0,3
                      00176         MOVFW 9
000036 B4D8           00177         SKPNZ
000038 8600           00178         BSF 0,3
00003A 0E05           00179         MOVLW 5
00003C 6E08           00180         MOVWF 8
00003E 0E27           00181         MOVLW 39
000040 6E17           00182         MOVWF 23
000042 0E10           00183         MOVLW 16
000044 D80C           00184         RCALL D@DIG
000046 0E03           00185         MOVLW 3
000048 6E17           00186         MOVWF 23
00004A 0EE8           00187         MOVLW 232
00004C D808           00188         RCALL D@DIG
00004E 6A17           00189         CLRF 23
000050 0E64           00190         MOVLW 100
000052 D805           00191         RCALL D@DIG
000054 6A17           00192         CLRF 23
000056 0E0A           00193         MOVLW 10
000058 D802           00194         RCALL D@DIG
                      00195         MOVFW 24
00005C D008           00196         BRA SEND@IT
00005E 6E16           00197 D@DIG MOVWF 22
                      00198         MOVFW 25
000062 6E13           00199         MOVWF 19
                      00200         MOVFW 24
000066 6E12           00201         MOVWF 18
000068 EC99 F002      00202         CALL D@VD
                      00203         MOVFW 18
00006E 6E12           00204 SEND@IT MOVWF 18
000070 4E08           00205         DCFSNZ 8,F
000072 9600           00206         BCF 0,3
                      00207         MOVFW 9
000076 E003           00208         BZ $ + 8
000078 5C08           00209         SUBWF 8,W
00007A B0D8           00210         SKPNC
00007C D008           00211         BRA EX@SEND@IT
                      00212         MOVFW 18
000080 A4D8           00213         SKPZ
000082 9600           00214         BCF 0,3
000084 B600           00215         BTFSC 0,3
000086 D003           00216         BRA EX@SEND@IT
000088 0F30           00217         ADDLW '0'
00008A EF0B F002      00218         GOTO CH@SND
00008E                00219 EX@SEND@IT
00008E 0012           00220         RETURN
000090                00221 OUT@DEC32
000090 9600           00222         BCF 0,3
                      00223         MOVFW 9
000094 E103           00224         BNZ     O@D32L1
000096 8600           00225         BSF 0,3
000098 0E0A           00226         MOVLW 10
00009A 6E09           00227         MOVWF 9
00009C                00228 O@D32L1
00009C C027 F015      00229         MOVFF PP7HHH,PP0HHH
0000A0 C026 F014      00230         MOVFF PP7HH,PP0HH
0000A4 C025 F013      00231         MOVFF 37,19
0000A8 C024 F012      00232         MOVFF 36,18
0000AC 6A08           00233         CLRF 8
0000AE                00234 O@D32L2
0000AE 6A1B           00235         CLRF PP2HHH
0000B0 6A1A           00236         CLRF PP2HH
0000B2 6A19           00237         CLRF 25
0000B4 0E0A           00238         MOVLW 10
0000B6 6E18           00239         MOVWF 24
0000B8 EC43 F002      00240         CALL L@DIV
0000BC 2A08           00241         INCF 8,F
                      00242         MOVFW 8
0000C0 5C09           00243         SUBWF 9,W
0000C2 A4D8           00244         BTFSS 4056,Z
0000C4 D7F4           00245         BRA O@D32L2
                      00246         MOVFW 24
0000C8 A4D8           00247         BTFSS 4056,Z
0000CA 9600           00248         BCF 0,3
0000CC A600           00249         BTFSS 0,3
0000CE D002           00250         BRA O@D32SKP
0000D0 2C09           00251         DECFSZ 9,W
0000D2 D004           00252         BRA O@D32L3
0000D4                00253 O@D32SKP
                      00254         MOVFW 24
0000D6 0F30           00255         ADDLW 48
0000D8 EC0B F002      00256         CALL CH@SND
0000DC                00257 O@D32L3
0000DC 2E09           00258         DECFSZ 9,F
0000DE D7DE           00259         BRA O@D32L1
0000E0 EFC1 F002      00260         GOTO I@NT
0000E4 6AF8           00261 PRINT@MSTR CLRF TBLPTRU
0000E6 6AA6           00262         CLRF EECON1
0000E8 8EA6           00263         BSF EECON1,EEPGD
0000EA 6A02           00264         CLRF CSTR@CT
0000EC C008 FFF6      00265         MOVFF 8,4086
0000F0 C009 FFF7      00266         MOVFF 9,4087
0000F4 0009           00267         TBLRD*+
                      00268         MOVFW 4085
0000F8 E006           00269         BZ $ + 14
0000FA D806           00270         RCALL PRINT
0000FC 2A08           00271         INCF 8,F
0000FE B4D8           00272         SKPNZ
000100 2A09           00273         INCF 9,F
000102 3E02           00274         INCFSZ CSTR@CT,F
000104 D7F3           00275         BRA $ - 24
000106 0012           00276         RETURN
000108 6E1D           00277 PRINT MOVWF 29
00010A EC96 F001      00278         CALL SETUP@LCD
                      00279 GLCD@FLP MOVFW _GLCD_XPOS
000110 ECB3 F001      00280         CALL CHECK@PAGE
000114 C018 F006      00281         MOVFF 24,6
000118 C019 F007      00282         MOVFF 25,7
00011C 0E06           00283         MOVLW 6
00011E 021D           00284         MULWF 29
000120 0E24           00285         MOVLW LOW FONT
000122 24F3           00286         ADDWF PRODL,W
000124 6EF6           00287         MOVWF 4086
000126 0E21           00288         MOVLW HIGH FONT
000128 B0D8           00289         SKPNC
00012A 0F01           00290         ADDLW 1
00012C 24F4           00291         ADDWF PRODH,W
00012E 6EF7           00292         MOVWF 4087
000130 0E06           00293         MOVLW 6
000132 6E22           00294         MOVWF 34
000134                00295 GLCD_L@2
000134 6AF8           00296         CLRF 4088
000136 6AA6           00297         CLRF 4006
000138 8EA6           00298         BSF     4006,EEPGD
00013A 0009           00299         TBLRD*+
                      00300         MOVFW 4085
00013E 6E18           00301         MOVWF 24
000140 B02F           00302         BTFSC _GLCD_FLAG,0
000142 1E18           00303         COMF PP2,F
000144 D809           00304         RCALL LCDWRITE
000146 2E22           00305         DECFSZ 34,F
000148 D7F5           00306         BRA GLCD_L@2
00014A C006 F018      00307         MOVFF 6,24
00014E C007 F019      00308         MOVFF 7,25
000152                00309 LCD@DONE
                      00310         MOVFW 29
000154 EFC1 F002      00311         GOTO I@NT
000158                00312 LCDWRITE
                      00313         MOVFW 24
00015A                00314 LCDWRITE@WREG
00015A 9282           00315         BCF PORTC,1
00015C D913           00316         RCALL READ@STATUS
00015E 8282           00317         BSF PORTC,1
000160 8084           00318         BSF PORTE,0
000162 6E83           00319         MOVWF PORTD
000164 9084           00320         BCF PORTE,0
000166 0E7D           00321         MOVLW 125
000168 6030           00322         CPFSLT _GLCD_XPOS
00016A D002           00323         BRA $ + 6
00016C 2A30           00324         INCF _GLCD_XPOS,F
00016E D001           00325         BRA $ + 4
000170 6A30           00326         CLRF _GLCD_XPOS
                      00327         MOVFW _GLCD_XPOS
000174 D8F8           00328         RCALL CHECK@PAGE
000176 9282           00329         BCF PORTC,1
                      00330         MOVFW _GLCD_XPOS
00017A D904           00331         RCALL READ@STATUS
00017C 8084           00332         BSF PORTE,0
00017E 6E83           00333         MOVWF PORTD
000180 9084           00334         BCF PORTE,0
000182 0012           00335         RETURN
000184 6E1C           00336 CIR@CLE MOVWF 28
000186 6A19           00337         CLRF 25
000188 C01C F018      00338         MOVFF 28,24
00018C 90D8           00339         CLRC
                      00340         RLF 28,W
000190 6E22           00341         MOVWF 34
000192 6A23           00342         CLRF 35
                      00343         RLF 35,F
                      00344 MOVFW 34
000198 0803           00345 SUBLW 3
00019A 6E16           00346 MOVWF 22
00019C 0E00           00347 MOVLW 0
00019E 5423           00348 SUBFWB 35,W
0001A0 6E17           00349 MOVWF 23
                      00350 CRC@LP1 MOVFW 25
0001A4 5C18           00351         SUBWF 24,W
0001A6 A0D8           00352         SKPC
0001A8 EFC1 F002      00353         GOTO I@NT
0001AC D82C           00354         RCALL PLOT@8
0001AE AE17           00355         BTFSS 23,7
0001B0 D011           00356         BRA CRC@LP2
0001B2 C019 F022      00357         MOVFF 25,34
0001B6 6A23           00358         CLRF 35
0001B8 90D8           00359         CLRC
                      00360         RLF 34,F
                      00361         RLF 35,F
                      00362         RLF 34,F
                      00363         RLF 35,F
                      00364         MOVFW 34
0001C4 2616           00365         ADDWF 22,F
                      00366         MOVFW 35
0001C8 2217           00367         ADDWFC 23,F
0001CA 0E06           00368         MOVLW 6
0001CC 2616           00369         ADDWF 22,F
0001CE 0E00           00370         MOVLW 0
0001D0 2217           00371         ADDWFC 23,F
0001D2 D015           00372         BRA CRC@LP3
                      00373 CRC@LP2 MOVFW 24
0001D6 5C19           00374         SUBWF 25,W
0001D8 6E22           00375         MOVWF 34
0001DA 0E00           00376         MOVLW 0
0001DC 6A23           00377         CLRF 35
0001DE 5A23           00378         SUBWFB 35,F
0001E0 90D8           00379         CLRC
                      00380         RLF 34,F
                      00381         RLF 35,F
0001E6 90D8           00382         CLRC
                      00383         RLF 34,F
                      00384         RLF 35,F
                      00385         MOVFW 34
0001EE 2616           00386         ADDWF 22,F
                      00387         MOVFW 35
0001F2 2217           00388         ADDWFC 23,F
0001F4 0E0A           00389         MOVLW 10
0001F6 2616           00390         ADDWF 22,F
0001F8 0E00           00391         MOVLW 0
0001FA 2217           00392         ADDWFC 23,F
0001FC 0618           00393         DECF 24,F
0001FE 2A19           00394 CRC@LP3 INCF 25,F
000200 D7D0           00395         BRA CRC@LP1
000202 EFC1 F002      00396         GOTO I@NT
000206                00397 PLOT@8
                      00398         MOVFW 5
000208 2418           00399         ADDWF 24,W
00020A 6E03           00400         MOVWF 3
                      00401         MOVFW 4
00020E 2419           00402         ADDWF 25,W
000210 D82E           00403         RCALL PLOT@IT
                      00404         MOVFW 5
000214 2418           00405         ADDWF 24,W
000216 6E03           00406         MOVWF 3
                      00407         MOVFW 25
00021A 5C04           00408         SUBWF 4,W
00021C D828           00409         RCALL PLOT@IT
                      00410         MOVFW 24
000220 5C05           00411         SUBWF 5,W
000222 6E03           00412         MOVWF 3
                      00413         MOVFW 4
000226 2419           00414         ADDWF 25,W
000228 D822           00415         RCALL PLOT@IT
                      00416         MOVFW 24
00022C 5C05           00417         SUBWF 5,W
00022E 6E03           00418         MOVWF 3
                      00419         MOVFW 25
000232 5C04           00420         SUBWF 4,W
000234 D81C           00421         RCALL PLOT@IT
                      00422         MOVFW 5
000238 2419           00423         ADDWF 25,W
00023A 6E03           00424         MOVWF 3
                      00425         MOVFW 4
00023E 2418           00426         ADDWF 24,W
000240 D816           00427         RCALL PLOT@IT
                      00428         MOVFW 5
000244 2419           00429         ADDWF 25,W
000246 6E03           00430         MOVWF 3
                      00431         MOVFW 24
00024A 5C04           00432         SUBWF 4,W
00024C EC37 F001      00433         CALL PLOT@IT
                      00434         MOVFW 25
000252 5C05           00435         SUBWF 5,W
000254 6E03           00436         MOVWF 3
                      00437         MOVFW 4
000258 2418           00438         ADDWF 24,W
00025A D809           00439         RCALL PLOT@IT
                      00440         MOVFW 25
00025E 5C05           00441         SUBWF 5,W
000260 6E03           00442         MOVWF 3
                      00443         MOVFW 24
000264 5C04           00444         SUBWF 4,W
000266 D003           00445         BRA PLOT@IT
000268                00446 LCD@PLOT
000268 8400           00447         BSF 0,2
00026A D001           00448         BRA $ + 4
00026C                00449 LCD@UNPLOT
00026C 9400           00450         BCF 0,2
00026E BEE8           00451 PLOT@IT BTFSC WREG,7
000270 D015           00452         BRA PLT@EXIT
000272 BC03           00453         BTFSC GEN,6
000274 D013           00454         BRA PLT@EXIT
000276 D85A           00455         RCALL SETUP@LCD
000278 D813           00456         RCALL GETBIT@POS
00027A 6A1F           00457         CLRF 31
00027C 2A03           00458         INCF 3,F
00027E 80D8           00459         SETC
000280 361F           00460         RLCF 31,F
000282 2E03           00461         DECFSZ 3,F
000284 D7FD           00462         BRA $ - 4
                      00463         MOVFW 31
000288 A400           00464         BTFSS 0,2
00028A D002           00465         BRA $ + 6
00028C 1020           00466         IORWF 32,W
00028E D002           00467         BRA $ + 6
000290 0AFF           00468         XORLW 255
000292 1420           00469         ANDWF 32,W
000294 9282           00470         BCF PORTC,1
000296 D876           00471         RCALL READ@STATUS
000298 8282           00472         BSF PORTC,1
00029A D86F           00473         RCALL TG@L
00029C EFC1 F002      00474 PLT@EXIT GOTO I@NT
0002A0                00475 GETBIT@POS
0002A0 6E21           00476         MOVWF 33
0002A2 D861           00477         RCALL CHECK@PAGE
0002A4 90D8           00478         CLRC
0002A6 3003           00479         RRCF 3,W
0002A8 6E1E           00480         MOVWF 30
0002AA 90D8           00481         CLRC
0002AC 321E           00482         RRCF 30,F
0002AE 90D8           00483         CLRC
0002B0 321E           00484         RRCF 30,F
0002B2 0E07           00485         MOVLW 7
0002B4 1603           00486         ANDWF 3,F
0002B6 0E3F           00487         MOVLW B'00111111'
0002B8 161E           00488         ANDWF 30,F
0002BA 0EB8           00489         MOVLW B'10111000'
0002BC 101E           00490         IORWF 30,W
0002BE D862           00491         RCALL READ@STATUS
0002C0 D85C           00492         RCALL TG@L
0002C2 0E3F           00493         MOVLW B'00111111'
0002C4 1621           00494         ANDWF 33,F
0002C6 0E40           00495         MOVLW B'01000000'
0002C8 1021           00496         IORWF 33,W
0002CA D85C           00497         RCALL READ@STATUS
0002CC D856           00498         RCALL TG@L
                      00499         MOVFW 33
0002D0 D017           00500         BRA READ@BYTE
0002D2                00501 GLCD@P
0002D2 D82C           00502         RCALL SETUP@LCD
0002D4 6E1E           00503         MOVWF 30
                      00504         MOVFW 10
0002D8 D846           00505         RCALL CHECK@PAGE
0002DA 0E3F           00506         MOVLW B'00111111'
0002DC D853           00507         RCALL READ@STATUS
0002DE D84D           00508         RCALL TG@L
0002E0 0EB8           00509         MOVLW B'10111000'
0002E2 1003           00510         IORWF 3,W
0002E4 D84F           00511         RCALL READ@STATUS
0002E6 D849           00512         RCALL TG@L
0002E8 0E40           00513         MOVLW B'01000000'
0002EA 100A           00514         IORWF 10,W
0002EC D84B           00515         RCALL READ@STATUS
0002EE D845           00516         RCALL TG@L
                      00517         MOVFW 30
0002F2 D848           00518         RCALL READ@STATUS
0002F4 8282           00519         BSF PORTC,1
0002F6 D841           00520         RCALL TG@L
0002F8 2A0A           00521         INCF 10,F
0002FA EFC1 F002      00522         GOTO I@NT
0002FE                00523 READBYTE@XPOS
                      00524         MOVFW _GLCD_XPOS
000300                00525 READ@BYTE
000300 6E21           00526         MOVWF 33
000302 D804           00527         RCALL READ@IT
000304 D803           00528         RCALL READ@IT
000306 8282           00529         BSF PORTC,1
                      00530         MOVFW 32
00030A 0012           00531         RETURN
00030C                00532 READ@IT
00030C D83B           00533         RCALL READ@STATUS
00030E 8282           00534         BSF PORTC,1
000310 8082           00535         BSF PORTC,0
000312 6895           00536         SETF PORTD + 18
000314 8084           00537         BSF PORTE,0
000316 0000           00538         NOP
                      00539         MOVFW PORTD
00031A 6E20           00540         MOVWF 32
00031C 9084           00541         BCF PORTE,0
00031E 6A95           00542         CLRF PORTD + 18
000320 9082           00543         BCF PORTC,0
000322 9282           00544         BCF PORTC,1
000324 0E40           00545         MOVLW B'01000000'
000326 1021           00546         IORWF 33,W
000328 D82D           00547         RCALL READ@STATUS
00032A D027           00548         BRA TG@L
00032C                00549 SETUP@LCD
00032C B200           00550         BTFSC 0,1
00032E D019           00551         BRA SKP@GCSIN
000330 6E21           00552         MOVWF 33
000332 9096           00553         BCF PORTE + 18,0
000334 9294           00554         BCF PORTC + 18,1
000336 9094           00555         BCF PORTC + 18,0
000338 9296           00556         BCF PORTE + 18,1
00033A 9496           00557         BCF PORTE + 18,2
00033C 6A95           00558         CLRF PORTD + 18
00033E 8200           00559         BSF 0,1
000340 9084           00560         BCF PORTE,0
000342 9082           00561         BCF PORTC,0
000344 9282           00562         BCF PORTC,1
000346 6A30           00563         CLRF _GLCD_XPOS
000348 0EB8           00564         MOVLW B'10111000'
00034A D81C           00565         RCALL READ@STATUS
00034C D816           00566         RCALL TG@L
00034E 0E40           00567         MOVLW B'01000000'
000350 D819           00568         RCALL READ@STATUS
000352 D813           00569         RCALL TG@L
000354 0EC0           00570         MOVLW B'11000000'
000356 D816           00571         RCALL READ@STATUS
000358 D810           00572         RCALL TG@L
00035A 0E3F           00573         MOVLW B'00111111'
00035C D813           00574         RCALL READ@STATUS
00035E D80D           00575         RCALL TG@L
                      00576         MOVFW 33
000362                00577 SKP@GCSIN
000362 9282           00578         BCF PORTC,1
000364 0012           00579         RETURN
000366                00580 CHECK@PAGE
000366 BCE8           00581         BTFSC WREG,6
000368 D004           00582         BRA EN@RIGHT
00036A 9284           00583         BCF PORTE,1
00036C 0000           00584         NOP
00036E 8484           00585         BSF PORTE,2
000370 0012           00586         RETURN
000372                00587 EN@RIGHT
000372 8284           00588         BSF PORTE,1
000374 0000           00589         NOP
000376 9484           00590         BCF PORTE,2
000378 0012           00591         RETURN
00037A 8084           00592 TG@L BSF PORTE,0
00037C 6E83           00593         MOVWF PORTD
00037E 0000           00594         NOP
000380 9084           00595         BCF PORTE,0
000382 0012           00596         RETURN
000384                00597 READ@STATUS
000384 8082           00598         BSF PORTC,0
000386 6895           00599         SETF PORTD + 18
000388 6A12           00600         CLRF 18
00038A 8084           00601 R@SLP1 BSF PORTE,0
00038C 0000           00602         NOP
00038E 9084           00603         BCF PORTE,0
000390 AE83           00604         BTFSS PORTD,7
000392 D002           00605         BRA $ + 6
000394 3E12           00606         INCFSZ 18,F
000396 D7F9           00607         BRA R@SLP1
000398 6A95           00608         CLRF PORTD + 18
00039A 6A83           00609         CLRF PORTD
00039C 9082           00610         BCF PORTC,0
00039E 0012           00611         RETURN
0003A0                00612 GLCD_CUR
0003A0 DFC5           00613         RCALL SETUP@LCD
0003A2 6E30           00614         MOVWF _GLCD_XPOS
0003A4 9284           00615         BCF PORTE,1
0003A6 D000           00616         BRA $ + 2
0003A8 9484           00617         BCF PORTE,2
0003AA 8200           00618         BSF 0,1
0003AC 0E3F           00619         MOVLW B'00111111'
0003AE DFE5           00620         RCALL TG@L
0003B0 0EB8           00621         MOVLW B'10111000'
0003B2 1003           00622         IORWF 3,W
0003B4 DFE7           00623         RCALL READ@STATUS
0003B6 DFE1           00624         RCALL TG@L
                      00625         MOVFW _GLCD_XPOS
0003BA 0D06           00626         MULLW 6
                      00627         MOVFW PRODL
0003BE DFD3           00628         RCALL CHECK@PAGE
                      00629         MOVFW PRODL
0003C2 0B7F           00630         ANDLW 127
0003C4 6E30           00631         MOVWF _GLCD_XPOS
0003C6 0940           00632         IORLW B'01000000'
0003C8 DFDD           00633         RCALL READ@STATUS
0003CA DFD7           00634         RCALL TG@L
0003CC EFC1 F002      00635         GOTO I@NT
0003D0                00636 GLCD@CLS
0003D0 9200           00637         BCF 0,1
0003D2 EC96 F001      00638         CALL SETUP@LCD
0003D6 9284           00639         BCF PORTE,1
0003D8 9484           00640         BCF PORTE,2
0003DA 0E3E           00641         MOVLW B'00111110'
0003DC DFCE           00642         RCALL TG@L
0003DE 6A22           00643         CLRF 34
0003E0 9282           00644 GLD@L1 BCF PORTC,1
                      00645         MOVFW 34
0003E4 09B8           00646         IORLW B'10111000'
0003E6 DFCE           00647         RCALL READ@STATUS
0003E8 DFC8           00648         RCALL TG@L
0003EA 6A23           00649         CLRF 35
0003EC 9282           00650 GLCD@L2 BCF PORTC,1
                      00651         MOVFW 35
0003F0 0940           00652         IORLW B'01000000'
0003F2 DFC8           00653         RCALL READ@STATUS
0003F4 DFC2           00654         RCALL TG@L
0003F6 6AE8           00655         CLRW
0003F8 9282           00656         BCF PORTC,1
0003FA DFC4           00657         RCALL READ@STATUS
0003FC 8282           00658         BSF PORTC,1
0003FE DFBD           00659         RCALL TG@L
000400 2A23           00660         INCF 35,F
000402 AC23           00661         BTFSS 35,6
000404 D7F3           00662         BRA GLCD@L2
000406 2A22           00663         INCF 34,F
000408 A622           00664         BTFSS 34,3
00040A D7EA           00665         BRA GLD@L1
00040C 9282           00666         BCF PORTC,1
00040E 9200           00667         BCF 0,1
000410 DF8D           00668         RCALL SETUP@LCD
000412 EFC1 F002      00669         GOTO I@NT
000416                00670 RSOUT@
000416                00671 CH@SND
000416 BE01           00672         BTFSC 1,7
000418 EF84 F000      00673         GOTO PRINT
                      00674 RN@DM MOVFW PBP#RNDH
00041E 100C           00675         IORWF PBP#RND,W
000420 B4D8           00676         SKPNZ
000422 2A0C           00677         INCF PBP#RND,F
000424 340D           00678         RLCF PBP#RNDH,W
000426 180D           00679         XORWF PBP#RNDH,W
000428 36E8           00680         RLCF WREG
00042A 3A0D           00681         SWAPF PBP#RNDH
00042C 380C           00682         SWAPF PBP#RND,W
00042E 46E8           00683         RLNCF WREG
000430 180D           00684         XORWF PBP#RNDH,W
000432 3A0D           00685         SWAPF PBP#RNDH
000434 0B01           00686         ANDLW 1
000436 360C           00687         RLCF PBP#RND,F
000438 1A0C           00688         XORWF PBP#RND,F
00043A 360D           00689         RLCF PBP#RNDH,F
                      00690         MOVFW PBP#RND
00043E EFC1 F002      00691         GOTO I@NT
000442 6A17           00692 DL@MS CLRF 23
000444 6E16           00693 DLY@W MOVWF 22
000446 0EFF           00694 DL@LP MOVLW 255
000448 2616           00695         ADDWF 22,F
00044A A0D8           00696         SKPC
00044C 2617           00697         ADDWF 23,F
00044E A0D8           00698         SKPC
000450 EFC1 F002      00699         GOTO I@NT
000454 0E03           00700         MOVLW 3
000456 6E13           00701         MOVWF 19
000458 0EE3           00702         MOVLW 227
00045A D802           00703         RCALL DLUS@W
00045C D7F4           00704         BRA DL@LP
00045E 6A13           00705 DL@US CLRF 19
000460 0FF4           00706 DLUS@W ADDLW 244
000462 6E12           00707         MOVWF 18
000464 1E13           00708         COMF 19,F
000466 0EFE           00709         MOVLW 254
000468 A0D8           00710         SKPC
00046A D003           00711         BRA DL@H
00046C 2612           00712 DLUS@LP ADDWF 18,F
00046E B0D8           00713         SKPNC
000470 D7FD           00714         BRA DLUS@LP
000472 2612           00715 DL@H ADDWF 18,F
000474 0000           00716         NOP
000476 3E13           00717         INCFSZ 19,F
000478 D7F9           00718         BRA DLUS@LP
00047A 0000           00719         NOP
00047C B012           00720         BTFSC 18,0
00047E D000           00721         BRA $ + 2
000480 B012           00722         BTFSC 18,0
000482 D000           00723         BRA $ + 2
000484 0012           00724         RETURN
                      00725  #INCLUDE "c:\PROTON~1.2\INC\DV32_SRC.INC"
                      00097  LIST
000486                00098 L@DIV
000486 6A1D           00099 L@MOD   CLRF    PP3H                    ; Clear temp variable
000488 AE15           00100                 BTFSS   PP0HHH,7
00048A D002           00101                 BRA             DIV32@SKPNEG
00048C D86E           00102         RCALL   N@GT32                  ; Negate PP0
00048E 8E1D           00103                 BSF             PP3H,7
000490                00104 DIV32@SKPNEG
000490 AE1B           00105                 BTFSS   PP2HHH,7
000492 D00D           00106                 BRA             DIG@DIV
000494 1E18           00107                 COMF    PP2,F                   ; Negate PP2
000496 1E19           00108         COMF    PP2H,F
000498 1E1A           00109         COMF    PP2HH,F
00049A 1E1B           00110         COMF    PP2HHH,F
00049C 2A18           00111         INCF    PP2,F
00049E B4D8           00112         SKPNZ
0004A0 2A19           00113         INCF    PP2H,F
0004A2 B4D8           00114         SKPNZ
0004A4 2A1A           00115         INCF    PP2HH,F
0004A6 B4D8           00116         SKPNZ
0004A8 2A1B           00117         INCF    PP2HHH,F
0004AA 0E80           00118         MOVLW   0X80
0004AC 1A1D           00119                 XORWF   PP3H,F
0004AE 0E20           00120 DIG@DIV MOVLW   32
0004B0 6E1C           00121                 MOVWF   PP3
0004B2 6A28           00122                 CLRF    PPZ
0004B4 6A29           00123                 CLRF    PPZH
0004B6 6A2A           00124                 CLRF    PPZHH
0004B8 6A2B           00125                 CLRF    PPZHHH
0004BA 90D8           00126                 CLRC
0004BC D835           00127 DIV32@1 RCALL   ROT32@PP0                       ; Rotate PP0 Left
                      00128                 RLF     PPZ,F
                      00129                 RLF     PPZH,F
                      00130                 RLF     PPZHH,F
                      00131                 RLF     PPZHHH,F
                      00132                 MOVFW   PP2
0004C8 5C28           00133                 SUBWF   PPZ,W
                      00134                 MOVFW   PP2H
0004CC A0D8           00135                 SKPC
0004CE 0F01           00136                 ADDLW   1
0004D0 5C29           00137                 SUBWF   PPZH,W
                      00138                 MOVFW   PP2HH
0004D4 A0D8           00139                 SKPC
0004D6 0F01           00140                 ADDLW   1
0004D8 5C2A           00141                 SUBWF   PPZHH,W
                      00142                 MOVFW   PP2HHH
0004DC A0D8           00143                 SKPC
0004DE 0F01           00144                 ADDLW   1
0004E0 5C2B           00145                 SUBWF   PPZHHH,W
                      00146                 ;skpnc
                      00147                 ;bra    div32@3
0004E2 E208           00148                 BC              DIV32@3
0004E4 2E1C           00149 DIV32@2 DECFSZ  PP3,F
0004E6 D7EA           00150                 BRA     DIV32@1
0004E8 D81F           00151                 RCALL   ROT32@PP0               ; Rotate PP0 Left
0004EA 9E15           00152                 BCF             PP0HHH,7
0004EC AE1D           00153                 BTFSS   PP3H,7
0004EE D012           00154                 BRA             DIV32@FIN
0004F0 D83C           00155         RCALL   N@GT32                  ; Negate PP0
0004F2 D010           00156                 BRA             DIV32@FIN
                      00157 DIV32@3 MOVFW   PP2
0004F6 5E28           00158                 SUBWF   PPZ,F
                      00159                 MOVFW   PP2H
0004FA A0D8           00160                 SKPC
0004FC 0F01           00161                 ADDLW   1
0004FE 5E29           00162                 SUBWF   PPZH,F
                      00163                 MOVFW   PP2HH
000502 A0D8           00164                 SKPC
000504 0F01           00165                 ADDLW   1
000506 5E2A           00166                 SUBWF   PPZHH,F
                      00167                 MOVFW   PP2HHH
00050A A0D8           00168                 SKPC
00050C 0F01           00169                 ADDLW   1
00050E 5E2B           00170                 SUBWF   PPZHHH,F
000510 80D8           00171                 SETC
000512 D7E8           00172                 BRA     DIV32@2
000514                00173 DIV32@FIN
000514 C02B F01B      00174                 MOVFF   PPZHHH,PP2HHH
000518 C02A F01A      00175         MOVFF   PPZHH,PP2HH
00051C C029 F019      00176         MOVFF   PPZH,PP2H
000520 C028 F018      00177         MOVFF   PPZ,PP2
000524 EFC1 F002      00178         GOTO    I@NT
000528                00179 ROT32@PP0                                               ; Rotate PP0 Left
                      00180                 RLF     PP0,F
                      00181                 RLF     PP0H,F
                      00182                 RLF     PP0HH,F
                      00183                 RLF     PP0HHH,F
000530 0012           00184         RETURN
                      00187  LIST
000532 6A19           00726 D@VD CLRF 25
000534 6A18           00727         CLRF 24
000536 0E10           00728 D@VD2 MOVLW 16
000538 6E1C           00729         MOVWF 28
00053A 3413           00730 DV@LP RLCF 19,W
00053C 3618           00731         RLCF 24,F
00053E 3619           00732         RLCF 25,F
                      00733         MOVFW 22
000542 5E18           00734         SUBWF 24,F
                      00735         MOVFW 23
000546 A0D8           00736         SKPC
000548 3C17           00737         INCFSZ 23,W
00054A 5E19           00738         SUBWF 25,F
00054C E207           00739         BC D@K
                      00740         MOVFW 22
000550 2618           00741         ADDWF 24,F
                      00742         MOVFW 23
000554 B0D8           00743         SKPNC
000556 3C17           00744         INCFSZ 23,W
000558 2619           00745         ADDWF 25,F
00055A 90D8           00746         CLRC
00055C 3612           00747 D@K RLCF 18,F
00055E 3613           00748         RLCF 19,F
000560 2E1C           00749         DECFSZ 28,F
000562 D7EB           00750         BRA DV@LP
                      00751         MOVFW 18
000566 EFC1 F002      00752         GOTO I@NT
00056A 1E12           00753 N@GT32 COMF 18,F
00056C 1E13           00754         COMF 19,F
00056E 1E14           00755         COMF PP0HH,F
000570 1E15           00756         COMF PP0HHH,F
000572 2A12           00757         INCF 18,F
000574 B0D8           00758         SKPNC
000576 2A13           00759         INCF 19,F
000578 B0D8           00760         SKPNC
00057A 2A14           00761         INCF PP0HH,F
00057C B0D8           00762         SKPNC
00057E 2A15           00763         INCF PP0HHH,F
000580 0012           00764         RETURN
000582 0100           00765 I@NT MOVLB 0
000584 0012           00766 I@NTR RETURN
  00000CF1            00767 T300 = 3313
  0000000C            00768 T300H = 12
  00004CF1            00769 N300 = 19697
  0000004C            00770 N300H = 76
  0000066E            00771 T600 = 1646
  00000006            00772 T600H = 6
  0000466E            00773 N600 = 18030
  00000046            00774 N600H = 70
  0000032D            00775 T1200 = 813
  00000003            00776 T1200H = 3
  0000432D            00777 N1200 = 17197
  00000043            00778 N1200H = 67
  0000018C            00779 T2400 = 396
  00000001            00780 T2400H = 1
  0000418C            00781 N2400 = 16780
  00000041            00782 N2400H = 65
  000000BC            00783 T4800 = 188
  000040BC            00784 N4800 = 16572
  00000040            00785 N4800H = 64
  00000054            00786 T9600 = 84
  00004054            00787 N9600 = 16468
  00000040            00788 N9600H = 64
  0000818C            00789 OT2400 = 33164
  00000081            00790 OT2400H = 129
  0000832D            00791 OT1200 = 33581
  00000083            00792 OT1200H = 131
  00008054            00793 OT9600 = 32852
  00000080            00794 OT9600H = 128
  00008CF1            00795 OT300 = 36081
  0000008C            00796 OT300H = 140
  0000C18C            00797 ON2400 = 49548
  000000C1            00798 ON2400H = 193
  0000C32D            00799 ON1200 = 49965
  000000C3            00800 ON1200H = 195
  0000C054            00801 ON9600 = 49236
  000000C0            00802 ON9600H = 192
  0000CCF1            00803 ON300 = 52465
  000000CC            00804 ON300H = 204
  00000001            00805 HOME = 1
  00000007            00806 BELL = 7
  00000008            00807 BKSP = 8
  00000009            00808 TAB = 9
  0000000D            00809 CR = 13
  00000586            00810 START@ EQU $
000586 6A00           00811         CLRF 0
000588 6AAB           00812         CLRF 4011
00058A 6A2F           00813         CLRF _GLCD_FLAG
                      00009  LIST
                      00010
  0000003D            00011  BASE_ENABLED = 61
  003D                00012  VARIABLE BASE_ENABLED#0=61,BASE_ENABLED#1=62,BASE_ENABLED#2=63,BASE_ENABLED#3=64,BASE_ENABLED#4=65,BASE_ENABLED#5=66
  0043                00013  VARIABLE BASE_ENABLED#6=67,BASE_ENABLED#7=68,BASE_ENABLED#8=69
  00000046            00014  BASE_HITS = 70
  0046                00015  VARIABLE BASE_HITS#0=70,BASE_HITS#1=71,BASE_HITS#2=72,BASE_HITS#3=73,BASE_HITS#4=74,BASE_HITS#5=75
  004C                00016  VARIABLE BASE_HITS#6=76,BASE_HITS#7=77,BASE_HITS#8=78
  0000004F            00017  INVADER_XPOS = 79
  004F                00018  VARIABLE INVADER_XPOS#0=79,INVADER_XPOS#1=80,INVADER_XPOS#2=81,INVADER_XPOS#3=82,INVADER_XPOS#4=83,INVADER_XPOS#5=84
  0055                00019  VARIABLE INVADER_XPOS#6=85,INVADER_XPOS#7=86,INVADER_XPOS#8=87,INVADER_XPOS#9=88,INVADER_XPOS#10=89,INVADER_XPOS#11=90
  005B                00020  VARIABLE INVADER_XPOS#12=91,INVADER_XPOS#13=92,INVADER_XPOS#14=93,INVADER_XPOS#15=94,INVADER_XPOS#16=95,INVADER_XPOS#17=96
  00000061            00021  INVADER_YPOS = 97
  0061                00022  VARIABLE INVADER_YPOS#0=97,INVADER_YPOS#1=98,INVADER_YPOS#2=99,INVADER_YPOS#3=100,INVADER_YPOS#4=101,INVADER_YPOS#5=102
  0067                00023  VARIABLE INVADER_YPOS#6=103,INVADER_YPOS#7=104,INVADER_YPOS#8=105,INVADER_YPOS#9=106,INVADER_YPOS#10=107,INVADER_YPOS#11=108
  006D                00024  VARIABLE INVADER_YPOS#12=109,INVADER_YPOS#13=110,INVADER_YPOS#14=111,INVADER_YPOS#15=112,INVADER_YPOS#16=113,INVADER_YPOS#17=114
  00000073            00025  INVADER_ENABLED = 115
  0073                00026  VARIABLE INVADER_ENABLED#0=115,INVADER_ENABLED#1=116,INVADER_ENABLED#2=117,INVADER_ENABLED#3=118,INVADER_ENABLED#4=119,INVADER_ENABLED#5=120
  0079                00027  VARIABLE INVADER_ENABLED#6=121,INVADER_ENABLED#7=122,INVADER_ENABLED#8=123,INVADER_ENABLED#9=124,INVADER_ENABLED#10=125,INVADER_ENABLED#11=126
  007F                00028  VARIABLE INVADER_ENABLED#12=127,INVADER_ENABLED#13=128,INVADER_ENABLED#14=129,INVADER_ENABLED#15=130,INVADER_ENABLED#16=131,INVADER_ENABLED#17=132
  00000085            00029  SHIP_XPOS = 133
  00000086            00030  MISSILE_YPOS = 134
  00000087            00031  MISSILE_XPOS = 135
  00000088            00032  SHIP_SPEED = 136
  00000089            00033  INVADER_TICK = 137
  0000008A            00034  INVADER_MISSILE_TICK = 138
  0000008B            00035  SHIP_MISSILE_TICK = 139
  0000008C            00036  TEMP_LOOP = 140
  0000008D            00037  INVADERS_ENABLED = 141
  0000008E            00038  INVADER_SPEED = 142
  0000008F            00039  BASE_XPOS_TEST = 143
  00000090            00040  INVADER_MISSILE_YPOS = 144
  00000091            00041  INVADER_MISSILE_XPOS = 145
  00000092            00042  INVADER_MISSILE_SPEED = 146
  00000093            00043  DEFAULT_INVADER_SPEED = 147
  00000094            00044  INVADER_MISSILE2_TICK = 148
  00000095            00045  INVADER_MISSILE2_YPOS = 149
  00000096            00046  INVADER_MISSILE2_XPOS = 150
  00000097            00047  INVADER_MISSILE2_SPEED = 151
  00000098            00048  SAUCER_XPOS = 152
  00000099            00049  SAUCER_SPEED = 153
  0000009A            00050  SCORE = 154
  0000009B            00051  SCOREH = 155
  0000009C            00052  SCOREHH = 156
  0000009D            00053  SCOREHHH = 157
  0000009E            00054  LEVEL = 158
  0000009F            00055  LEVELH = 159
  000000A0            00056  LIVES = 160
  000000A1            00057  RANDOM_VALUE = 161
                      00058         #DEFINE INVADER_SOUND_ENABLE NOTE_STATUS,0
                      00059         #DEFINE MISSILE_SOUND_ENABLE NOTE_STATUS,1
                      00060         #DEFINE SAUCER_SOUND_ENABLE NOTE_STATUS,2
                      00061         #DEFINE INTERNAL_INVADER_SOUND_ENABLE NOTE_STATUS,4
                      00062         #DEFINE MISSILE_FIRED MISSILE_STATUS,0
                      00063         #DEFINE MISSILE_HIT MISSILE_STATUS,1
                      00064         #DEFINE TIME_TO_MOVE_INVADERS MISSILE_STATUS,7
                      00065         #DEFINE BASE_HIT MISSILE_STATUS,2
                      00066         #DEFINE TIME_TO_MOVE_SHIP_MISSILE MISSILE_STATUS,3
                      00067         #DEFINE TIME_TO_MOVE_BASE _B#VR1,0
                      00068         #DEFINE INVADERS_DIRECTION _B#VR1,1
                      00069         #DEFINE SHIP_HIT _B#VR1,2
                      00070         #DEFINE TIME_TO_MOVE_INV_MISSILE MISSILE_STATUS,4
                      00071         #DEFINE INVADER_MISSILE_FIRED MISSILE_STATUS,5
                      00072         #DEFINE INVADER_MISSILE_HIT MISSILE_STATUS,6
                      00073         #DEFINE TIME_TO_MOVE_INVADERS_DOWN _B#VR1,3
                      00074         #DEFINE INVADERS_REACHED_BOTTOM _B#VR1,4
                      00075         #DEFINE INVADER_CHARACTER _B#VR1,5
                      00076         #DEFINE TIME_TO_MOVE_INV_MISSILE2 _B#VR1,6
                      00077         #DEFINE INVADER_MISSILE2_FIRED _B#VR1,7
                      00078         #DEFINE INVADER_MISSILE2_HIT _B#VR2,0
                      00079         #DEFINE SAUCER_HIT _B#VR2,1
                      00080         #DEFINE TIME_TO_MOVE_SAUCER _B#VR2,2
                      00081         #DEFINE SAUCER_ENABLED _B#VR2,3
                      00082         #DEFINE L_BUTTON PORTB,0
                      00083         #DEFINE R_BUTTON PORTB,1
                      00084         #DEFINE FIRE_BUTTON PORTB,2
                      00085         #DEFINE SPEAKER PORTB,3
                      00086         #DEFINE SHIP_WIDTH 9
                      00087         #DEFINE INVADER_WIDTH 10
                      00088         #DEFINE INVADER_RIGHT_LIMIT 117
                      00089         #DEFINE SAUCER_WIDTH 14
                      00090         #DEFINE TRUE 1
                      00091         #DEFINE FALSE 0
                      00092         #DEFINE FORWARD 1
                      00093         #DEFINE BACKWARD 0
                      00094         #DEFINE T0IF INTCON,2
                      00095         #DEFINE GIE INTCON,7
  0000058C            00096 F1_SOF EQU $ ; INVADERS.BAS
  0000058C            00097 F2_SOF EQU $ ; PROTON18_G8.INT
  0000058C            00098 F2_000068 EQU $ ; in [PROTON18_G8.INT] ALL_DIGITAL = True ' Set PORTA and PORTE to all digital
00058C 0E07           00099         MOVLW 7
00058E 6EC1           00100         MOVWF ADCON1
  00000590            00101 F2_EOF EQU $ ; PROTON18_G8.INT
  00000590            00102 F1_000137 EQU $ ; in [INVADERS.BAS] Input L_BUTTON
000590 8093           00103         BSF TRISB,0
  00000592            00104 F1_000138 EQU $ ; in [INVADERS.BAS] Input R_BUTTON
000592 8293           00105         BSF TRISB,1
  00000594            00106 F1_000139 EQU $ ; in [INVADERS.BAS] Input FIRE_BUTTON
000594 8493           00107         BSF TRISB,2
  00000596            00108 F1_000140 EQU $ ; in [INVADERS.BAS] Delayms 200           ' Wait for the PICmicro to stabilise
000596 0EC8           00109         MOVLW 200
                      00110         F@CALL DL@MS
  0000059A            00111 F1_000141 EQU $ ; in [INVADERS.BAS] PORTB_PULLUPS = ON
00059A 9EF1           00112         BCF INTCON2,7
  0000059C            00113 F1_000142 EQU $ ; in [INVADERS.BAS] Cls             ' Clear the LCD
                      00114         F@CALL GLCD@CLS
  0000059E            00115 F1_000143 EQU $ ; in [INVADERS.BAS] Goto MAIN_PROGRAM_LOOP        ' Jump over any subroutines
                      00116         F@JUMP MAIN_PROGRAM_LOOP
0005A2                00117 CLEAR_INVADER_MISSILE
  000005A2            00118 F1_000148 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS, INVADER_MISSILE_XPOS
0005A2 C090 F003      00119         MOVFF INVADER_MISSILE_YPOS,GEN
0005A6 5191           00120         MOVF INVADER_MISSILE_XPOS,W
                      00121         F@CALL LCD@UNPLOT
  000005AA            00122 F1_000149 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS, INVADER_MISSILE_XPOS + 1
0005AA C090 F003      00123         MOVFF INVADER_MISSILE_YPOS,GEN
0005AE 2991           00124         INCF INVADER_MISSILE_XPOS,W
                      00125         F@CALL LCD@UNPLOT
  000005B2            00126 F1_000150 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS + 1, INVADER_MISSILE_XPOS
0005B2 2990           00127         INCF INVADER_MISSILE_YPOS,W
0005B4 6E03           00128         MOVWF GEN
0005B6 5191           00129         MOVF INVADER_MISSILE_XPOS,W
                      00130         F@CALL LCD@UNPLOT
  000005BA            00131 F1_000151 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS + 1, INVADER_MISSILE_XPOS + 1
0005BA 2990           00132         INCF INVADER_MISSILE_YPOS,W
0005BC 6E03           00133         MOVWF GEN
0005BE 2991           00134         INCF INVADER_MISSILE_XPOS,W
                      00135         F@CALL LCD@UNPLOT
  000005C2            00136 F1_000152 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS + 2, INVADER_MISSILE_XPOS
0005C2 0E02           00137         MOVLW 2
0005C4 2590           00138         ADDWF INVADER_MISSILE_YPOS,W
0005C6 6E03           00139         MOVWF GEN
0005C8 5191           00140         MOVF INVADER_MISSILE_XPOS,W
                      00141         F@CALL LCD@UNPLOT
  000005CC            00142 F1_000153 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS + 2, INVADER_MISSILE_XPOS + 1
0005CC 0E02           00143         MOVLW 2
0005CE 2590           00144         ADDWF INVADER_MISSILE_YPOS,W
0005D0 6E03           00145         MOVWF GEN
0005D2 2991           00146         INCF INVADER_MISSILE_XPOS,W
                      00147         F@CALL LCD@UNPLOT
  000005D6            00148 F1_000154 EQU $ ; in [INVADERS.BAS] Return
0005D6 0012           00149         RETURN
0005D8                00150 DRAW_INVADER_MISSILE
  000005D8            00151 F1_000156 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS, INVADER_MISSILE_XPOS
0005D8 C090 F003      00152         MOVFF INVADER_MISSILE_YPOS,GEN
0005DC 5191           00153         MOVF INVADER_MISSILE_XPOS,W
                      00154         F@CALL LCD@UNPLOT
  000005E0            00155 F1_000157 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE_YPOS, INVADER_MISSILE_XPOS + 1
0005E0 C090 F003      00156         MOVFF INVADER_MISSILE_YPOS,GEN
0005E4 2991           00157         INCF INVADER_MISSILE_XPOS,W
                      00158         F@CALL LCD@UNPLOT
  000005E8            00159 F1_000158 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE_YPOS + 1, INVADER_MISSILE_XPOS
0005E8 2990           00160         INCF INVADER_MISSILE_YPOS,W
0005EA 6E03           00161         MOVWF GEN
0005EC 5191           00162         MOVF INVADER_MISSILE_XPOS,W
                      00163         F@CALL LCD@PLOT
  000005F0            00164 F1_000159 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE_YPOS + 1, INVADER_MISSILE_XPOS + 1
0005F0 2990           00165         INCF INVADER_MISSILE_YPOS,W
0005F2 6E03           00166         MOVWF GEN
0005F4 2991           00167         INCF INVADER_MISSILE_XPOS,W
                      00168         F@CALL LCD@PLOT
  000005F8            00169 F1_000160 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE_YPOS + 2, INVADER_MISSILE_XPOS
0005F8 0E02           00170         MOVLW 2
0005FA 2590           00171         ADDWF INVADER_MISSILE_YPOS,W
0005FC 6E03           00172         MOVWF GEN
0005FE 5191           00173         MOVF INVADER_MISSILE_XPOS,W
                      00174         F@CALL LCD@PLOT
  00000602            00175 F1_000161 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE_YPOS + 2, INVADER_MISSILE_XPOS + 1
000602 0E02           00176         MOVLW 2
000604 2590           00177         ADDWF INVADER_MISSILE_YPOS,W
000606 6E03           00178         MOVWF GEN
000608 2991           00179         INCF INVADER_MISSILE_XPOS,W
                      00180         F@CALL LCD@PLOT
  0000060C            00181 F1_000162 EQU $ ; in [INVADERS.BAS] Return
00060C 0012           00182         RETURN
00060E                00183 CLEAR_INVADER_MISSILE2
  0000060E            00184 F1_000167 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS, INVADER_MISSILE2_XPOS
00060E C095 F003      00185         MOVFF INVADER_MISSILE2_YPOS,GEN
000612 5196           00186         MOVF INVADER_MISSILE2_XPOS,W
                      00187         F@CALL LCD@UNPLOT
  00000616            00188 F1_000168 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS, INVADER_MISSILE2_XPOS + 1
000616 C095 F003      00189         MOVFF INVADER_MISSILE2_YPOS,GEN
00061A 2996           00190         INCF INVADER_MISSILE2_XPOS,W
                      00191         F@CALL LCD@UNPLOT
  0000061E            00192 F1_000169 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS + 1, INVADER_MISSILE2_XPOS
00061E 2995           00193         INCF INVADER_MISSILE2_YPOS,W
000620 6E03           00194         MOVWF GEN
000622 5196           00195         MOVF INVADER_MISSILE2_XPOS,W
                      00196         F@CALL LCD@UNPLOT
  00000626            00197 F1_000170 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS + 1, INVADER_MISSILE2_XPOS + 1
000626 2995           00198         INCF INVADER_MISSILE2_YPOS,W
000628 6E03           00199         MOVWF GEN
00062A 2996           00200         INCF INVADER_MISSILE2_XPOS,W
                      00201         F@CALL LCD@UNPLOT
  0000062E            00202 F1_000171 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS + 2, INVADER_MISSILE2_XPOS
00062E 0E02           00203         MOVLW 2
000630 2595           00204         ADDWF INVADER_MISSILE2_YPOS,W
000632 6E03           00205         MOVWF GEN
000634 5196           00206         MOVF INVADER_MISSILE2_XPOS,W
                      00207         F@CALL LCD@UNPLOT
  00000638            00208 F1_000172 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS + 2, INVADER_MISSILE2_XPOS + 1
000638 0E02           00209         MOVLW 2
00063A 2595           00210         ADDWF INVADER_MISSILE2_YPOS,W
00063C 6E03           00211         MOVWF GEN
00063E 2996           00212         INCF INVADER_MISSILE2_XPOS,W
                      00213         F@CALL LCD@UNPLOT
  00000642            00214 F1_000173 EQU $ ; in [INVADERS.BAS] Return
000642 0012           00215         RETURN
000644                00216 DRAW_INVADER_MISSILE2
  00000644            00217 F1_000175 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS, INVADER_MISSILE2_XPOS
000644 C095 F003      00218         MOVFF INVADER_MISSILE2_YPOS,GEN
000648 5196           00219         MOVF INVADER_MISSILE2_XPOS,W
                      00220         F@CALL LCD@UNPLOT
  0000064C            00221 F1_000176 EQU $ ; in [INVADERS.BAS] UnPlot INVADER_MISSILE2_YPOS, INVADER_MISSILE2_XPOS + 1
00064C C095 F003      00222         MOVFF INVADER_MISSILE2_YPOS,GEN
000650 2996           00223         INCF INVADER_MISSILE2_XPOS,W
                      00224         F@CALL LCD@UNPLOT
  00000654            00225 F1_000177 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE2_YPOS + 1, INVADER_MISSILE2_XPOS
000654 2995           00226         INCF INVADER_MISSILE2_YPOS,W
000656 6E03           00227         MOVWF GEN
000658 5196           00228         MOVF INVADER_MISSILE2_XPOS,W
                      00229         F@CALL LCD@PLOT
  0000065C            00230 F1_000178 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE2_YPOS + 1, INVADER_MISSILE2_XPOS + 1
00065C 2995           00231         INCF INVADER_MISSILE2_YPOS,W
00065E 6E03           00232         MOVWF GEN
000660 2996           00233         INCF INVADER_MISSILE2_XPOS,W
                      00234         F@CALL LCD@PLOT
  00000664            00235 F1_000179 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE2_YPOS + 2, INVADER_MISSILE2_XPOS
000664 0E02           00236         MOVLW 2
000666 2595           00237         ADDWF INVADER_MISSILE2_YPOS,W
000668 6E03           00238         MOVWF GEN
00066A 5196           00239         MOVF INVADER_MISSILE2_XPOS,W
                      00240         F@CALL LCD@PLOT
  00000670            00241 F1_000180 EQU $ ; in [INVADERS.BAS] Plot INVADER_MISSILE2_YPOS + 2, INVADER_MISSILE2_XPOS + 1
000670 0E02           00242         MOVLW 2
000672 2595           00243         ADDWF INVADER_MISSILE2_YPOS,W
000674 6E03           00244         MOVWF GEN
000676 2996           00245         INCF INVADER_MISSILE2_XPOS,W
                      00246         F@CALL LCD@PLOT
  0000067C            00247 F1_000181 EQU $ ; in [INVADERS.BAS] Return
00067C 0012           00248         RETURN
00067E                00249 UPDATE_BASES
  0000067E            00250 F1_000185 EQU $ ; in [INVADERS.BAS] Print at 6,2,2 + BASE_HITS#0,8 + BASE_HITS#1,14 + BASE_HITS#2,_
00067E 0E06           00251         MOVLW 6
000680 6E03           00252         MOVWF GEN
000682 0E02           00253         MOVLW 2
                      00254         F@CALL GLCD_CUR
000686 0E02           00255         MOVLW 2
000688 2446           00256         ADDWF BASE_HITS#0,W
00068A 6E18           00257         MOVWF PP2
                      00258         F@CALL PRINT
000690 0E08           00259         MOVLW 8
000692 2447           00260         ADDWF BASE_HITS#1,W
000694 6E18           00261         MOVWF PP2
                      00262         F@CALL PRINT
00069A 0E0E           00263         MOVLW 14
00069C 2448           00264         ADDWF BASE_HITS#2,W
00069E 6E18           00265         MOVWF PP2
                      00266         F@CALL PRINT
0006A4 0E06           00267         MOVLW 6
0006A6 6E03           00268         MOVWF GEN
0006A8 0E09           00269         MOVLW 9
                      00270         F@CALL GLCD_CUR
0006AC 0E02           00271         MOVLW 2
0006AE 2449           00272         ADDWF BASE_HITS#3,W
0006B0 6E18           00273         MOVWF PP2
                      00274         F@CALL PRINT
0006B6 0E08           00275         MOVLW 8
0006B8 244A           00276         ADDWF BASE_HITS#4,W
0006BA 6E18           00277         MOVWF PP2
                      00278         F@CALL PRINT
0006C0 0E0E           00279         MOVLW 14
0006C2 244B           00280         ADDWF BASE_HITS#5,W
0006C4 6E18           00281         MOVWF PP2
                      00282         F@CALL PRINT
0006CA 0E06           00283         MOVLW 6
0006CC 6E03           00284         MOVWF GEN
0006CE 0E0F           00285         MOVLW 15
                      00286         F@CALL GLCD_CUR
0006D2 0E02           00287         MOVLW 2
0006D4 244C           00288         ADDWF BASE_HITS#6,W
0006D6 6E18           00289         MOVWF PP2
                      00290         F@CALL PRINT
0006DC 0E08           00291         MOVLW 8
0006DE 244D           00292         ADDWF BASE_HITS#7,W
0006E0 6E18           00293         MOVWF PP2
                      00294         F@CALL PRINT
0006E6 0E0E           00295         MOVLW 14
0006E8 244E           00296         ADDWF BASE_HITS#8,W
0006EA 6E18           00297         MOVWF PP2
                      00298         F@CALL PRINT
  000006F0            00299 F1_000188 EQU $ ; in [INVADERS.BAS] Return
0006F0 0012           00300         RETURN
0006F2                00301 CHECK_BASE_HIT
  000006F2            00302 F1_000194 EQU $ ; in [INVADERS.BAS] BASE_HIT = FALSE          ' Default to no hit detected
0006F2 943B           00303         BCF MISSILE_STATUS,2
  000006F4            00304 F1_000195 EQU $ ; in [INVADERS.BAS] Select BASE_XPOS_TEST
  000006F4            00305 F1_000196 EQU $ ; in [INVADERS.BAS] Case 12 to 17          ' Has the missile XPOS hit BASE 1, ELEMENT 0
0006F4 0E0B           00306         MOVLW 11
0006F6 658F           00307         CPFSGT BASE_XPOS_TEST
                      00308         F@JUMP BC@LL2
0006FC 0E12           00309         MOVLW 18
0006FE 618F           00310         CPFSLT BASE_XPOS_TEST
                      00311         F@JUMP BC@LL2
  00000704            00312 F1_000197 EQU $ ; in [INVADERS.BAS] If BASE_HITS#0 < 5 AND BASE_ENABLED#0 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
000704 0E05           00313         MOVLW 5
000706 5C46           00314         SUBWF BASE_HITS#0,W
000708 0E01           00315         MOVLW 1
00070A B0D8           00316         BTFSC STATUS,0
00070C 6AE8           00317         CLRW
00070E 6E2C           00318         MOVWF SP#P9
000710 C03D F012      00319         MOVFF BASE_ENABLED#0,PP0
000714 0E01           00320         MOVLW 1
                      00321         F@CALL T@EB
00071A 142C           00322         ANDWF SP#P9,W
00071C B4D8           00323         BTFSC STATUS,2
                      00324         GO@TO BC@LL5
  00000722            00325 F1_000198 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#0        ' Increment the amount of hits the base element has sustained
000722 2A46           00326         INCF BASE_HITS#0,F
  00000724            00327 F1_000199 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
000724 843B           00328         BSF MISSILE_STATUS,2
                      00329         F@JUMP BC@LL6
00072A                00330 BC@LL5
  0000072A            00331 F1_000200 EQU $ ; in [INVADERS.BAS] Else
  0000072A            00332 F1_000201 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#0 = FALSE      ' Disable the base element
00072A 6A3D           00333         CLRF BASE_ENABLED#0
  0000072C            00334 F1_000202 EQU $ ; in [INVADERS.BAS] Endif
00072C                00335 BC@LL6
                      00336         F@JUMP BC@LL1
000730                00337 BC@LL2
  00000730            00338 F1_000203 EQU $ ; in [INVADERS.BAS] Case 18 to 23          ' Has the missile XPOS hit BASE 1, ELEMENT 1
000730 0E11           00339         MOVLW 17
000732 658F           00340         CPFSGT BASE_XPOS_TEST
                      00341         F@JUMP BC@LL8
000738 0E18           00342         MOVLW 24
00073A 618F           00343         CPFSLT BASE_XPOS_TEST
                      00344         F@JUMP BC@LL8
  00000740            00345 F1_000204 EQU $ ; in [INVADERS.BAS] If BASE_HITS#1 < 5 AND BASE_ENABLED#1 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
000740 0E05           00346         MOVLW 5
000742 5C47           00347         SUBWF BASE_HITS#1,W
000744 0E01           00348         MOVLW 1
000746 B0D8           00349         BTFSC STATUS,0
000748 6AE8           00350         CLRW
00074A 6E2C           00351         MOVWF SP#P9
00074C C03E F012      00352         MOVFF BASE_ENABLED#1,PP0
000750 0E01           00353         MOVLW 1
                      00354         F@CALL T@EB
000756 142C           00355         ANDWF SP#P9,W
000758 B4D8           00356         BTFSC STATUS,2
                      00357         GO@TO BC@LL10
  0000075E            00358 F1_000205 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#1        ' Increment the amount of hits the base element has sustained
00075E 2A47           00359         INCF BASE_HITS#1,F
  00000760            00360 F1_000206 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
000760 843B           00361         BSF MISSILE_STATUS,2
                      00362         F@JUMP BC@LL11
000766                00363 BC@LL10
  00000766            00364 F1_000207 EQU $ ; in [INVADERS.BAS] Else
  00000766            00365 F1_000208 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#1 = FALSE      ' Disable the base element
000766 6A3E           00366         CLRF BASE_ENABLED#1
  00000768            00367 F1_000209 EQU $ ; in [INVADERS.BAS] Endif
000768                00368 BC@LL11
                      00369         F@JUMP BC@LL1
00076C                00370 BC@LL8
  0000076C            00371 F1_000210 EQU $ ; in [INVADERS.BAS] Case 24 to 29          ' Has the missile XPOS hit BASE 1, ELEMENT 2
00076C 0E17           00372         MOVLW 23
00076E 658F           00373         CPFSGT BASE_XPOS_TEST
                      00374         F@JUMP BC@LL13
000774 0E1E           00375         MOVLW 30
000776 618F           00376         CPFSLT BASE_XPOS_TEST
                      00377         F@JUMP BC@LL13
  0000077C            00378 F1_000211 EQU $ ; in [INVADERS.BAS] If BASE_HITS#2 < 5 AND BASE_ENABLED#2 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
00077C 0E05           00379         MOVLW 5
00077E 5C48           00380         SUBWF BASE_HITS#2,W
000780 0E01           00381         MOVLW 1
000782 B0D8           00382         BTFSC STATUS,0
000784 6AE8           00383         CLRW
000786 6E2C           00384         MOVWF SP#P9
000788 C03F F012      00385         MOVFF BASE_ENABLED#2,PP0
00078C 0E01           00386         MOVLW 1
                      00387         F@CALL T@EB
000792 142C           00388         ANDWF SP#P9,W
000794 B4D8           00389         BTFSC STATUS,2
                      00390         GO@TO BC@LL15
  0000079A            00391 F1_000212 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#2        ' Increment the amount of hits the base element has sustained
00079A 2A48           00392         INCF BASE_HITS#2,F
  0000079C            00393 F1_000213 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
00079C 843B           00394         BSF MISSILE_STATUS,2
                      00395         F@JUMP BC@LL16
0007A2                00396 BC@LL15
  000007A2            00397 F1_000214 EQU $ ; in [INVADERS.BAS] Else
  000007A2            00398 F1_000215 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#2 = FALSE      ' Disable the base element
0007A2 6A3F           00399         CLRF BASE_ENABLED#2
  000007A4            00400 F1_000216 EQU $ ; in [INVADERS.BAS] Endif
0007A4                00401 BC@LL16
                      00402         F@JUMP BC@LL1
0007A8                00403 BC@LL13
  000007A8            00404 F1_000217 EQU $ ; in [INVADERS.BAS] Case 54 to 59          ' Has the missile XPOS hit BASE 2, ELEMENT 3
0007A8 0E35           00405         MOVLW 53
0007AA 658F           00406         CPFSGT BASE_XPOS_TEST
                      00407         F@JUMP BC@LL18
0007B0 0E3C           00408         MOVLW 60
0007B2 618F           00409         CPFSLT BASE_XPOS_TEST
                      00410         F@JUMP BC@LL18
  000007B8            00411 F1_000218 EQU $ ; in [INVADERS.BAS] If BASE_HITS#3 < 5 AND BASE_ENABLED#3 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
0007B8 0E05           00412         MOVLW 5
0007BA 5C49           00413         SUBWF BASE_HITS#3,W
0007BC 0E01           00414         MOVLW 1
0007BE B0D8           00415         BTFSC STATUS,0
0007C0 6AE8           00416         CLRW
0007C2 6E2C           00417         MOVWF SP#P9
0007C4 C040 F012      00418         MOVFF BASE_ENABLED#3,PP0
0007C8 0E01           00419         MOVLW 1
                      00420         F@CALL T@EB
0007CE 142C           00421         ANDWF SP#P9,W
0007D0 B4D8           00422         BTFSC STATUS,2
                      00423         GO@TO BC@LL20
  000007D6            00424 F1_000219 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#3        ' Increment the amount of hits the base element has sustained
0007D6 2A49           00425         INCF BASE_HITS#3,F
  000007D8            00426 F1_000220 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
0007D8 843B           00427         BSF MISSILE_STATUS,2
                      00428         F@JUMP BC@LL21
0007DE                00429 BC@LL20
  000007DE            00430 F1_000221 EQU $ ; in [INVADERS.BAS] Else
  000007DE            00431 F1_000222 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#3 = FALSE      ' Disable the base element
0007DE 6A40           00432         CLRF BASE_ENABLED#3
  000007E0            00433 F1_000223 EQU $ ; in [INVADERS.BAS] Endif
0007E0                00434 BC@LL21
                      00435         F@JUMP BC@LL1
0007E4                00436 BC@LL18
  000007E4            00437 F1_000224 EQU $ ; in [INVADERS.BAS] Case 60 to 65          ' Has the missile XPOS hit BASE 2, ELEMENT 4
0007E4 0E3B           00438         MOVLW 59
0007E6 658F           00439         CPFSGT BASE_XPOS_TEST
                      00440         F@JUMP BC@LL23
0007EC 0E42           00441         MOVLW 66
0007EE 618F           00442         CPFSLT BASE_XPOS_TEST
                      00443         F@JUMP BC@LL23
  000007F4            00444 F1_000225 EQU $ ; in [INVADERS.BAS] If BASE_HITS#4 < 5 AND BASE_ENABLED#4 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
0007F4 0E05           00445         MOVLW 5
0007F6 5C4A           00446         SUBWF BASE_HITS#4,W
0007F8 0E01           00447         MOVLW 1
0007FA B0D8           00448         BTFSC STATUS,0
0007FC 6AE8           00449         CLRW
0007FE 6E2C           00450         MOVWF SP#P9
000800 C041 F012      00451         MOVFF BASE_ENABLED#4,PP0
000804 0E01           00452         MOVLW 1
                      00453         F@CALL T@EB
00080A 142C           00454         ANDWF SP#P9,W
00080C B4D8           00455         BTFSC STATUS,2
                      00456         GO@TO BC@LL25
  00000812            00457 F1_000226 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#4        ' Increment the amount of hits the base element has sustained
000812 2A4A           00458         INCF BASE_HITS#4,F
  00000814            00459 F1_000227 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
000814 843B           00460         BSF MISSILE_STATUS,2
                      00461         F@JUMP BC@LL26
00081A                00462 BC@LL25
  0000081A            00463 F1_000228 EQU $ ; in [INVADERS.BAS] Else
  0000081A            00464 F1_000229 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#4 = FALSE      ' Disable the base element
00081A 6A41           00465         CLRF BASE_ENABLED#4
  0000081C            00466 F1_000230 EQU $ ; in [INVADERS.BAS] Endif
00081C                00467 BC@LL26
                      00468         F@JUMP BC@LL1
000820                00469 BC@LL23
  00000820            00470 F1_000231 EQU $ ; in [INVADERS.BAS] Case 66 to 71          ' Has the missile XPOS hit BASE 2, ELEMENT 5
000820 0E41           00471         MOVLW 65
000822 658F           00472         CPFSGT BASE_XPOS_TEST
                      00473         F@JUMP BC@LL28
000828 0E48           00474         MOVLW 72
00082A 618F           00475         CPFSLT BASE_XPOS_TEST
                      00476         F@JUMP BC@LL28
  00000830            00477 F1_000232 EQU $ ; in [INVADERS.BAS] If BASE_HITS#5 < 5 AND BASE_ENABLED#5 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
000830 0E05           00478         MOVLW 5
000832 5C4B           00479         SUBWF BASE_HITS#5,W
000834 0E01           00480         MOVLW 1
000836 B0D8           00481         BTFSC STATUS,0
000838 6AE8           00482         CLRW
00083A 6E2C           00483         MOVWF SP#P9
00083C C042 F012      00484         MOVFF BASE_ENABLED#5,PP0
000840 0E01           00485         MOVLW 1
                      00486         F@CALL T@EB
000846 142C           00487         ANDWF SP#P9,W
000848 B4D8           00488         BTFSC STATUS,2
                      00489         GO@TO BC@LL30
  0000084E            00490 F1_000233 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#5        ' Increment the amount of hits the base element has sustained
00084E 2A4B           00491         INCF BASE_HITS#5,F
  00000850            00492 F1_000234 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
000850 843B           00493         BSF MISSILE_STATUS,2
                      00494         F@JUMP BC@LL31
000856                00495 BC@LL30
  00000856            00496 F1_000235 EQU $ ; in [INVADERS.BAS] Else
  00000856            00497 F1_000236 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#5 = FALSE      ' Disable the base element
000856 6A42           00498         CLRF BASE_ENABLED#5
  00000858            00499 F1_000237 EQU $ ; in [INVADERS.BAS] Endif
000858                00500 BC@LL31
                      00501         F@JUMP BC@LL1
00085C                00502 BC@LL28
  0000085C            00503 F1_000238 EQU $ ; in [INVADERS.BAS] Case 90 to 95          ' Has the missile XPOS hit BASE 3, ELEMENT 6
00085C 0E59           00504         MOVLW 89
00085E 658F           00505         CPFSGT BASE_XPOS_TEST
                      00506         F@JUMP BC@LL33
000864 0E60           00507         MOVLW 96
000866 618F           00508         CPFSLT BASE_XPOS_TEST
                      00509         F@JUMP BC@LL33
  0000086C            00510 F1_000239 EQU $ ; in [INVADERS.BAS] If BASE_HITS#6 < 5 AND BASE_ENABLED#6 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
00086C 0E05           00511         MOVLW 5
00086E 5C4C           00512         SUBWF BASE_HITS#6,W
000870 0E01           00513         MOVLW 1
000872 B0D8           00514         BTFSC STATUS,0
000874 6AE8           00515         CLRW
000876 6E2C           00516         MOVWF SP#P9
000878 C043 F012      00517         MOVFF BASE_ENABLED#6,PP0
00087C 0E01           00518         MOVLW 1
                      00519         F@CALL T@EB
000882 142C           00520         ANDWF SP#P9,W
000884 B4D8           00521         BTFSC STATUS,2
                      00522         GO@TO BC@LL35
  0000088A            00523 F1_000240 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#6        ' Increment the amount of hits the base element has sustained
00088A 2A4C           00524         INCF BASE_HITS#6,F
  0000088C            00525 F1_000241 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
00088C 843B           00526         BSF MISSILE_STATUS,2
                      00527         F@JUMP BC@LL36
000892                00528 BC@LL35
  00000892            00529 F1_000242 EQU $ ; in [INVADERS.BAS] Else
  00000892            00530 F1_000243 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#6 = FALSE      ' Disable the base element
000892 6A43           00531         CLRF BASE_ENABLED#6
  00000894            00532 F1_000244 EQU $ ; in [INVADERS.BAS] Endif
000894                00533 BC@LL36
                      00534         F@JUMP BC@LL1
000898                00535 BC@LL33
  00000898            00536 F1_000245 EQU $ ; in [INVADERS.BAS] Case 96 to 101          ' Has the missile XPOS hit BASE 3, ELEMENT 7
000898 0E5F           00537         MOVLW 95
00089A 658F           00538         CPFSGT BASE_XPOS_TEST
                      00539         F@JUMP BC@LL38
0008A0 0E66           00540         MOVLW 102
0008A2 618F           00541         CPFSLT BASE_XPOS_TEST
                      00542         F@JUMP BC@LL38
  000008A8            00543 F1_000246 EQU $ ; in [INVADERS.BAS] If BASE_HITS#7 < 5 AND BASE_ENABLED#7 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
0008A8 0E05           00544         MOVLW 5
0008AA 5C4D           00545         SUBWF BASE_HITS#7,W
0008AC 0E01           00546         MOVLW 1
0008AE B0D8           00547         BTFSC STATUS,0
0008B0 6AE8           00548         CLRW
0008B2 6E2C           00549         MOVWF SP#P9
0008B4 C044 F012      00550         MOVFF BASE_ENABLED#7,PP0
0008B8 0E01           00551         MOVLW 1
                      00552         F@CALL T@EB
0008BE 142C           00553         ANDWF SP#P9,W
0008C0 B4D8           00554         BTFSC STATUS,2
                      00555         GO@TO BC@LL40
  000008C6            00556 F1_000247 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#7        ' Increment the amount of hits the base element has sustained
0008C6 2A4D           00557         INCF BASE_HITS#7,F
  000008C8            00558 F1_000248 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
0008C8 843B           00559         BSF MISSILE_STATUS,2
                      00560         F@JUMP BC@LL41
0008CE                00561 BC@LL40
  000008CE            00562 F1_000249 EQU $ ; in [INVADERS.BAS] Else
  000008CE            00563 F1_000250 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#7 = FALSE      ' Disable the base element
0008CE 6A44           00564         CLRF BASE_ENABLED#7
  000008D0            00565 F1_000251 EQU $ ; in [INVADERS.BAS] Endif
0008D0                00566 BC@LL41
                      00567         F@JUMP BC@LL1
0008D4                00568 BC@LL38
  000008D4            00569 F1_000252 EQU $ ; in [INVADERS.BAS] Case 102 to 107          ' Has the missile XPOS hit BASE 3, ELEMENT 8
0008D4 0E65           00570         MOVLW 101
0008D6 658F           00571         CPFSGT BASE_XPOS_TEST
                      00572         F@JUMP BC@LL43
0008DC 0E6C           00573         MOVLW 108
0008DE 618F           00574         CPFSLT BASE_XPOS_TEST
                      00575         F@JUMP BC@LL43
  000008E4            00576 F1_000253 EQU $ ; in [INVADERS.BAS] If BASE_HITS#8 < 5 AND BASE_ENABLED#8 = TRUE Then ' Is the base element enabled, and has had less than 5 hits ?
0008E4 0E05           00577         MOVLW 5
0008E6 5C4E           00578         SUBWF BASE_HITS#8,W
0008E8 0E01           00579         MOVLW 1
0008EA B0D8           00580         BTFSC STATUS,0
0008EC 6AE8           00581         CLRW
0008EE 6E2C           00582         MOVWF SP#P9
0008F0 C045 F012      00583         MOVFF BASE_ENABLED#8,PP0
0008F4 0E01           00584         MOVLW 1
                      00585         F@CALL T@EB
0008FA 142C           00586         ANDWF SP#P9,W
0008FC B4D8           00587         BTFSC STATUS,2
                      00588         GO@TO BC@LL45
  00000902            00589 F1_000254 EQU $ ; in [INVADERS.BAS] Inc BASE_HITS#8        ' Increment the amount of hits the base element has sustained
000902 2A4E           00590         INCF BASE_HITS#8,F
  00000904            00591 F1_000255 EQU $ ; in [INVADERS.BAS] BASE_HIT = TRUE        ' Indicate a missile has hit a target
000904 843B           00592         BSF MISSILE_STATUS,2
                      00593         F@JUMP BC@LL46
00090A                00594 BC@LL45
  0000090A            00595 F1_000256 EQU $ ; in [INVADERS.BAS] Else
  0000090A            00596 F1_000257 EQU $ ; in [INVADERS.BAS] BASE_ENABLED#8 = FALSE      ' Disable the base element
00090A 6A45           00597         CLRF BASE_ENABLED#8
  0000090C            00598 F1_000258 EQU $ ; in [INVADERS.BAS] Endif
00090C                00599 BC@LL46
  0000090C            00600 F1_000259 EQU $ ; in [INVADERS.BAS] End Select
00090C                00601 BC@LL43
00090C                00602 BC@LL1
  0000090C            00603 F1_000260 EQU $ ; in [INVADERS.BAS] If BASE_HIT = TRUE Then Gosub UPDATE_BASES   ' Update the base shapes if a hit was detected
00090C A43B           00604         BTFSS MISSILE_STATUS,2
                      00605         GO@TO BC@LL48
                      00606         F@CALL UPDATE_BASES
000914                00607 BC@LL48
  00000914            00608 F1_000261 EQU $ ; in [INVADERS.BAS] Return
000914 0012           00609         RETURN
000916                00610 MOVE_INVADER_MISSILE
  00000916            00611 F1_000268 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_FIRED = TRUE Then          ' Don't enter the routine if the invader's missile is already flying
000916 AA3B           00612         BTFSS MISSILE_STATUS,5
                      00613         GO@TO BC@LL50
  0000091C            00614 F1_000269 EQU $ ; in [INVADERS.BAS] If TIME_TO_MOVE_INV_MISSILE = TRUE Then       ' Is it time to move the invader's missile ?
00091C A83B           00615         BTFSS MISSILE_STATUS,4
                      00616         GO@TO BC@LL52
  00000922            00617 F1_000270 EQU $ ; in [INVADERS.BAS] Gosub DRAW_INVADER_MISSILE
                      00618         F@CALL DRAW_INVADER_MISSILE
  00000924            00619 F1_000271 EQU $ ; in [INVADERS.BAS] Inc INVADER_MISSILE_YPOS
000924 2B90           00620         INCF INVADER_MISSILE_YPOS,F
  00000926            00621 F1_000272 EQU $ ; in [INVADERS.BAS] Endif
000926                00622 BC@LL52
  00000926            00623 F1_000273 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_YPOS >= 63 OR INVADER_MISSILE_HIT = TRUE Then ' Has the invader's missile reached the bottom of the display or hit something ?
000926 0E3F           00624         MOVLW 63
000928 5D90           00625         SUBWF INVADER_MISSILE_YPOS,W
00092A 6AE8           00626         CLRW
00092C B0D8           00627         BTFSC STATUS,0
00092E 0E01           00628         MOVLW 1
000930 6E2C           00629         MOVWF SP#P9
000932 6AE8           00630         CLRW
000934 BC3B           00631         BTFSC MISSILE_STATUS,6
000936 0E01           00632         MOVLW 1
000938 102C           00633         IORWF SP#P9,W
00093A B4D8           00634         BTFSC STATUS,2
                      00635         GO@TO BC@LL54
  00000940            00636 F1_000274 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_FIRED = FALSE        ' Yes. So signal the invader's missile is finished
000940 9A3B           00637         BCF MISSILE_STATUS,5
  00000942            00638 F1_000275 EQU $ ; in [INVADERS.BAS] Gosub CLEAR_INVADER_MISSILE         ' Clear the invader's missile
                      00639         F@CALL CLEAR_INVADER_MISSILE
  00000944            00640 F1_000276 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_HIT = FALSE
000944 9C3B           00641         BCF MISSILE_STATUS,6
  00000946            00642 F1_000277 EQU $ ; in [INVADERS.BAS] Endif
000946                00643 BC@LL54
  00000946            00644 F1_000278 EQU $ ; in [INVADERS.BAS] Endif
000946                00645 BC@LL50
  00000946            00646 F1_000279 EQU $ ; in [INVADERS.BAS] Return
000946 0012           00647         RETURN
000948                00648 MOVE_INVADER_MISSILE2
  00000948            00649 F1_000286 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_FIRED = TRUE Then          ' Don't enter the routine if the invader's missile is already flying
000948 AE2D           00650         BTFSS _B#VR1,7
                      00651         GO@TO BC@LL56
  0000094E            00652 F1_000287 EQU $ ; in [INVADERS.BAS] If TIME_TO_MOVE_INV_MISSILE2 = TRUE Then       ' Is it time to move the invader's missile ?
00094E AC2D           00653         BTFSS _B#VR1,6
                      00654         GO@TO BC@LL58
  00000954            00655 F1_000288 EQU $ ; in [INVADERS.BAS] Gosub DRAW_INVADER_MISSILE2
                      00656         F@CALL DRAW_INVADER_MISSILE2
  00000956            00657 F1_000289 EQU $ ; in [INVADERS.BAS] Inc INVADER_MISSILE2_YPOS
000956 2B95           00658         INCF INVADER_MISSILE2_YPOS,F
  00000958            00659 F1_000290 EQU $ ; in [INVADERS.BAS] Endif
000958                00660 BC@LL58
  00000958            00661 F1_000291 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_YPOS >= 63 OR INVADER_MISSILE2_HIT = TRUE Then ' Has the invader's missile reached the bottom of the display or hit something ?
000958 0E3F           00662         MOVLW 63
00095A 5D95           00663         SUBWF INVADER_MISSILE2_YPOS,W
00095C 6AE8           00664         CLRW
00095E B0D8           00665         BTFSC STATUS,0
000960 0E01           00666         MOVLW 1
000962 6E2C           00667         MOVWF SP#P9
000964 6AE8           00668         CLRW
000966 B02E           00669         BTFSC _B#VR2,0
000968 0E01           00670         MOVLW 1
00096A 102C           00671         IORWF SP#P9,W
00096C B4D8           00672         BTFSC STATUS,2
                      00673         GO@TO BC@LL60
  00000972            00674 F1_000292 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_FIRED = FALSE        ' Yes. So signal the invader's missile is finished
000972 9E2D           00675         BCF _B#VR1,7
  00000974            00676 F1_000293 EQU $ ; in [INVADERS.BAS] Gosub CLEAR_INVADER_MISSILE2         ' Clear the invader's missile
                      00677         F@CALL CLEAR_INVADER_MISSILE2
  00000976            00678 F1_000294 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_HIT = FALSE
000976 902E           00679         BCF _B#VR2,0
  00000978            00680 F1_000295 EQU $ ; in [INVADERS.BAS] Endif
000978                00681 BC@LL60
  00000978            00682 F1_000296 EQU $ ; in [INVADERS.BAS] Endif
000978                00683 BC@LL56
  00000978            00684 F1_000297 EQU $ ; in [INVADERS.BAS] Return
000978 0012           00685         RETURN
00097A                00686 FIRE_INVADER_MISSILE
  0000097A            00687 F1_000306 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_FIRED = FALSE Then          ' Is it OK to fire an invader missile ?
00097A BA3B           00688         BTFSC MISSILE_STATUS,5
                      00689         GO@TO BC@LL62
  00000980            00690 F1_000307 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0
000980 6A3C           00691         CLRF INVADER_LOOP
  00000982            00692 F1_000308 EQU $ ; in [INVADERS.BAS] Repeat                       ' Create a loop for all the invaders
000982                00693 BC@LL63
  00000982            00694 F1_000309 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[INVADER_LOOP] = TRUE Then       ' Is this invader enabled ?
000982 EE00 F073      00695         LFSR 0,INVADER_ENABLED
000986 503C           00696         MOVF INVADER_LOOP,W
000988 26E9           00697         ADDWF FSR0L,F
00098A 0E00           00698         MOVLW 0
00098C 22EA           00699         ADDWFC FSR0H,F
00098E 50EF           00700         MOVF INDF0,W
000990 6E0E           00701         MOVWF PBP#VAR0
000992 2C0E           00702         DECFSZ PBP#VAR0,W
                      00703         F@JUMP BC@LL66
  00000998            00704 F1_000310 EQU $ ; in [INVADERS.BAS] Select INVADER_XPOS[INVADER_LOOP] + 5
000998 EE00 F04F      00705         LFSR 0,INVADER_XPOS
00099C 503C           00706         MOVF INVADER_LOOP,W
00099E 26E9           00707         ADDWF FSR0L,F
0009A0 0E00           00708         MOVLW 0
0009A2 22EA           00709         ADDWFC FSR0H,F
0009A4 50EF           00710         MOVF INDF0,W
0009A6 6E10           00711         MOVWF PBP#VAR1
0009A8 0E05           00712         MOVLW 5
0009AA 2410           00713         ADDWF PBP#VAR1,W
0009AC 6A0F           00714         CLRF PBP#VAR0H
0009AE 6E0E           00715         MOVWF PBP#VAR0
0009B0 360F           00716         RLCF PBP#VAR0H,F
  000009B2            00717 F1_000311 EQU $ ; in [INVADERS.BAS] Case SHIP_XPOS to SHIP_XPOS + 8        ' Is the invader over the ship ?
0009B2 500F           00718         MOVF PBP#VAR0H,W
0009B4 E105           00719         BNZ CP@LB2
0009B6 5185           00720         MOVF SHIP_XPOS,W
0009B8 5C0E           00721         SUBWF PBP#VAR0,W
0009BA A0D8           00722         BTFSS STATUS,0
                      00723         GO@TO BC@LL68
0009C0                00724 CP@LB2
0009C0 0E08           00725         MOVLW 8
0009C2 2585           00726         ADDWF SHIP_XPOS,W
0009C4 6A11           00727         CLRF PBP#VAR1H
0009C6 6E10           00728         MOVWF PBP#VAR1
0009C8 3611           00729         RLCF PBP#VAR1H,F
0009CA 500E           00730         MOVF PBP#VAR0,W
0009CC 5C10           00731         SUBWF PBP#VAR1,W
0009CE 500F           00732         MOVF PBP#VAR0H,W
0009D0 5811           00733         SUBWFB PBP#VAR1H,W
0009D2 A0D8           00734         BTFSS STATUS,0
                      00735         GO@TO BC@LL68
  000009D8            00736 F1_000312 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_FIRED = TRUE       ' Signal that an invader's  missile is in the air
0009D8 8A3B           00737         BSF MISSILE_STATUS,5
  000009DA            00738 F1_000313 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_XPOS = INVADER_XPOS[INVADER_LOOP] + 5 ' Move missile XPOS to the middle of the invader
0009DA EE00 F04F      00739         LFSR 0,INVADER_XPOS
0009DE 503C           00740         MOVF INVADER_LOOP,W
0009E0 26E9           00741         ADDWF FSR0L,F
0009E2 0E00           00742         MOVLW 0
0009E4 22EA           00743         ADDWFC FSR0H,F
0009E6 50EF           00744         MOVF INDF0,W
0009E8 6E10           00745         MOVWF PBP#VAR1
0009EA 0E05           00746         MOVLW 5
0009EC 2410           00747         ADDWF PBP#VAR1,W
0009EE 6F91           00748         MOVWF INVADER_MISSILE_XPOS
  000009F0            00749 F1_000314 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_YPOS = (INVADER_YPOS[INVADER_LOOP] * 8) + 8 ' Move missile YPOS to below the invader
0009F0 EE00 F061      00750         LFSR 0,INVADER_YPOS
0009F4 503C           00751         MOVF INVADER_LOOP,W
0009F6 26E9           00752         ADDWF FSR0L,F
0009F8 0E00           00753         MOVLW 0
0009FA 22EA           00754         ADDWFC FSR0H,F
0009FC 50EF           00755         MOVF INDF0,W
0009FE 6E10           00756         MOVWF PBP#VAR1
000A00 5010           00757         MOVF PBP#VAR1,W
000A02 0D08           00758         MULLW 8
000A04 CFF3 F024      00759         MOVFF PRODL,PP7
000A08 CFF4 F025      00760         MOVFF PRODH,PP7H
000A0C 0E08           00761         MOVLW 8
000A0E 2424           00762         ADDWF PP7,W
000A10 6F90           00763         MOVWF INVADER_MISSILE_YPOS
  00000A12            00764 F1_000315 EQU $ ; in [INVADERS.BAS] End Select
000A12                00765 BC@LL68
000A12                00766 BC@LL67
  00000A12            00767 F1_000316 EQU $ ; in [INVADERS.BAS] Endif
000A12                00768 BC@LL66
  00000A12            00769 F1_000317 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
000A12 2A3C           00770         INCF INVADER_LOOP,F
  00000A14            00771 F1_000318 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17             ' Close the loop when all invaders have been scanned
000A14 0E11           00772         MOVLW 17
000A16 643C           00773         CPFSGT INVADER_LOOP
                      00774         F@JUMP BC@LL63
000A1A                00775 BC@LL64
  00000A1A            00776 F1_000319 EQU $ ; in [INVADERS.BAS] Endif
000A1A                00777 BC@LL62
  00000A1A            00778 F1_000320 EQU $ ; in [INVADERS.BAS] Return
000A1A 0012           00779         RETURN
000A1C                00780 FIRE_INVADER_MISSILE2
  00000A1C            00781 F1_000330 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_FIRED = FALSE Then ' Is it OK to fire an invader second missile ?
000A1C BE2D           00782         BTFSC _B#VR1,7
                      00783         GO@TO BC@LL71
  00000A22            00784 F1_000332 EQU $ ; in [INVADERS.BAS] Select SHIP_XPOS
000A22 5191           00785         MOVF INVADER_MISSILE_XPOS,W
000A24 25A1           00786         ADDWF RANDOM_VALUE,W
000A26 6E0E           00787         MOVWF PBP#VAR0
000A28 6A0F           00788         CLRF PBP#VAR0H
000A2A 360F           00789         RLCF PBP#VAR0H,F
  00000A2C            00790 F1_000333 EQU $ ; in [INVADERS.BAS] Case > INVADER_MISSILE_XPOS + RANDOM_VALUE , < INVADER_MISSILE_XPOS - RANDOM_VALUE
000A2C 500F           00791         MOVF PBP#VAR0H,W
000A2E E105           00792         BNZ CP@LB4
000A30 5185           00793         MOVF SHIP_XPOS,W
000A32 5C0E           00794         SUBWF PBP#VAR0,W
000A34 A0D8           00795         BTFSS STATUS,0
                      00796         GO@TO BC@LL74
000A3A                00797 CP@LB4
000A3A 51A1           00798         MOVF RANDOM_VALUE,W
000A3C 5D91           00799         SUBWF INVADER_MISSILE_XPOS,W
000A3E 6E0E           00800         MOVWF PBP#VAR0
000A40 6A0F           00801         CLRF PBP#VAR0H
000A42 A0D8           00802         SKPC
000A44 060F           00803         DECF PBP#VAR0H,F
000A46 500F           00804         MOVF PBP#VAR0H,W
000A48 E104           00805         BNZ CP@LB5
000A4A 500E           00806         MOVF PBP#VAR0,W
000A4C 6185           00807         CPFSLT SHIP_XPOS
                      00808         F@JUMP BC@LL73
000A52                00809 CP@LB5
000A52                00810 BC@LL74
  00000A52            00811 F1_000334 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0
000A52 6A3C           00812         CLRF INVADER_LOOP
  00000A54            00813 F1_000335 EQU $ ; in [INVADERS.BAS] Repeat                       ' Create a loop for all the invaders
000A54                00814 BC@LL75
  00000A54            00815 F1_000336 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[INVADER_LOOP] = TRUE Then       ' Is this invader enabled ?
000A54 EE00 F073      00816         LFSR 0,INVADER_ENABLED
000A58 503C           00817         MOVF INVADER_LOOP,W
000A5A 26E9           00818         ADDWF FSR0L,F
000A5C 0E00           00819         MOVLW 0
000A5E 22EA           00820         ADDWFC FSR0H,F
000A60 50EF           00821         MOVF INDF0,W
000A62 6E0E           00822         MOVWF PBP#VAR0
000A64 2C0E           00823         DECFSZ PBP#VAR0,W
                      00824         F@JUMP BC@LL78
  00000A6A            00825 F1_000337 EQU $ ; in [INVADERS.BAS] Select INVADER_XPOS[INVADER_LOOP] + 5
000A6A EE00 F04F      00826         LFSR 0,INVADER_XPOS
000A6E 503C           00827         MOVF INVADER_LOOP,W
000A70 26E9           00828         ADDWF FSR0L,F
000A72 0E00           00829         MOVLW 0
000A74 22EA           00830         ADDWFC FSR0H,F
000A76 50EF           00831         MOVF INDF0,W
000A78 6E10           00832         MOVWF PBP#VAR1
000A7A 0E05           00833         MOVLW 5
000A7C 2410           00834         ADDWF PBP#VAR1,W
000A7E 6A0F           00835         CLRF PBP#VAR0H
000A80 6E0E           00836         MOVWF PBP#VAR0
000A82 360F           00837         RLCF PBP#VAR0H,F
  00000A84            00838 F1_000338 EQU $ ; in [INVADERS.BAS] Case SHIP_XPOS to SHIP_XPOS + 8        ' Is the invader over the ship ?
000A84 500F           00839         MOVF PBP#VAR0H,W
000A86 E105           00840         BNZ CP@LB6
000A88 5185           00841         MOVF SHIP_XPOS,W
000A8A 5C0E           00842         SUBWF PBP#VAR0,W
000A8C A0D8           00843         BTFSS STATUS,0
                      00844         GO@TO BC@LL80
000A92                00845 CP@LB6
000A92 0E08           00846         MOVLW 8
000A94 2585           00847         ADDWF SHIP_XPOS,W
000A96 6A11           00848         CLRF PBP#VAR1H
000A98 6E10           00849         MOVWF PBP#VAR1
000A9A 3611           00850         RLCF PBP#VAR1H,F
000A9C 500E           00851         MOVF PBP#VAR0,W
000A9E 5C10           00852         SUBWF PBP#VAR1,W
000AA0 500F           00853         MOVF PBP#VAR0H,W
000AA2 5811           00854         SUBWFB PBP#VAR1H,W
000AA4 A0D8           00855         BTFSS STATUS,0
                      00856         GO@TO BC@LL80
  00000AAA            00857 F1_000339 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_FIRED = TRUE       ' Signal that an invader's  missile is in the air
000AAA 8E2D           00858         BSF _B#VR1,7
  00000AAC            00859 F1_000340 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_XPOS = INVADER_XPOS[INVADER_LOOP] + 5 ' Move missile XPOS to the middle of the invader
000AAC EE00 F04F      00860         LFSR 0,INVADER_XPOS
000AB0 503C           00861         MOVF INVADER_LOOP,W
000AB2 26E9           00862         ADDWF FSR0L,F
000AB4 0E00           00863         MOVLW 0
000AB6 22EA           00864         ADDWFC FSR0H,F
000AB8 50EF           00865         MOVF INDF0,W
000ABA 6E10           00866         MOVWF PBP#VAR1
000ABC 0E05           00867         MOVLW 5
000ABE 2410           00868         ADDWF PBP#VAR1,W
000AC0 6F96           00869         MOVWF INVADER_MISSILE2_XPOS
  00000AC2            00870 F1_000341 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_YPOS = (INVADER_YPOS[INVADER_LOOP] * 8) + 8 ' Move missile YPOS to below the invader
000AC2 EE00 F061      00871         LFSR 0,INVADER_YPOS
000AC6 503C           00872         MOVF INVADER_LOOP,W
000AC8 26E9           00873         ADDWF FSR0L,F
000ACA 0E00           00874         MOVLW 0
000ACC 22EA           00875         ADDWFC FSR0H,F
000ACE 50EF           00876         MOVF INDF0,W
000AD0 6E10           00877         MOVWF PBP#VAR1
000AD2 5010           00878         MOVF PBP#VAR1,W
000AD4 0D08           00879         MULLW 8
000AD6 CFF3 F024      00880         MOVFF PRODL,PP7
000ADA CFF4 F025      00881         MOVFF PRODH,PP7H
000ADE 0E08           00882         MOVLW 8
000AE0 2424           00883         ADDWF PP7,W
000AE2 6F95           00884         MOVWF INVADER_MISSILE2_YPOS
  00000AE4            00885 F1_000342 EQU $ ; in [INVADERS.BAS] End Select
000AE4                00886 BC@LL80
000AE4                00887 BC@LL79
  00000AE4            00888 F1_000343 EQU $ ; in [INVADERS.BAS] Endif
000AE4                00889 BC@LL78
  00000AE4            00890 F1_000344 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
000AE4 2A3C           00891         INCF INVADER_LOOP,F
  00000AE6            00892 F1_000345 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17             ' Close the loop when all invaders have been scanned
000AE6 0E11           00893         MOVLW 17
000AE8 643C           00894         CPFSGT INVADER_LOOP
                      00895         F@JUMP BC@LL75
000AEC                00896 BC@LL76
  00000AEC            00897 F1_000346 EQU $ ; in [INVADERS.BAS] EndSelect
000AEC                00898 BC@LL73
000AEC                00899 BC@LL72
  00000AEC            00900 F1_000348 EQU $ ; in [INVADERS.BAS] Endif
000AEC                00901 BC@LL71
  00000AEC            00902 F1_000349 EQU $ ; in [INVADERS.BAS] Return
000AEC 0012           00903         RETURN
000AEE                00904 CHECK_FOR_INVADER_MISSILE_HIT
  00000AEE            00905 F1_000354 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_HIT = FALSE            ' Default to not hit
000AEE 9C3B           00906         BCF MISSILE_STATUS,6
  00000AF0            00907 F1_000355 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_FIRED = TRUE Then            ' First make sure that a missile is actually launched
000AF0 AA3B           00908         BTFSS MISSILE_STATUS,5
                      00909         GO@TO BC@LL83
  00000AF6            00910 F1_000357 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_YPOS >= 45 Then
000AF6 0E2C           00911         MOVLW 44
000AF8 6590           00912         CPFSGT INVADER_MISSILE_YPOS
                      00913         F@JUMP BC@LL85
  00000AFE            00914 F1_000358 EQU $ ; in [INVADERS.BAS] BASE_XPOS_TEST = INVADER_MISSILE_XPOS       ' Transfer the invader's missile XPOS for testing
000AFE C091 F08F      00915         MOVFF INVADER_MISSILE_XPOS,BASE_XPOS_TEST
  00000B02            00916 F1_000359 EQU $ ; in [INVADERS.BAS] Gosub CHECK_BASE_HIT           ' Check if a base was hit
                      00917         F@CALL CHECK_BASE_HIT
  00000B06            00918 F1_000360 EQU $ ; in [INVADERS.BAS] If BASE_HIT = TRUE Then
000B06 A43B           00919         BTFSS MISSILE_STATUS,2
                      00920         GO@TO BC@LL87
  00000B0C            00921 F1_000361 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_HIT = TRUE         ' Transfer the hit detector into the invader's missile detector
000B0C 8C3B           00922         BSF MISSILE_STATUS,6
  00000B0E            00923 F1_000362 EQU $ ; in [INVADERS.BAS] Return              ' Return from the subroutine prematurely
000B0E 0012           00924         RETURN
  00000B10            00925 F1_000363 EQU $ ; in [INVADERS.BAS] Endif
000B10                00926 BC@LL87
  00000B10            00927 F1_000364 EQU $ ; in [INVADERS.BAS] Endif
000B10                00928 BC@LL85
  00000B10            00929 F1_000367 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_YPOS >= 56 Then
000B10 0E37           00930         MOVLW 55
000B12 6590           00931         CPFSGT INVADER_MISSILE_YPOS
                      00932         F@JUMP BC@LL89
  00000B18            00933 F1_000368 EQU $ ; in [INVADERS.BAS] Select INVADER_MISSILE_XPOS
000B18 0EFF           00934         MOVLW LOW (-1)
000B1A 2585           00935         ADDWF SHIP_XPOS,W
000B1C 6E0E           00936         MOVWF PBP#VAR0
000B1E 0EFF           00937         MOVLW LOW ((-1) >> 8)
000B20 B0D8           00938         SKPNC
000B22 0F01           00939         ADDLW 1
000B24 6E0F           00940         MOVWF PBP#VAR0H
  00000B26            00941 F1_000369 EQU $ ; in [INVADERS.BAS] Case SHIP_XPOS - 1 To SHIP_XPOS + SHIP_WIDTH
000B26 500F           00942         MOVF PBP#VAR0H,W
000B28 A4D8           00943         BTFSS STATUS,2
                      00944         GO@TO BC@LL91
000B2E 500E           00945         MOVF PBP#VAR0,W
000B30 5D91           00946         SUBWF INVADER_MISSILE_XPOS,W
000B32 A0D8           00947         BTFSS STATUS,0
                      00948         GO@TO BC@LL91
000B38 0E09           00949         MOVLW 9
000B3A 2585           00950         ADDWF SHIP_XPOS,W
000B3C 6A0F           00951         CLRF PBP#VAR0H
000B3E 6E0E           00952         MOVWF PBP#VAR0
000B40 360F           00953         RLCF PBP#VAR0H,F
000B42 500F           00954         MOVF PBP#VAR0H,W
000B44 E105           00955         BNZ CP@LB9
000B46 5191           00956         MOVF INVADER_MISSILE_XPOS,W
000B48 5C0E           00957         SUBWF PBP#VAR0,W
000B4A A0D8           00958         BTFSS STATUS,0
                      00959         GO@TO BC@LL91
000B50                00960 CP@LB9
  00000B50            00961 F1_000370 EQU $ ; in [INVADERS.BAS] Gosub DRAW_SHIP
                      00962         F@CALL DRAW_SHIP
  00000B54            00963 F1_000371 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_HIT = TRUE        ' Indicate the invader's missile has hit something
000B54 8C3B           00964         BSF MISSILE_STATUS,6
  00000B56            00965 F1_000372 EQU $ ; in [INVADERS.BAS] SHIP_HIT = TRUE           ' Indicate that it is the ship that has been hit
000B56 842D           00966         BSF _B#VR1,2
  00000B58            00967 F1_000373 EQU $ ; in [INVADERS.BAS] End Select
000B58                00968 BC@LL91
000B58                00969 BC@LL90
  00000B58            00970 F1_000374 EQU $ ; in [INVADERS.BAS] Endif
000B58                00971 BC@LL89
  00000B58            00972 F1_000375 EQU $ ; in [INVADERS.BAS] Endif
000B58                00973 BC@LL83
  00000B58            00974 F1_000376 EQU $ ; in [INVADERS.BAS] Return
000B58 0012           00975         RETURN
000B5A                00976 CHECK_FOR_INVADER_MISSILE2_HIT
  00000B5A            00977 F1_000381 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_HIT = FALSE           ' Default to not hit
000B5A 902E           00978         BCF _B#VR2,0
  00000B5C            00979 F1_000382 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_FIRED = TRUE Then           ' First make sure that a second missile is actually launched
000B5C AE2D           00980         BTFSS _B#VR1,7
                      00981         GO@TO BC@LL94
  00000B62            00982 F1_000384 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_YPOS >= 45 Then
000B62 0E2C           00983         MOVLW 44
000B64 6595           00984         CPFSGT INVADER_MISSILE2_YPOS
                      00985         F@JUMP BC@LL96
  00000B6A            00986 F1_000385 EQU $ ; in [INVADERS.BAS] BASE_XPOS_TEST = INVADER_MISSILE2_XPOS       ' Transfer the invader's second missile XPOS for testing
000B6A C096 F08F      00987         MOVFF INVADER_MISSILE2_XPOS,BASE_XPOS_TEST
  00000B6E            00988 F1_000386 EQU $ ; in [INVADERS.BAS] Gosub CHECK_BASE_HIT           ' Check if a base was hit
                      00989         F@CALL CHECK_BASE_HIT
  00000B72            00990 F1_000387 EQU $ ; in [INVADERS.BAS] If BASE_HIT = TRUE Then
000B72 A43B           00991         BTFSS MISSILE_STATUS,2
                      00992         GO@TO BC@LL98
  00000B78            00993 F1_000388 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_HIT = TRUE         ' Transfer the hit detector into the invader's second missile detector
000B78 802E           00994         BSF _B#VR2,0
  00000B7A            00995 F1_000389 EQU $ ; in [INVADERS.BAS] Return              ' Return from the subroutine prematurely
000B7A 0012           00996         RETURN
  00000B7C            00997 F1_000390 EQU $ ; in [INVADERS.BAS] Endif
000B7C                00998 BC@LL98
  00000B7C            00999 F1_000391 EQU $ ; in [INVADERS.BAS] Endif
000B7C                01000 BC@LL96
  00000B7C            01001 F1_000394 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_YPOS >= 56 Then
000B7C 0E37           01002         MOVLW 55
000B7E 6595           01003         CPFSGT INVADER_MISSILE2_YPOS
                      01004         F@JUMP BC@LL100
  00000B84            01005 F1_000395 EQU $ ; in [INVADERS.BAS] Select INVADER_MISSILE2_XPOS
000B84 0EFF           01006         MOVLW LOW (-1)
000B86 2585           01007         ADDWF SHIP_XPOS,W
000B88 6E0E           01008         MOVWF PBP#VAR0
000B8A 0EFF           01009         MOVLW LOW ((-1) >> 8)
000B8C B0D8           01010         SKPNC
000B8E 0F01           01011         ADDLW 1
000B90 6E0F           01012         MOVWF PBP#VAR0H
  00000B92            01013 F1_000396 EQU $ ; in [INVADERS.BAS] Case SHIP_XPOS - 1 To SHIP_XPOS + SHIP_WIDTH
000B92 500F           01014         MOVF PBP#VAR0H,W
000B94 A4D8           01015         BTFSS STATUS,2
                      01016         GO@TO BC@LL102
000B9A 500E           01017         MOVF PBP#VAR0,W
000B9C 5D96           01018         SUBWF INVADER_MISSILE2_XPOS,W
000B9E A0D8           01019         BTFSS STATUS,0
                      01020         GO@TO BC@LL102
000BA4 0E09           01021         MOVLW 9
000BA6 2585           01022         ADDWF SHIP_XPOS,W
000BA8 6A0F           01023         CLRF PBP#VAR0H
000BAA 6E0E           01024         MOVWF PBP#VAR0
000BAC 360F           01025         RLCF PBP#VAR0H,F
000BAE 500F           01026         MOVF PBP#VAR0H,W
000BB0 E105           01027         BNZ CP@LB11
000BB2 5196           01028         MOVF INVADER_MISSILE2_XPOS,W
000BB4 5C0E           01029         SUBWF PBP#VAR0,W
000BB6 A0D8           01030         BTFSS STATUS,0
                      01031         GO@TO BC@LL102
000BBC                01032 CP@LB11
  00000BBC            01033 F1_000397 EQU $ ; in [INVADERS.BAS] Gosub DRAW_SHIP
                      01034         F@CALL DRAW_SHIP
  00000BC0            01035 F1_000398 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_HIT = TRUE        ' Indicate the invader's second missile has hit something
000BC0 802E           01036         BSF _B#VR2,0
  00000BC2            01037 F1_000399 EQU $ ; in [INVADERS.BAS] SHIP_HIT = TRUE           ' Indicate that it is the ship that has been hit
000BC2 842D           01038         BSF _B#VR1,2
  00000BC4            01039 F1_000400 EQU $ ; in [INVADERS.BAS] End Select
000BC4                01040 BC@LL102
000BC4                01041 BC@LL101
  00000BC4            01042 F1_000401 EQU $ ; in [INVADERS.BAS] Endif
000BC4                01043 BC@LL100
  00000BC4            01044 F1_000402 EQU $ ; in [INVADERS.BAS] Endif
000BC4                01045 BC@LL94
  00000BC4            01046 F1_000403 EQU $ ; in [INVADERS.BAS] Return
000BC4 0012           01047         RETURN
000BC6                01048 CLEAR_MISSILE
  00000BC6            01049 F1_000407 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS, MISSILE_XPOS
000BC6 C086 F003      01050         MOVFF MISSILE_YPOS,GEN
000BCA 5187           01051         MOVF MISSILE_XPOS,W
                      01052         F@CALL LCD@UNPLOT
  00000BD0            01053 F1_000408 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS, MISSILE_XPOS + 1
000BD0 C086 F003      01054         MOVFF MISSILE_YPOS,GEN
000BD4 2987           01055         INCF MISSILE_XPOS,W
                      01056         F@CALL LCD@UNPLOT
  00000BDA            01057 F1_000409 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS + 1, MISSILE_XPOS
000BDA 2986           01058         INCF MISSILE_YPOS,W
000BDC 6E03           01059         MOVWF GEN
000BDE 5187           01060         MOVF MISSILE_XPOS,W
                      01061         F@CALL LCD@UNPLOT
  00000BE4            01062 F1_000410 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS + 1, MISSILE_XPOS + 1
000BE4 2986           01063         INCF MISSILE_YPOS,W
000BE6 6E03           01064         MOVWF GEN
000BE8 2987           01065         INCF MISSILE_XPOS,W
                      01066         F@CALL LCD@UNPLOT
  00000BEE            01067 F1_000411 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS + 2, MISSILE_XPOS
000BEE 0E02           01068         MOVLW 2
000BF0 2586           01069         ADDWF MISSILE_YPOS,W
000BF2 6E03           01070         MOVWF GEN
000BF4 5187           01071         MOVF MISSILE_XPOS,W
                      01072         F@CALL LCD@UNPLOT
  00000BFA            01073 F1_000412 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS + 2, MISSILE_XPOS + 1
000BFA 0E02           01074         MOVLW 2
000BFC 2586           01075         ADDWF MISSILE_YPOS,W
000BFE 6E03           01076         MOVWF GEN
000C00 2987           01077         INCF MISSILE_XPOS,W
                      01078         F@CALL LCD@UNPLOT
  00000C06            01079 F1_000413 EQU $ ; in [INVADERS.BAS] Return
000C06 0012           01080         RETURN
000C08                01081 DRAW_MISSILE
  00000C08            01082 F1_000415 EQU $ ; in [INVADERS.BAS] Plot MISSILE_YPOS, MISSILE_XPOS
000C08 C086 F003      01083         MOVFF MISSILE_YPOS,GEN
000C0C 5187           01084         MOVF MISSILE_XPOS,W
                      01085         F@CALL LCD@PLOT
  00000C12            01086 F1_000416 EQU $ ; in [INVADERS.BAS] Plot MISSILE_YPOS, MISSILE_XPOS + 1
000C12 C086 F003      01087         MOVFF MISSILE_YPOS,GEN
000C16 2987           01088         INCF MISSILE_XPOS,W
                      01089         F@CALL LCD@PLOT
  00000C1C            01090 F1_000417 EQU $ ; in [INVADERS.BAS] Plot MISSILE_YPOS + 1, MISSILE_XPOS
000C1C 2986           01091         INCF MISSILE_YPOS,W
000C1E 6E03           01092         MOVWF GEN
000C20 5187           01093         MOVF MISSILE_XPOS,W
                      01094         F@CALL LCD@PLOT
  00000C26            01095 F1_000418 EQU $ ; in [INVADERS.BAS] Plot MISSILE_YPOS + 1, MISSILE_XPOS + 1
000C26 2986           01096         INCF MISSILE_YPOS,W
000C28 6E03           01097         MOVWF GEN
000C2A 2987           01098         INCF MISSILE_XPOS,W
                      01099         F@CALL LCD@PLOT
  00000C30            01100 F1_000419 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS + 2, MISSILE_XPOS
000C30 0E02           01101         MOVLW 2
000C32 2586           01102         ADDWF MISSILE_YPOS,W
000C34 6E03           01103         MOVWF GEN
000C36 5187           01104         MOVF MISSILE_XPOS,W
                      01105         F@CALL LCD@UNPLOT
  00000C3C            01106 F1_000420 EQU $ ; in [INVADERS.BAS] UnPlot MISSILE_YPOS + 2, MISSILE_XPOS + 1
000C3C 0E02           01107         MOVLW 2
000C3E 2586           01108         ADDWF MISSILE_YPOS,W
000C40 6E03           01109         MOVWF GEN
000C42 2987           01110         INCF MISSILE_XPOS,W
                      01111         F@CALL LCD@UNPLOT
  00000C48            01112 F1_000421 EQU $ ; in [INVADERS.BAS] Return
000C48 0012           01113         RETURN
000C4A                01114 DRAW_SHIP
  00000C4A            01115 F1_000425 EQU $ ; in [INVADERS.BAS] LCDWRITE 7,SHIP_XPOS,[$00,$E0,$F0,$F0,$F8,$FC,$F8,$F0,$F0,$E0,$00]
000C4A 0E07           01116         MOVLW 7
000C4C 6E03           01117         MOVWF GEN
000C4E C085 F00A      01118         MOVFF SHIP_XPOS,GENH
000C52 6AE8           01119         CLRW
                      01120         F@CALL GLCD@P
000C58 0EE0           01121         MOVLW 224
                      01122         F@CALL GLCD@P
000C5E 0EF0           01123         MOVLW 240
                      01124         F@CALL GLCD@P
000C64 0EF0           01125         MOVLW 240
                      01126         F@CALL GLCD@P
000C6A 0EF8           01127         MOVLW 248
                      01128         F@CALL GLCD@P
000C70 0EFC           01129         MOVLW 252
                      01130         F@CALL GLCD@P
000C76 0EF8           01131         MOVLW 248
                      01132         F@CALL GLCD@P
000C7C 0EF0           01133         MOVLW 240
                      01134         F@CALL GLCD@P
000C82 0EF0           01135         MOVLW 240
                      01136         F@CALL GLCD@P
000C88 0EE0           01137         MOVLW 224
                      01138         F@CALL GLCD@P
000C8E 6AE8           01139         CLRW
                      01140         F@CALL GLCD@P
  00000C94            01141 F1_000426 EQU $ ; in [INVADERS.BAS] Return
000C94 0012           01142         RETURN
000C96                01143 CHECK_FOR_MISSILE_HIT
  00000C96            01144 F1_000431 EQU $ ; in [INVADERS.BAS] MISSILE_HIT = FALSE            ' Default to not hit
000C96 923B           01145         BCF MISSILE_STATUS,1
  00000C98            01146 F1_000432 EQU $ ; in [INVADERS.BAS] SAUCER_HIT = FALSE            ' Default to saucer not hit
000C98 922E           01147         BCF _B#VR2,1
  00000C9A            01148 F1_000433 EQU $ ; in [INVADERS.BAS] If MISSILE_FIRED = TRUE Then         ' First make sure a missile is actually launched
000C9A A03B           01149         BTFSS MISSILE_STATUS,0
                      01150         GO@TO BC@LL105
  00000CA0            01151 F1_000435 EQU $ ; in [INVADERS.BAS] If MISSILE_YPOS  = 53 Then
000CA0 0E35           01152         MOVLW 53
000CA2 6386           01153         CPFSEQ MISSILE_YPOS
                      01154         F@JUMP BC@LL107
  00000CA8            01155 F1_000436 EQU $ ; in [INVADERS.BAS] BASE_XPOS_TEST = MISSILE_XPOS       ' Transfer the ship's missile XPOS for testing
000CA8 C087 F08F      01156         MOVFF MISSILE_XPOS,BASE_XPOS_TEST
  00000CAC            01157 F1_000437 EQU $ ; in [INVADERS.BAS] Gosub CHECK_BASE_HIT         ' Check if a base was hit
                      01158         F@CALL CHECK_BASE_HIT
  00000CB0            01159 F1_000438 EQU $ ; in [INVADERS.BAS] If BASE_HIT = TRUE Then
000CB0 A43B           01160         BTFSS MISSILE_STATUS,2
                      01161         GO@TO BC@LL109
  00000CB6            01162 F1_000439 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 0       ' Disable the missile's sound
000CB6 9231           01163         BCF NOTE_STATUS,1
  00000CB8            01164 F1_000440 EQU $ ; in [INVADERS.BAS] MISSILE_HIT = TRUE         ' Transfer the hit detector into the missile detector
000CB8 823B           01165         BSF MISSILE_STATUS,1
  00000CBA            01166 F1_000441 EQU $ ; in [INVADERS.BAS] Return            ' And return from the subroutine prematurely
000CBA 0012           01167         RETURN
  00000CBC            01168 F1_000442 EQU $ ; in [INVADERS.BAS] Endif
000CBC                01169 BC@LL109
  00000CBC            01170 F1_000443 EQU $ ; in [INVADERS.BAS] Endif
000CBC                01171 BC@LL107
  00000CBC            01172 F1_000446 EQU $ ; in [INVADERS.BAS] If MISSILE_XPOS = INVADER_MISSILE_XPOS Then If MISSILE_YPOS = INVADER_MISSILE_YPOS Then
000CBC 5187           01173         MOVF MISSILE_XPOS,W
000CBE 6391           01174         CPFSEQ INVADER_MISSILE_XPOS
                      01175         F@JUMP BC@LL111
000CC4 5186           01176         MOVF MISSILE_YPOS,W
000CC6 6390           01177         CPFSEQ INVADER_MISSILE_YPOS
                      01178         F@JUMP BC@LL113
  00000CCC            01179 F1_000447 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 0       ' Disable the missile's sound
000CCC 9231           01180         BCF NOTE_STATUS,1
  00000CCE            01181 F1_000448 EQU $ ; in [INVADERS.BAS] MISSILE_HIT = TRUE          ' Indicate the ship's missile has hit a target
000CCE 823B           01182         BSF MISSILE_STATUS,1
  00000CD0            01183 F1_000449 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_HIT = TRUE        ' Indicate the invader's missile has also been hit
000CD0 8C3B           01184         BSF MISSILE_STATUS,6
  00000CD2            01185 F1_000450 EQU $ ; in [INVADERS.BAS] Inc SCORE            ' Increment the score by one
000CD2 2B9A           01186         INCF SCORE,F
000CD4 0E00           01187         MOVLW 0
000CD6 239B           01188         ADDWFC SCOREH,F
000CD8 239C           01189         ADDWFC SCOREHH,F
000CDA 239D           01190         ADDWFC SCOREHHH,F
  00000CDC            01191 F1_000451 EQU $ ; in [INVADERS.BAS] Return             ' And return from the subroutine prematurely
000CDC 0012           01192         RETURN
  00000CDE            01193 F1_000452 EQU $ ; in [INVADERS.BAS] Endif
000CDE                01194 BC@LL113
000CDE                01195 BC@LL111
  00000CDE            01196 F1_000455 EQU $ ; in [INVADERS.BAS] If SAUCER_ENABLED = TRUE Then
000CDE A62E           01197         BTFSS _B#VR2,3
                      01198         GO@TO BC@LL115
  00000CE4            01199 F1_000456 EQU $ ; in [INVADERS.BAS] If MISSILE_YPOS < 7 Then
000CE4 0E07           01200         MOVLW 7
000CE6 6186           01201         CPFSLT MISSILE_YPOS
                      01202         F@JUMP BC@LL117
  00000CEC            01203 F1_000457 EQU $ ; in [INVADERS.BAS] Select MISSILE_XPOS
  00000CEC            01204 F1_000458 EQU $ ; in [INVADERS.BAS] Case SAUCER_XPOS To SAUCER_XPOS  + SAUCER_WIDTH
000CEC 5198           01205         MOVF SAUCER_XPOS,W
000CEE 5D87           01206         SUBWF MISSILE_XPOS,W
000CF0 A0D8           01207         BTFSS STATUS,0
                      01208         GO@TO BC@LL119
000CF6 0E0E           01209         MOVLW 14
000CF8 2598           01210         ADDWF SAUCER_XPOS,W
000CFA 6A0F           01211         CLRF PBP#VAR0H
000CFC 6E0E           01212         MOVWF PBP#VAR0
000CFE 360F           01213         RLCF PBP#VAR0H,F
000D00 500F           01214         MOVF PBP#VAR0H,W
000D02 E105           01215         BNZ CP@LB12
000D04 5187           01216         MOVF MISSILE_XPOS,W
000D06 5C0E           01217         SUBWF PBP#VAR0,W
000D08 A0D8           01218         BTFSS STATUS,0
                      01219         GO@TO BC@LL119
000D0E                01220 CP@LB12
  00000D0E            01221 F1_000459 EQU $ ; in [INVADERS.BAS] MISSILE_HIT = TRUE       ' Indicate the ship's missile has hit a target
000D0E 823B           01222         BSF MISSILE_STATUS,1
  00000D10            01223 F1_000460 EQU $ ; in [INVADERS.BAS] SAUCER_HIT = TRUE
000D10 822E           01224         BSF _B#VR2,1
  00000D12            01225 F1_000461 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = TRUE
000D12 8431           01226         BSF NOTE_STATUS,2
  00000D14            01227 F1_000462 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 30
000D14 0E1E           01228         MOVLW 30
000D16 6E3A           01229         MOVWF SAUCER_FREQ
  00000D18            01230 F1_000463 EQU $ ; in [INVADERS.BAS] LCDWRITE 0,SAUCER_XPOS,[$8C,$C5,$6B,$36,$0C,$20,$68,$CC,$96,$33,$69,$CC,$86,$02]
000D18 6A03           01231         CLRF GEN
000D1A C098 F00A      01232         MOVFF SAUCER_XPOS,GENH
000D1E 0E8C           01233         MOVLW 140
                      01234         F@CALL GLCD@P
000D24 0EC5           01235         MOVLW 197
                      01236         F@CALL GLCD@P
000D2A 0E6B           01237         MOVLW 107
                      01238         F@CALL GLCD@P
000D30 0E36           01239         MOVLW 54
                      01240         F@CALL GLCD@P
000D36 0E0C           01241         MOVLW 12
                      01242         F@CALL GLCD@P
000D3C 0E20           01243         MOVLW 32
                      01244         F@CALL GLCD@P
000D42 0E68           01245         MOVLW 104
                      01246         F@CALL GLCD@P
000D48 0ECC           01247         MOVLW 204
                      01248         F@CALL GLCD@P
000D4E 0E96           01249         MOVLW 150
                      01250         F@CALL GLCD@P
000D54 0E33           01251         MOVLW 51
                      01252         F@CALL GLCD@P
000D5A 0E69           01253         MOVLW 105
                      01254         F@CALL GLCD@P
000D60 0ECC           01255         MOVLW 204
                      01256         F@CALL GLCD@P
000D66 0E86           01257         MOVLW 134
                      01258         F@CALL GLCD@P
000D6C 0E02           01259         MOVLW 2
                      01260         F@CALL GLCD@P
  00000D72            01261 F1_000464 EQU $ ; in [INVADERS.BAS] Delayms 10
000D72 0E0A           01262         MOVLW 10
                      01263         F@CALL DL@MS
  00000D78            01264 F1_000465 EQU $ ; in [INVADERS.BAS] LCDWRITE 0,SAUCER_XPOS,[$7F,$08,$08,$08,$7F,$00,$00,$41,$7F,$41,$00,$00,$01,$01,$7F,$01,$01] ' Display text HIT
000D78 6A03           01265         CLRF GEN
000D7A C098 F00A      01266         MOVFF SAUCER_XPOS,GENH
000D7E 0E7F           01267         MOVLW 127
                      01268         F@CALL GLCD@P
000D84 0E08           01269         MOVLW 8
                      01270         F@CALL GLCD@P
000D8A 0E08           01271         MOVLW 8
                      01272         F@CALL GLCD@P
000D90 0E08           01273         MOVLW 8
                      01274         F@CALL GLCD@P
000D96 0E7F           01275         MOVLW 127
                      01276         F@CALL GLCD@P
000D9C 6AE8           01277         CLRW
                      01278         F@CALL GLCD@P
000DA2 6AE8           01279         CLRW
                      01280         F@CALL GLCD@P
000DA8 0E41           01281         MOVLW 65
                      01282         F@CALL GLCD@P
000DAE 0E7F           01283         MOVLW 127
                      01284         F@CALL GLCD@P
000DB4 0E41           01285         MOVLW 65
                      01286         F@CALL GLCD@P
000DBA 6AE8           01287         CLRW
                      01288         F@CALL GLCD@P
000DC0 6AE8           01289         CLRW
                      01290         F@CALL GLCD@P
000DC6 0E01           01291         MOVLW 1
                      01292         F@CALL GLCD@P
000DCC 0E01           01293         MOVLW 1
                      01294         F@CALL GLCD@P
000DD2 0E7F           01295         MOVLW 127
                      01296         F@CALL GLCD@P
000DD8 0E01           01297         MOVLW 1
                      01298         F@CALL GLCD@P
000DDE 0E01           01299         MOVLW 1
                      01300         F@CALL GLCD@P
  00000DE4            01301 F1_000466 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 20
000DE4 0E14           01302         MOVLW 20
000DE6 6E3A           01303         MOVWF SAUCER_FREQ
  00000DE8            01304 F1_000467 EQU $ ; in [INVADERS.BAS] Delayms 5
000DE8 0E05           01305         MOVLW 5
                      01306         F@CALL DL@MS
  00000DEE            01307 F1_000468 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 10
000DEE 0E0A           01308         MOVLW 10
000DF0 6E3A           01309         MOVWF SAUCER_FREQ
  00000DF2            01310 F1_000469 EQU $ ; in [INVADERS.BAS] Delayms 10
000DF2 0E0A           01311         MOVLW 10
                      01312         F@CALL DL@MS
  00000DF8            01313 F1_000470 EQU $ ; in [INVADERS.BAS] SCORE = SCORE + (100 + SAUCER_XPOS)    ' Add 100 + xpos to the score for hitting the saucer
000DF8 6A26           01314         CLRF PP7HH
000DFA 6A27           01315         CLRF PP7HHH
000DFC 0E64           01316         MOVLW 100
000DFE 2598           01317         ADDWF SAUCER_XPOS,W
000E00 6E24           01318         MOVWF PP7
000E02 0E00           01319         MOVLW 0
000E04 6A25           01320         CLRF PP7H
000E06 2225           01321         ADDWFC PP7H,F
000E08 5024           01322         MOVF PP7,W
000E0A 279A           01323         ADDWF SCORE,F
000E0C 5025           01324         MOVF PP7H,W
000E0E 239B           01325         ADDWFC SCOREH,F
000E10 5026           01326         MOVF PP7HH,W
000E12 239C           01327         ADDWFC SCOREHH,F
000E14 5027           01328         MOVF PP7HHH,W
000E16 239D           01329         ADDWFC SCOREHHH,F
  00000E18            01330 F1_000471 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = FALSE
000E18 9431           01331         BCF NOTE_STATUS,2
  00000E1A            01332 F1_000472 EQU $ ; in [INVADERS.BAS] Return
000E1A 0012           01333         RETURN
  00000E1C            01334 F1_000473 EQU $ ; in [INVADERS.BAS] EndSelect
000E1C                01335 BC@LL119
000E1C                01336 BC@LL118
  00000E1C            01337 F1_000474 EQU $ ; in [INVADERS.BAS] Endif
000E1C                01338 BC@LL117
  00000E1C            01339 F1_000475 EQU $ ; in [INVADERS.BAS] Endif
000E1C                01340 BC@LL115
  00000E1C            01341 F1_000478 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0
000E1C 6A3C           01342         CLRF INVADER_LOOP
  00000E1E            01343 F1_000479 EQU $ ; in [INVADERS.BAS] Repeat
000E1E                01344 BC@LL121
  00000E1E            01345 F1_000480 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[INVADER_LOOP] = TRUE Then     ' Only check if the invader is enabled
000E1E EE00 F073      01346         LFSR 0,INVADER_ENABLED
000E22 503C           01347         MOVF INVADER_LOOP,W
000E24 26E9           01348         ADDWF FSR0L,F
000E26 0E00           01349         MOVLW 0
000E28 22EA           01350         ADDWFC FSR0H,F
000E2A 50EF           01351         MOVF INDF0,W
000E2C 6E0E           01352         MOVWF PBP#VAR0
000E2E 2C0E           01353         DECFSZ PBP#VAR0,W
                      01354         F@JUMP BC@LL124
  00000E34            01355 F1_000481 EQU $ ; in [INVADERS.BAS] If INVADER_YPOS[INVADER_LOOP] = MISSILE_YPOS / 8 Then
000E34 EE00 F061      01356         LFSR 0,INVADER_YPOS
000E38 503C           01357         MOVF INVADER_LOOP,W
000E3A 26E9           01358         ADDWF FSR0L,F
000E3C 0E00           01359         MOVLW 0
000E3E 22EA           01360         ADDWFC FSR0H,F
000E40 50EF           01361         MOVF INDF0,W
000E42 6E0E           01362         MOVWF PBP#VAR0
000E44 90D8           01363         CLRC
000E46 3186           01364         RRCF MISSILE_YPOS,W
000E48 6E10           01365         MOVWF PBP#VAR1
000E4A 90D8           01366         CLRC
000E4C 3210           01367         RRCF PBP#VAR1,F
000E4E 90D8           01368         CLRC
000E50 3210           01369         RRCF PBP#VAR1,F
000E52 6A11           01370         CLRF PBP#VAR1H
000E54 5010           01371         MOVF PBP#VAR1,W
000E56 620E           01372         CPFSEQ PBP#VAR0
                      01373         F@JUMP BC@LL126
000E5C 6611           01374         TSTFSZ PBP#VAR1H
                      01375         F@JUMP BC@LL126
  00000E62            01376 F1_000482 EQU $ ; in [INVADERS.BAS] Select MISSILE_XPOS
000E62 EE00 F04F      01377         LFSR 0,INVADER_XPOS
000E66 503C           01378         MOVF INVADER_LOOP,W
000E68 26E9           01379         ADDWF FSR0L,F
000E6A 0E00           01380         MOVLW 0
000E6C 22EA           01381         ADDWFC FSR0H,F
000E6E 50EF           01382         MOVF INDF0,W
000E70 6E0E           01383         MOVWF PBP#VAR0
  00000E72            01384 F1_000483 EQU $ ; in [INVADERS.BAS] Case INVADER_XPOS[INVADER_LOOP] to INVADER_XPOS[INVADER_LOOP] + INVADER_WIDTH
000E72 500E           01385         MOVF PBP#VAR0,W
000E74 5D87           01386         SUBWF MISSILE_XPOS,W
000E76 A0D8           01387         BTFSS STATUS,0
                      01388         GO@TO BC@LL128
000E7C EE00 F04F      01389         LFSR 0,INVADER_XPOS
000E80 503C           01390         MOVF INVADER_LOOP,W
000E82 26E9           01391         ADDWF FSR0L,F
000E84 0E00           01392         MOVLW 0
000E86 22EA           01393         ADDWFC FSR0H,F
000E88 50EF           01394         MOVF INDF0,W
000E8A 6E10           01395         MOVWF PBP#VAR1
000E8C 0E0A           01396         MOVLW 10
000E8E 2410           01397         ADDWF PBP#VAR1,W
000E90 6A0F           01398         CLRF PBP#VAR0H
000E92 6E0E           01399         MOVWF PBP#VAR0
000E94 360F           01400         RLCF PBP#VAR0H,F
000E96 500F           01401         MOVF PBP#VAR0H,W
000E98 E105           01402         BNZ CP@LB13
000E9A 5187           01403         MOVF MISSILE_XPOS,W
000E9C 5C0E           01404         SUBWF PBP#VAR0,W
000E9E A0D8           01405         BTFSS STATUS,0
                      01406         GO@TO BC@LL128
000EA4                01407 CP@LB13
  00000EA4            01408 F1_000484 EQU $ ; in [INVADERS.BAS] INVADER_ENABLED[INVADER_LOOP] = FALSE
000EA4 EE00 F073      01409         LFSR 0,INVADER_ENABLED
000EA8 503C           01410         MOVF INVADER_LOOP,W
000EAA 26E9           01411         ADDWF FSR0L,F
000EAC 0E00           01412         MOVLW 0
000EAE 22EA           01413         ADDWFC FSR0H,F
000EB0 6AEF           01414         CLRF INDF0
  00000EB2            01415 F1_000485 EQU $ ; in [INVADERS.BAS] MISSILE_HIT = TRUE       ' Indicate the ship's missile has hit a target
000EB2 823B           01416         BSF MISSILE_STATUS,1
  00000EB4            01417 F1_000486 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 1
000EB4 8231           01418         BSF NOTE_STATUS,1
  00000EB6            01419 F1_000487 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 30
000EB6 0E1E           01420         MOVLW 30
000EB8 6E38           01421         MOVWF MISSILE_FREQ
  00000EBA            01422 F1_000488 EQU $ ; in [INVADERS.BAS] Select INVADER_LOOP       ' Decide on the score depending on which invader is hit
  00000EBA            01423 F1_000489 EQU $ ; in [INVADERS.BAS] Case 0 to 5        ' Top layer of invaders score 20
000EBA 0E06           01424         MOVLW 6
000EBC 603C           01425         CPFSLT INVADER_LOOP
                      01426         F@JUMP BC@LL131
  00000EC2            01427 F1_000490 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$42,$61,$51,$49,$46,$00,$3E,$51,$49,$45,$3E,$00]
000EC2 EE00 F061      01428         LFSR 0,INVADER_YPOS
000EC6 503C           01429         MOVF INVADER_LOOP,W
000EC8 26E9           01430         ADDWF FSR0L,F
000ECA 0E00           01431         MOVLW 0
000ECC 22EA           01432         ADDWFC FSR0H,F
000ECE 50EF           01433         MOVF INDF0,W
000ED0 6E03           01434         MOVWF GEN
000ED2 EE00 F04F      01435         LFSR 0,INVADER_XPOS
000ED6 503C           01436         MOVF INVADER_LOOP,W
000ED8 26E9           01437         ADDWF FSR0L,F
000EDA 0E00           01438         MOVLW 0
000EDC 22EA           01439         ADDWFC FSR0H,F
000EDE 50EF           01440         MOVF INDF0,W
000EE0 6E0A           01441         MOVWF GENH
000EE2 0E42           01442         MOVLW 66
                      01443         F@CALL GLCD@P
000EE8 0E61           01444         MOVLW 97
                      01445         F@CALL GLCD@P
000EEE 0E51           01446         MOVLW 81
                      01447         F@CALL GLCD@P
000EF4 0E49           01448         MOVLW 73
                      01449         F@CALL GLCD@P
000EFA 0E46           01450         MOVLW 70
                      01451         F@CALL GLCD@P
000F00 6AE8           01452         CLRW
                      01453         F@CALL GLCD@P
000F06 0E3E           01454         MOVLW 62
                      01455         F@CALL GLCD@P
000F0C 0E51           01456         MOVLW 81
                      01457         F@CALL GLCD@P
000F12 0E49           01458         MOVLW 73
                      01459         F@CALL GLCD@P
000F18 0E45           01460         MOVLW 69
                      01461         F@CALL GLCD@P
000F1E 0E3E           01462         MOVLW 62
                      01463         F@CALL GLCD@P
000F24 6AE8           01464         CLRW
                      01465         F@CALL GLCD@P
  00000F2A            01466 F1_000491 EQU $ ; in [INVADERS.BAS] SCORE = SCORE + 20
000F2A 0E14           01467         MOVLW 20
000F2C 279A           01468         ADDWF SCORE,F
000F2E 0E00           01469         MOVLW 0
000F30 239B           01470         ADDWFC SCOREH,F
000F32 239C           01471         ADDWFC SCOREHH,F
000F34 239D           01472         ADDWFC SCOREHHH,F
                      01473         F@JUMP BC@LL130
000F3A                01474 BC@LL131
  00000F3A            01475 F1_000492 EQU $ ; in [INVADERS.BAS] Case 6 to 11       ' Middle layer of invaders score 10
000F3A 0E05           01476         MOVLW 5
000F3C 643C           01477         CPFSGT INVADER_LOOP
                      01478         F@JUMP BC@LL134
000F42 0E0C           01479         MOVLW 12
000F44 603C           01480         CPFSLT INVADER_LOOP
                      01481         F@JUMP BC@LL134
  00000F4A            01482 F1_000493 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$42,$7F,$40,$00,$00,$3E,$51,$49,$45,$3E,$00]
000F4A EE00 F061      01483         LFSR 0,INVADER_YPOS
000F4E 503C           01484         MOVF INVADER_LOOP,W
000F50 26E9           01485         ADDWF FSR0L,F
000F52 0E00           01486         MOVLW 0
000F54 22EA           01487         ADDWFC FSR0H,F
000F56 50EF           01488         MOVF INDF0,W
000F58 6E03           01489         MOVWF GEN
000F5A EE00 F04F      01490         LFSR 0,INVADER_XPOS
000F5E 503C           01491         MOVF INVADER_LOOP,W
000F60 26E9           01492         ADDWF FSR0L,F
000F62 0E00           01493         MOVLW 0
000F64 22EA           01494         ADDWFC FSR0H,F
000F66 50EF           01495         MOVF INDF0,W
000F68 6E0A           01496         MOVWF GENH
000F6A 6AE8           01497         CLRW
                      01498         F@CALL GLCD@P
000F70 0E42           01499         MOVLW 66
                      01500         F@CALL GLCD@P
000F76 0E7F           01501         MOVLW 127
                      01502         F@CALL GLCD@P
000F7C 0E40           01503         MOVLW 64
                      01504         F@CALL GLCD@P
000F82 6AE8           01505         CLRW
                      01506         F@CALL GLCD@P
000F88 6AE8           01507         CLRW
                      01508         F@CALL GLCD@P
000F8E 0E3E           01509         MOVLW 62
                      01510         F@CALL GLCD@P
000F94 0E51           01511         MOVLW 81
                      01512         F@CALL GLCD@P
000F9A 0E49           01513         MOVLW 73
                      01514         F@CALL GLCD@P
000FA0 0E45           01515         MOVLW 69
                      01516         F@CALL GLCD@P
000FA6 0E3E           01517         MOVLW 62
                      01518         F@CALL GLCD@P
000FAC 6AE8           01519         CLRW
                      01520         F@CALL GLCD@P
  00000FB2            01521 F1_000494 EQU $ ; in [INVADERS.BAS] SCORE = SCORE + 10
000FB2 0E0A           01522         MOVLW 10
000FB4 279A           01523         ADDWF SCORE,F
000FB6 0E00           01524         MOVLW 0
000FB8 239B           01525         ADDWFC SCOREH,F
000FBA 239C           01526         ADDWFC SCOREHH,F
000FBC 239D           01527         ADDWFC SCOREHHH,F
                      01528         F@JUMP BC@LL130
000FC2                01529 BC@LL134
  00000FC2            01530 F1_000495 EQU $ ; in [INVADERS.BAS] Case 12 to 17       ' Bottom layer of invaders score 5
000FC2 0E0B           01531         MOVLW 11
000FC4 643C           01532         CPFSGT INVADER_LOOP
                      01533         F@JUMP BC@LL136
000FCA 0E12           01534         MOVLW 18
000FCC 603C           01535         CPFSLT INVADER_LOOP
                      01536         F@JUMP BC@LL136
  00000FD2            01537 F1_000496 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$3E,$51,$49,$45,$3E,$00, $27,$45,$45,$45,$39,$00]
000FD2 EE00 F061      01538         LFSR 0,INVADER_YPOS
000FD6 503C           01539         MOVF INVADER_LOOP,W
000FD8 26E9           01540         ADDWF FSR0L,F
000FDA 0E00           01541         MOVLW 0
000FDC 22EA           01542         ADDWFC FSR0H,F
000FDE 50EF           01543         MOVF INDF0,W
000FE0 6E03           01544         MOVWF GEN
000FE2 EE00 F04F      01545         LFSR 0,INVADER_XPOS
000FE6 503C           01546         MOVF INVADER_LOOP,W
000FE8 26E9           01547         ADDWF FSR0L,F
000FEA 0E00           01548         MOVLW 0
000FEC 22EA           01549         ADDWFC FSR0H,F
000FEE 50EF           01550         MOVF INDF0,W
000FF0 6E0A           01551         MOVWF GENH
000FF2 0E3E           01552         MOVLW 62
                      01553         F@CALL GLCD@P
000FF8 0E51           01554         MOVLW 81
                      01555         F@CALL GLCD@P
000FFE 0E49           01556         MOVLW 73
                      01557         F@CALL GLCD@P
001004 0E45           01558         MOVLW 69
                      01559         F@CALL GLCD@P
00100A 0E3E           01560         MOVLW 62
                      01561         F@CALL GLCD@P
001010 6AE8           01562         CLRW
                      01563         F@CALL GLCD@P
001016 0E27           01564         MOVLW 39
                      01565         F@CALL GLCD@P
00101C 0E45           01566         MOVLW 69
                      01567         F@CALL GLCD@P
001022 0E45           01568         MOVLW 69
                      01569         F@CALL GLCD@P
001028 0E45           01570         MOVLW 69
                      01571         F@CALL GLCD@P
00102E 0E39           01572         MOVLW 57
                      01573         F@CALL GLCD@P
001034 6AE8           01574         CLRW
                      01575         F@CALL GLCD@P
  0000103A            01576 F1_000497 EQU $ ; in [INVADERS.BAS] SCORE = SCORE + 5
00103A 0E05           01577         MOVLW 5
00103C 279A           01578         ADDWF SCORE,F
00103E 0E00           01579         MOVLW 0
001040 239B           01580         ADDWFC SCOREH,F
001042 239C           01581         ADDWFC SCOREHH,F
001044 239D           01582         ADDWFC SCOREHHH,F
  00001046            01583 F1_000498 EQU $ ; in [INVADERS.BAS] EndSelect
001046                01584 BC@LL136
001046                01585 BC@LL130
  00001046            01586 F1_000499 EQU $ ; in [INVADERS.BAS] Delayms 10
001046 0E0A           01587         MOVLW 10
                      01588         F@CALL DL@MS
  0000104C            01589 F1_000500 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 20
00104C 0E14           01590         MOVLW 20
00104E 6E38           01591         MOVWF MISSILE_FREQ
  00001050            01592 F1_000501 EQU $ ; in [INVADERS.BAS] Delayms 10
001050 0E0A           01593         MOVLW 10
                      01594         F@CALL DL@MS
  00001056            01595 F1_000502 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 10
001056 0E0A           01596         MOVLW 10
001058 6E38           01597         MOVWF MISSILE_FREQ
  0000105A            01598 F1_000503 EQU $ ; in [INVADERS.BAS] Delayms 20
00105A 0E14           01599         MOVLW 20
                      01600         F@CALL DL@MS
  00001060            01601 F1_000504 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00] ' Erase the INVADER that was hit
001060 EE00 F061      01602         LFSR 0,INVADER_YPOS
001064 503C           01603         MOVF INVADER_LOOP,W
001066 26E9           01604         ADDWF FSR0L,F
001068 0E00           01605         MOVLW 0
00106A 22EA           01606         ADDWFC FSR0H,F
00106C 50EF           01607         MOVF INDF0,W
00106E 6E03           01608         MOVWF GEN
001070 EE00 F04F      01609         LFSR 0,INVADER_XPOS
001074 503C           01610         MOVF INVADER_LOOP,W
001076 26E9           01611         ADDWF FSR0L,F
001078 0E00           01612         MOVLW 0
00107A 22EA           01613         ADDWFC FSR0H,F
00107C 50EF           01614         MOVF INDF0,W
00107E 6E0A           01615         MOVWF GENH
001080 6AE8           01616         CLRW
                      01617         F@CALL GLCD@P
001086 6AE8           01618         CLRW
                      01619         F@CALL GLCD@P
00108C 6AE8           01620         CLRW
                      01621         F@CALL GLCD@P
001092 6AE8           01622         CLRW
                      01623         F@CALL GLCD@P
001098 6AE8           01624         CLRW
                      01625         F@CALL GLCD@P
00109E 6AE8           01626         CLRW
                      01627         F@CALL GLCD@P
0010A4 6AE8           01628         CLRW
                      01629         F@CALL GLCD@P
0010AA 6AE8           01630         CLRW
                      01631         F@CALL GLCD@P
0010B0 6AE8           01632         CLRW
                      01633         F@CALL GLCD@P
0010B6 6AE8           01634         CLRW
                      01635         F@CALL GLCD@P
0010BC 6AE8           01636         CLRW
                      01637         F@CALL GLCD@P
0010C2 6AE8           01638         CLRW
                      01639         F@CALL GLCD@P
  000010C8            01640 F1_000507 EQU $ ; in [INVADERS.BAS] Dec INVADERS_ENABLED      ' Decrement the hits counter
0010C8 078D           01641         DECF INVADERS_ENABLED,F
  000010CA            01642 F1_000509 EQU $ ; in [INVADERS.BAS] If INVADERS_ENABLED = 1 Then    ' Increase the speed substantially if only one invader left
0010CA 2D8D           01643         DECFSZ INVADERS_ENABLED,W
                      01644         F@JUMP BC@LL138
  000010D0            01645 F1_000510 EQU $ ; in [INVADERS.BAS] INVADER_SPEED = 5
0010D0 0E05           01646         MOVLW 5
0010D2 6F8E           01647         MOVWF INVADER_SPEED
                      01648         F@JUMP BC@LL137
  000010D8            01649 F1_000511 EQU $ ; in [INVADERS.BAS] Else if INVADERS_ENABLED = 2 Then
0010D8                01650 BC@LL138
0010D8 0E02           01651         MOVLW 2
0010DA 638D           01652         CPFSEQ INVADERS_ENABLED
                      01653         F@JUMP BC@LL139
  000010E0            01654 F1_000512 EQU $ ; in [INVADERS.BAS] INVADER_SPEED = 10      ' Increase the speed to fast if there are only two invaders left
0010E0 0E0A           01655         MOVLW 10
0010E2 6F8E           01656         MOVWF INVADER_SPEED
                      01657         F@JUMP BC@LL140
0010E8                01658 BC@LL139
  000010E8            01659 F1_000513 EQU $ ; in [INVADERS.BAS] Else
  000010E8            01660 F1_000515 EQU $ ; in [INVADERS.BAS] If INVADER_SPEED >= 3 Then      ' Is the inveders speed greater than 3 ?
0010E8 0E02           01661         MOVLW 2
0010EA 658E           01662         CPFSGT INVADER_SPEED
                      01663         F@JUMP BC@LL142
  000010F0            01664 F1_000516 EQU $ ; in [INVADERS.BAS] If INVADERS_ENABLED <= 4 Then   ' Are there 4 or less invaders left ?
0010F0 0E05           01665         MOVLW 5
0010F2 618D           01666         CPFSLT INVADERS_ENABLED
                      01667         F@JUMP BC@LL144
  000010F8            01668 F1_000517 EQU $ ; in [INVADERS.BAS] INVADER_SPEED = INVADER_SPEED - 3 ' Yes.. So increase their speed by a factor of three
0010F8 0E03           01669         MOVLW 3
0010FA 5F8E           01670         SUBWF INVADER_SPEED,F
                      01671         F@JUMP BC@LL145
001100                01672 BC@LL144
  00001100            01673 F1_000518 EQU $ ; in [INVADERS.BAS] Else
  00001100            01674 F1_000519 EQU $ ; in [INVADERS.BAS] Dec INVADER_SPEED     ' Otherwise.. Increase the speed of the remaining invaders
001100 078E           01675         DECF INVADER_SPEED,F
  00001102            01676 F1_000520 EQU $ ; in [INVADERS.BAS] Endif
001102                01677 BC@LL145
  00001102            01678 F1_000521 EQU $ ; in [INVADERS.BAS] Endif
001102                01679 BC@LL142
  00001102            01680 F1_000522 EQU $ ; in [INVADERS.BAS] Endif
001102                01681 BC@LL140
001102                01682 BC@LL137
  00001102            01683 F1_000523 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 0     ' Disable the missile's sound
001102 9231           01684         BCF NOTE_STATUS,1
  00001104            01685 F1_000524 EQU $ ; in [INVADERS.BAS] Return          ' And return from the subroutine prematurely
001104 0012           01686         RETURN
  00001106            01687 F1_000525 EQU $ ; in [INVADERS.BAS] Endselect
001106                01688 BC@LL128
001106                01689 BC@LL127
  00001106            01690 F1_000526 EQU $ ; in [INVADERS.BAS] Endif
001106                01691 BC@LL126
  00001106            01692 F1_000527 EQU $ ; in [INVADERS.BAS] Endif
001106                01693 BC@LL124
  00001106            01694 F1_000528 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
001106 2A3C           01695         INCF INVADER_LOOP,F
  00001108            01696 F1_000529 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17
001108 0E11           01697         MOVLW 17
00110A 643C           01698         CPFSGT INVADER_LOOP
                      01699         F@JUMP BC@LL121
00110E                01700 BC@LL122
  0000110E            01701 F1_000530 EQU $ ; in [INVADERS.BAS] Endif
00110E                01702 BC@LL105
  0000110E            01703 F1_000531 EQU $ ; in [INVADERS.BAS] Return
00110E 0012           01704         RETURN
001110                01705 MOVE_MISSILE
  00001110            01706 F1_000538 EQU $ ; in [INVADERS.BAS] If MISSILE_FIRED = TRUE Then          ' Don't enter the routine if the ship's missile is already flying
001110 A03B           01707         BTFSS MISSILE_STATUS,0
                      01708         GO@TO BC@LL147
  00001116            01709 F1_000539 EQU $ ; in [INVADERS.BAS] If TIME_TO_MOVE_SHIP_MISSILE = TRUE Then    ' Is it time to move the ship's missile ?
001116 A63B           01710         BTFSS MISSILE_STATUS,3
                      01711         GO@TO BC@LL149
  0000111C            01712 F1_000540 EQU $ ; in [INVADERS.BAS] Gosub DRAW_MISSILE
                      01713         F@CALL DRAW_MISSILE
  00001120            01714 F1_000541 EQU $ ; in [INVADERS.BAS] Dec MISSILE_YPOS
001120 0786           01715         DECF MISSILE_YPOS,F
  00001122            01716 F1_000542 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 63 - MISSILE_YPOS
001122 5186           01717         MOVF MISSILE_YPOS,W
001124 083F           01718         SUBLW 63
001126 6E38           01719         MOVWF MISSILE_FREQ
  00001128            01720 F1_000543 EQU $ ; in [INVADERS.BAS] Endif
001128                01721 BC@LL149
  00001128            01722 F1_000544 EQU $ ; in [INVADERS.BAS] If MISSILE_YPOS = 0 OR MISSILE_HIT = TRUE Then    ' Has the missile reached the top of the display or hit something ?
001128 C086 F012      01723         MOVFF MISSILE_YPOS,PP0
00112C 6AE8           01724         CLRW
                      01725         F@CALL T@EB
001132 6E2C           01726         MOVWF SP#P9
001134 6AE8           01727         CLRW
001136 B23B           01728         BTFSC MISSILE_STATUS,1
001138 0E01           01729         MOVLW 1
00113A 102C           01730         IORWF SP#P9,W
00113C B4D8           01731         BTFSC STATUS,2
                      01732         GO@TO BC@LL151
  00001142            01733 F1_000545 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 0
001142 9231           01734         BCF NOTE_STATUS,1
  00001144            01735 F1_000546 EQU $ ; in [INVADERS.BAS] MISSILE_FIRED = FALSE        ' Yes. So signal the missile is finished
001144 903B           01736         BCF MISSILE_STATUS,0
  00001146            01737 F1_000547 EQU $ ; in [INVADERS.BAS] Gosub CLEAR_MISSILE         ' Clear the missile
                      01738         F@CALL CLEAR_MISSILE
  0000114A            01739 F1_000548 EQU $ ; in [INVADERS.BAS] MISSILE_YPOS = 63 - 9             ' Reset the missile to the bottom of the display
00114A 0E36           01740         MOVLW 54
00114C 6F86           01741         MOVWF MISSILE_YPOS
  0000114E            01742 F1_000549 EQU $ ; in [INVADERS.BAS] Endif
00114E                01743 BC@LL151
  0000114E            01744 F1_000550 EQU $ ; in [INVADERS.BAS] Endif
00114E                01745 BC@LL147
  0000114E            01746 F1_000551 EQU $ ; in [INVADERS.BAS] Return
00114E 0012           01747         RETURN
001150                01748 SHIP_RIGHT
  00001150            01749 F1_000555 EQU $ ; in [INVADERS.BAS] If SHIP_XPOS > 117 Then Return
001150 0E75           01750         MOVLW 117
001152 6585           01751         CPFSGT SHIP_XPOS
                      01752         F@JUMP BC@LL153
001158 0012           01753         RETURN
00115A                01754 BC@LL153
  0000115A            01755 F1_000556 EQU $ ; in [INVADERS.BAS] Gosub DRAW_SHIP
                      01756         F@CALL DRAW_SHIP
  0000115E            01757 F1_000557 EQU $ ; in [INVADERS.BAS] Inc SHIP_XPOS
00115E 2B85           01758         INCF SHIP_XPOS,F
  00001160            01759 F1_000558 EQU $ ; in [INVADERS.BAS] Return
001160 0012           01760         RETURN
001162                01761 SHIP_LEFT
  00001162            01762 F1_000562 EQU $ ; in [INVADERS.BAS] If SHIP_XPOS = 0 Then Return
001162 6785           01763         TSTFSZ SHIP_XPOS
                      01764         F@JUMP BC@LL155
001168 0012           01765         RETURN
00116A                01766 BC@LL155
  0000116A            01767 F1_000563 EQU $ ; in [INVADERS.BAS] Gosub DRAW_SHIP
                      01768         F@CALL DRAW_SHIP
  0000116E            01769 F1_000564 EQU $ ; in [INVADERS.BAS] Dec SHIP_XPOS
00116E 0785           01770         DECF SHIP_XPOS,F
  00001170            01771 F1_000565 EQU $ ; in [INVADERS.BAS] Return
001170 0012           01772         RETURN
001172                01773 MOVE_INVADERS_DOWN
  00001172            01774 F1_000571 EQU $ ; in [INVADERS.BAS] INVADERS_REACHED_BOTTOM = FALSE         ' Default to the invaders not at bottom of the screen
001172 982D           01775         BCF _B#VR1,4
  00001174            01776 F1_000572 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = 18
001174 0E12           01777         MOVLW 18
001176 6F8C           01778         MOVWF TEMP_LOOP
  00001178            01779 F1_000573 EQU $ ; in [INVADERS.BAS] Repeat
001178                01780 BC@LL156
  00001178            01781 F1_000574 EQU $ ; in [INVADERS.BAS] Dec TEMP_LOOP
001178 078C           01782         DECF TEMP_LOOP,F
  0000117A            01783 F1_000575 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[TEMP_LOOP] = TRUE Then
00117A EE00 F073      01784         LFSR 0,INVADER_ENABLED
00117E 518C           01785         MOVF TEMP_LOOP,W
001180 26E9           01786         ADDWF FSR0L,F
001182 0E00           01787         MOVLW 0
001184 22EA           01788         ADDWFC FSR0H,F
001186 50EF           01789         MOVF INDF0,W
001188 6E0E           01790         MOVWF PBP#VAR0
00118A 2C0E           01791         DECFSZ PBP#VAR0,W
                      01792         F@JUMP BC@LL159
  00001190            01793 F1_000576 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[TEMP_LOOP],INVADER_XPOS[TEMP_LOOP],[$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00]
001190 EE00 F061      01794         LFSR 0,INVADER_YPOS
001194 518C           01795         MOVF TEMP_LOOP,W
001196 26E9           01796         ADDWF FSR0L,F
001198 0E00           01797         MOVLW 0
00119A 22EA           01798         ADDWFC FSR0H,F
00119C 50EF           01799         MOVF INDF0,W
00119E 6E03           01800         MOVWF GEN
0011A0 EE00 F04F      01801         LFSR 0,INVADER_XPOS
0011A4 518C           01802         MOVF TEMP_LOOP,W
0011A6 26E9           01803         ADDWF FSR0L,F
0011A8 0E00           01804         MOVLW 0
0011AA 22EA           01805         ADDWFC FSR0H,F
0011AC 50EF           01806         MOVF INDF0,W
0011AE 6E0A           01807         MOVWF GENH
0011B0 6AE8           01808         CLRW
                      01809         F@CALL GLCD@P
0011B6 6AE8           01810         CLRW
                      01811         F@CALL GLCD@P
0011BC 6AE8           01812         CLRW
                      01813         F@CALL GLCD@P
0011C2 6AE8           01814         CLRW
                      01815         F@CALL GLCD@P
0011C8 6AE8           01816         CLRW
                      01817         F@CALL GLCD@P
0011CE 6AE8           01818         CLRW
                      01819         F@CALL GLCD@P
0011D4 6AE8           01820         CLRW
                      01821         F@CALL GLCD@P
0011DA 6AE8           01822         CLRW
                      01823         F@CALL GLCD@P
0011E0 6AE8           01824         CLRW
                      01825         F@CALL GLCD@P
0011E6 6AE8           01826         CLRW
                      01827         F@CALL GLCD@P
0011EC 6AE8           01828         CLRW
                      01829         F@CALL GLCD@P
0011F2 6AE8           01830         CLRW
                      01831         F@CALL GLCD@P
  000011F8            01832 F1_000577 EQU $ ; in [INVADERS.BAS] INVADER_YPOS[TEMP_LOOP] = INVADER_YPOS[TEMP_LOOP] + 1
0011F8 EE00 F061      01833         LFSR 0,INVADER_YPOS
0011FC 518C           01834         MOVF TEMP_LOOP,W
0011FE 26E9           01835         ADDWF FSR0L,F
001200 0E00           01836         MOVLW 0
001202 22EA           01837         ADDWFC FSR0H,F
001204 50EF           01838         MOVF INDF0,W
001206 6E10           01839         MOVWF PBP#VAR1
001208 2810           01840         INCF PBP#VAR1,W
00120A 6E0E           01841         MOVWF PBP#VAR0
00120C EE00 F061      01842         LFSR 0,INVADER_YPOS
001210 518C           01843         MOVF TEMP_LOOP,W
001212 26E9           01844         ADDWF FSR0L,F
001214 0E00           01845         MOVLW 0
001216 22EA           01846         ADDWFC FSR0H,F
001218 C00E FFEF      01847         MOVFF PBP#VAR0,INDF0
  0000121C            01848 F1_000578 EQU $ ; in [INVADERS.BAS] If INVADER_YPOS[TEMP_LOOP] = 6 Then      ' Have the invaders hit the bases ?
00121C EE00 F061      01849         LFSR 0,INVADER_YPOS
001220 518C           01850         MOVF TEMP_LOOP,W
001222 26E9           01851         ADDWF FSR0L,F
001224 0E00           01852         MOVLW 0
001226 22EA           01853         ADDWFC FSR0H,F
001228 50EF           01854         MOVF INDF0,W
00122A 6E0E           01855         MOVWF PBP#VAR0
00122C 0E06           01856         MOVLW 6
00122E 620E           01857         CPFSEQ PBP#VAR0
                      01858         F@JUMP BC@LL161
  00001234            01859 F1_000579 EQU $ ; in [INVADERS.BAS] Str BASE_ENABLED = 0,0,0,0,0,0,0,0,0     ' Yes.. So disable them all
001234 6A3D           01860         CLRF BASE_ENABLED#0
001236 6A3E           01861         CLRF BASE_ENABLED#1
001238 6A3F           01862         CLRF BASE_ENABLED#2
00123A 6A40           01863         CLRF BASE_ENABLED#3
00123C 6A41           01864         CLRF BASE_ENABLED#4
00123E 6A42           01865         CLRF BASE_ENABLED#5
001240 6A43           01866         CLRF BASE_ENABLED#6
001242 6A44           01867         CLRF BASE_ENABLED#7
001244 6A45           01868         CLRF BASE_ENABLED#8
  00001246            01869 F1_000580 EQU $ ; in [INVADERS.BAS] Str BASE_HITS = 5,5,5,5,5,5,5,5,5     ' And move their hit counters to past their thresholds
001246 0E05           01870         MOVLW 5
001248 6E46           01871         MOVWF BASE_HITS#0
00124A 0E05           01872         MOVLW 5
00124C 6E47           01873         MOVWF BASE_HITS#1
00124E 0E05           01874         MOVLW 5
001250 6E48           01875         MOVWF BASE_HITS#2
001252 0E05           01876         MOVLW 5
001254 6E49           01877         MOVWF BASE_HITS#3
001256 0E05           01878         MOVLW 5
001258 6E4A           01879         MOVWF BASE_HITS#4
00125A 0E05           01880         MOVLW 5
00125C 6E4B           01881         MOVWF BASE_HITS#5
00125E 0E05           01882         MOVLW 5
001260 6E4C           01883         MOVWF BASE_HITS#6
001262 0E05           01884         MOVLW 5
001264 6E4D           01885         MOVWF BASE_HITS#7
001266 0E05           01886         MOVLW 5
001268 6E4E           01887         MOVWF BASE_HITS#8
  0000126A            01888 F1_000581 EQU $ ; in [INVADERS.BAS] Endif
00126A                01889 BC@LL161
  0000126A            01890 F1_000582 EQU $ ; in [INVADERS.BAS] If INVADER_YPOS[TEMP_LOOP] >= 7 Then INVADERS_REACHED_BOTTOM = TRUE ' Set a flag if the invaders have reached the bottom
00126A EE00 F061      01891         LFSR 0,INVADER_YPOS
00126E 518C           01892         MOVF TEMP_LOOP,W
001270 26E9           01893         ADDWF FSR0L,F
001272 0E00           01894         MOVLW 0
001274 22EA           01895         ADDWFC FSR0H,F
001276 50EF           01896         MOVF INDF0,W
001278 6E0E           01897         MOVWF PBP#VAR0
00127A 0E06           01898         MOVLW 6
00127C 640E           01899         CPFSGT PBP#VAR0
                      01900         F@JUMP BC@LL163
001282 882D           01901         BSF _B#VR1,4
001284                01902 BC@LL163
  00001284            01903 F1_000583 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[TEMP_LOOP],INVADER_XPOS[TEMP_LOOP],[$00,$06,$0C,$9C,$EA,$36,$36,$EA,$9C,$0C,$06,$00]
001284 EE00 F061      01904         LFSR 0,INVADER_YPOS
001288 518C           01905         MOVF TEMP_LOOP,W
00128A 26E9           01906         ADDWF FSR0L,F
00128C 0E00           01907         MOVLW 0
00128E 22EA           01908         ADDWFC FSR0H,F
001290 50EF           01909         MOVF INDF0,W
001292 6E03           01910         MOVWF GEN
001294 EE00 F04F      01911         LFSR 0,INVADER_XPOS
001298 518C           01912         MOVF TEMP_LOOP,W
00129A 26E9           01913         ADDWF FSR0L,F
00129C 0E00           01914         MOVLW 0
00129E 22EA           01915         ADDWFC FSR0H,F
0012A0 50EF           01916         MOVF INDF0,W
0012A2 6E0A           01917         MOVWF GENH
0012A4 6AE8           01918         CLRW
                      01919         F@CALL GLCD@P
0012AA 0E06           01920         MOVLW 6
                      01921         F@CALL GLCD@P
0012B0 0E0C           01922         MOVLW 12
                      01923         F@CALL GLCD@P
0012B6 0E9C           01924         MOVLW 156
                      01925         F@CALL GLCD@P
0012BC 0EEA           01926         MOVLW 234
                      01927         F@CALL GLCD@P
0012C2 0E36           01928         MOVLW 54
                      01929         F@CALL GLCD@P
0012C8 0E36           01930         MOVLW 54
                      01931         F@CALL GLCD@P
0012CE 0EEA           01932         MOVLW 234
                      01933         F@CALL GLCD@P
0012D4 0E9C           01934         MOVLW 156
                      01935         F@CALL GLCD@P
0012DA 0E0C           01936         MOVLW 12
                      01937         F@CALL GLCD@P
0012E0 0E06           01938         MOVLW 6
                      01939         F@CALL GLCD@P
0012E6 6AE8           01940         CLRW
                      01941         F@CALL GLCD@P
  000012EC            01942 F1_000584 EQU $ ; in [INVADERS.BAS] Endif
0012EC                01943 BC@LL159
  000012EC            01944 F1_000585 EQU $ ; in [INVADERS.BAS] Until TEMP_LOOP = 0
0012EC 678C           01945         TSTFSZ TEMP_LOOP
                      01946         F@JUMP BC@LL156
0012F0                01947 BC@LL157
  000012F0            01948 F1_000586 EQU $ ; in [INVADERS.BAS] Inc INVADER_MISSILE_SPEED          ' Slow down the invader's missile speed as they approach the bottom of the screen
0012F0 2B92           01949         INCF INVADER_MISSILE_SPEED,F
  000012F2            01950 F1_000587 EQU $ ; in [INVADERS.BAS] If INVADER_SPEED >= 3 Then Dec INVADER_SPEED     ' Increase the speed of the invaders
0012F2 0E02           01951         MOVLW 2
0012F4 658E           01952         CPFSGT INVADER_SPEED
                      01953         F@JUMP BC@LL165
0012FA 078E           01954         DECF INVADER_SPEED,F
0012FC                01955 BC@LL165
  000012FC            01956 F1_000588 EQU $ ; in [INVADERS.BAS] Return
0012FC 0012           01957         RETURN
0012FE                01958 RESET_INVADERS
  000012FE            01959 F1_000595 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0
0012FE 6A3C           01960         CLRF INVADER_LOOP
  00001300            01961 F1_000596 EQU $ ; in [INVADERS.BAS] Repeat
001300                01962 BC@LL166
  00001300            01963 F1_000597 EQU $ ; in [INVADERS.BAS] INVADER_ENABLED[INVADER_LOOP] = TRUE      ' Set all invaders to active and image 1
001300 EE00 F073      01964         LFSR 0,INVADER_ENABLED
001304 503C           01965         MOVF INVADER_LOOP,W
001306 26E9           01966         ADDWF FSR0L,F
001308 0E00           01967         MOVLW 0
00130A 22EA           01968         ADDWFC FSR0H,F
00130C 0E01           01969         MOVLW 1
00130E 6EEF           01970         MOVWF INDF0
  00001310            01971 F1_000598 EQU $ ; in [INVADERS.BAS] Select INVADER_LOOP
  00001310            01972 F1_000599 EQU $ ; in [INVADERS.BAS] Case 0 to 5
001310 0E06           01973         MOVLW 6
001312 603C           01974         CPFSLT INVADER_LOOP
                      01975         F@JUMP BC@LL169
  00001318            01976 F1_000600 EQU $ ; in [INVADERS.BAS] INVADER_XPOS[INVADER_LOOP] = (INVADER_LOOP + 1) * 16
001318 0E01           01977         MOVLW 1
00131A 243C           01978         ADDWF INVADER_LOOP,W
00131C 6A25           01979         CLRF PP7H
00131E 6E24           01980         MOVWF PP7
001320 3625           01981         RLCF PP7H,F
001322 5024           01982         MOVF PP7,W
001324 0D10           01983         MULLW 16
001326 CFF3 F00E      01984         MOVFF PRODL,PBP#VAR0
00132A EE00 F04F      01985         LFSR 0,INVADER_XPOS
00132E 503C           01986         MOVF INVADER_LOOP,W
001330 26E9           01987         ADDWF FSR0L,F
001332 0E00           01988         MOVLW 0
001334 22EA           01989         ADDWFC FSR0H,F
001336 C00E FFEF      01990         MOVFF PBP#VAR0,INDF0
  0000133A            01991 F1_000601 EQU $ ; in [INVADERS.BAS] INVADER_YPOS[INVADER_LOOP] = 1
00133A EE00 F061      01992         LFSR 0,INVADER_YPOS
00133E 503C           01993         MOVF INVADER_LOOP,W
001340 26E9           01994         ADDWF FSR0L,F
001342 0E00           01995         MOVLW 0
001344 22EA           01996         ADDWFC FSR0H,F
001346 0E01           01997         MOVLW 1
001348 6EEF           01998         MOVWF INDF0
                      01999         F@JUMP BC@LL168
00134E                02000 BC@LL169
  0000134E            02001 F1_000602 EQU $ ; in [INVADERS.BAS] Case 6 to 11
00134E 0E05           02002         MOVLW 5
001350 643C           02003         CPFSGT INVADER_LOOP
                      02004         F@JUMP BC@LL172
001356 0E0C           02005         MOVLW 12
001358 603C           02006         CPFSLT INVADER_LOOP
                      02007         F@JUMP BC@LL172
  0000135E            02008 F1_000603 EQU $ ; in [INVADERS.BAS] INVADER_XPOS[INVADER_LOOP] = (INVADER_LOOP - 5) * 16
00135E 0EFB           02009         MOVLW LOW (-5)
001360 243C           02010         ADDWF INVADER_LOOP,W
001362 6E24           02011         MOVWF PP7
001364 0EFF           02012         MOVLW LOW ((-5) >> 8)
001366 B0D8           02013         SKPNC
001368 0F01           02014         ADDLW 1
00136A 6E25           02015         MOVWF PP7H
00136C 5024           02016         MOVF PP7,W
00136E 0D10           02017         MULLW 16
001370 CFF3 F00E      02018         MOVFF PRODL,PBP#VAR0
001374 EE00 F04F      02019         LFSR 0,INVADER_XPOS
001378 503C           02020         MOVF INVADER_LOOP,W
00137A 26E9           02021         ADDWF FSR0L,F
00137C 0E00           02022         MOVLW 0
00137E 22EA           02023         ADDWFC FSR0H,F
001380 C00E FFEF      02024         MOVFF PBP#VAR0,INDF0
  00001384            02025 F1_000604 EQU $ ; in [INVADERS.BAS] INVADER_YPOS[INVADER_LOOP] = 2
001384 EE00 F061      02026         LFSR 0,INVADER_YPOS
001388 503C           02027         MOVF INVADER_LOOP,W
00138A 26E9           02028         ADDWF FSR0L,F
00138C 0E00           02029         MOVLW 0
00138E 22EA           02030         ADDWFC FSR0H,F
001390 0E02           02031         MOVLW 2
001392 6EEF           02032         MOVWF INDF0
                      02033         F@JUMP BC@LL168
001398                02034 BC@LL172
  00001398            02035 F1_000605 EQU $ ; in [INVADERS.BAS] Case 12 to 17
001398 0E0B           02036         MOVLW 11
00139A 643C           02037         CPFSGT INVADER_LOOP
                      02038         F@JUMP BC@LL174
0013A0 0E12           02039         MOVLW 18
0013A2 603C           02040         CPFSLT INVADER_LOOP
                      02041         F@JUMP BC@LL174
  000013A8            02042 F1_000606 EQU $ ; in [INVADERS.BAS] INVADER_XPOS[INVADER_LOOP] = (INVADER_LOOP - 11) * 16
0013A8 0EF5           02043         MOVLW LOW (-11)
0013AA 243C           02044         ADDWF INVADER_LOOP,W
0013AC 6E24           02045         MOVWF PP7
0013AE 0EFF           02046         MOVLW LOW ((-11) >> 8)
0013B0 B0D8           02047         SKPNC
0013B2 0F01           02048         ADDLW 1
0013B4 6E25           02049         MOVWF PP7H
0013B6 5024           02050         MOVF PP7,W
0013B8 0D10           02051         MULLW 16
0013BA CFF3 F00E      02052         MOVFF PRODL,PBP#VAR0
0013BE EE00 F04F      02053         LFSR 0,INVADER_XPOS
0013C2 503C           02054         MOVF INVADER_LOOP,W
0013C4 26E9           02055         ADDWF FSR0L,F
0013C6 0E00           02056         MOVLW 0
0013C8 22EA           02057         ADDWFC FSR0H,F
0013CA C00E FFEF      02058         MOVFF PBP#VAR0,INDF0
  000013CE            02059 F1_000607 EQU $ ; in [INVADERS.BAS] INVADER_YPOS[INVADER_LOOP] = 3
0013CE EE00 F061      02060         LFSR 0,INVADER_YPOS
0013D2 503C           02061         MOVF INVADER_LOOP,W
0013D4 26E9           02062         ADDWF FSR0L,F
0013D6 0E00           02063         MOVLW 0
0013D8 22EA           02064         ADDWFC FSR0H,F
0013DA 0E03           02065         MOVLW 3
0013DC 6EEF           02066         MOVWF INDF0
  000013DE            02067 F1_000608 EQU $ ; in [INVADERS.BAS] End Select
0013DE                02068 BC@LL174
0013DE                02069 BC@LL168
  000013DE            02070 F1_000609 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
0013DE 2A3C           02071         INCF INVADER_LOOP,F
  000013E0            02072 F1_000610 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17
0013E0 0E11           02073         MOVLW 17
0013E2 643C           02074         CPFSGT INVADER_LOOP
                      02075         F@JUMP BC@LL166
0013E6                02076 BC@LL167
  000013E6            02077 F1_000611 EQU $ ; in [INVADERS.BAS] Return
0013E6 0012           02078         RETURN
0013E8                02079 MOVE_INVADERS
  000013E8            02080 F1_000617 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INVADERS_DOWN = FALSE
0013E8 962D           02081         BCF _B#VR1,3
  000013EA            02082 F1_000618 EQU $ ; in [INVADERS.BAS] If INVADERS_DIRECTION = FORWARD Then       ' Are the invaders to move forward (right) ?
0013EA A22D           02083         BTFSS _B#VR1,1
                      02084         GO@TO BC@LL176
  000013F0            02085 F1_000619 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0          ' Yes.. So reset the invader loop
0013F0 6A3C           02086         CLRF INVADER_LOOP
  000013F2            02087 F1_000620 EQU $ ; in [INVADERS.BAS] Repeat             ' Create a loop for all the invaders
0013F2                02088 BC@LL177
  000013F2            02089 F1_000621 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[INVADER_LOOP] = TRUE Then     ' Is this invader enabled ?
0013F2 EE00 F073      02090         LFSR 0,INVADER_ENABLED
0013F6 503C           02091         MOVF INVADER_LOOP,W
0013F8 26E9           02092         ADDWF FSR0L,F
0013FA 0E00           02093         MOVLW 0
0013FC 22EA           02094         ADDWFC FSR0H,F
0013FE 50EF           02095         MOVF INDF0,W
001400 6E0E           02096         MOVWF PBP#VAR0
001402 2C0E           02097         DECFSZ PBP#VAR0,W
                      02098         F@JUMP BC@LL180
  00001408            02099 F1_000622 EQU $ ; in [INVADERS.BAS] INVADER_XPOS[INVADER_LOOP] = INVADER_XPOS[INVADER_LOOP] + 1 ' Yes.. So increment its XPOS
001408 EE00 F04F      02100         LFSR 0,INVADER_XPOS
00140C 503C           02101         MOVF INVADER_LOOP,W
00140E 26E9           02102         ADDWF FSR0L,F
001410 0E00           02103         MOVLW 0
001412 22EA           02104         ADDWFC FSR0H,F
001414 50EF           02105         MOVF INDF0,W
001416 6E10           02106         MOVWF PBP#VAR1
001418 2810           02107         INCF PBP#VAR1,W
00141A 6E0E           02108         MOVWF PBP#VAR0
00141C EE00 F04F      02109         LFSR 0,INVADER_XPOS
001420 503C           02110         MOVF INVADER_LOOP,W
001422 26E9           02111         ADDWF FSR0L,F
001424 0E00           02112         MOVLW 0
001426 22EA           02113         ADDWFC FSR0H,F
001428 C00E FFEF      02114         MOVFF PBP#VAR0,INDF0
  0000142C            02115 F1_000623 EQU $ ; in [INVADERS.BAS] If INVADER_XPOS[INVADER_LOOP] >= INVADER_RIGHT_LIMIT Then  ' Have we hit the right side of the screen ?
00142C EE00 F04F      02116         LFSR 0,INVADER_XPOS
001430 503C           02117         MOVF INVADER_LOOP,W
001432 26E9           02118         ADDWF FSR0L,F
001434 0E00           02119         MOVLW 0
001436 22EA           02120         ADDWFC FSR0H,F
001438 50EF           02121         MOVF INDF0,W
00143A 6E0E           02122         MOVWF PBP#VAR0
00143C 0E74           02123         MOVLW 116
00143E 640E           02124         CPFSGT PBP#VAR0
                      02125         F@JUMP BC@LL182
  00001444            02126 F1_000624 EQU $ ; in [INVADERS.BAS] INVADERS_DIRECTION = BACKWARD    ' Yes.. So indicate that we need to go backwards
001444 922D           02127         BCF _B#VR1,1
  00001446            02128 F1_000625 EQU $ ; in [INVADERS.BAS] SAUCER_ENABLED = TRUE
001446 862E           02129         BSF _B#VR2,3
  00001448            02130 F1_000626 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INVADERS_DOWN = TRUE   ' and signal that we need to move the invaders down
001448 862D           02131         BSF _B#VR1,3
  0000144A            02132 F1_000627 EQU $ ; in [INVADERS.BAS] Endif
00144A                02133 BC@LL182
  0000144A            02134 F1_000628 EQU $ ; in [INVADERS.BAS] Endif
00144A                02135 BC@LL180
  0000144A            02136 F1_000629 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
00144A 2A3C           02137         INCF INVADER_LOOP,F
  0000144C            02138 F1_000630 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17         ' Close the loop after all the invader elements have been scanned
00144C 0E11           02139         MOVLW 17
00144E 643C           02140         CPFSGT INVADER_LOOP
                      02141         F@JUMP BC@LL177
001452                02142 BC@LL178
                      02143         F@JUMP BC@LL183
001456                02144 BC@LL176
  00001456            02145 F1_000631 EQU $ ; in [INVADERS.BAS] Else              ' Otherwise we go backwards (left)
  00001456            02146 F1_000632 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0          ' Reset the invader loop
001456 6A3C           02147         CLRF INVADER_LOOP
  00001458            02148 F1_000633 EQU $ ; in [INVADERS.BAS] Repeat             ' Create a loop for all the invaders
001458                02149 BC@LL184
  00001458            02150 F1_000634 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[INVADER_LOOP] = TRUE Then        ' Is this invader enabled ?
001458 EE00 F073      02151         LFSR 0,INVADER_ENABLED
00145C 503C           02152         MOVF INVADER_LOOP,W
00145E 26E9           02153         ADDWF FSR0L,F
001460 0E00           02154         MOVLW 0
001462 22EA           02155         ADDWFC FSR0H,F
001464 50EF           02156         MOVF INDF0,W
001466 6E0E           02157         MOVWF PBP#VAR0
001468 2C0E           02158         DECFSZ PBP#VAR0,W
                      02159         F@JUMP BC@LL187
  0000146E            02160 F1_000635 EQU $ ; in [INVADERS.BAS] INVADER_XPOS[INVADER_LOOP] = INVADER_XPOS[INVADER_LOOP] - 1 ' Yes.. So decrement its XPOS
00146E EE00 F04F      02161         LFSR 0,INVADER_XPOS
001472 503C           02162         MOVF INVADER_LOOP,W
001474 26E9           02163         ADDWF FSR0L,F
001476 0E00           02164         MOVLW 0
001478 22EA           02165         ADDWFC FSR0H,F
00147A 50EF           02166         MOVF INDF0,W
00147C 6E10           02167         MOVWF PBP#VAR1
00147E 0410           02168         DECF PBP#VAR1,W
001480 6E0E           02169         MOVWF PBP#VAR0
001482 EE00 F04F      02170         LFSR 0,INVADER_XPOS
001486 503C           02171         MOVF INVADER_LOOP,W
001488 26E9           02172         ADDWF FSR0L,F
00148A 0E00           02173         MOVLW 0
00148C 22EA           02174         ADDWFC FSR0H,F
00148E C00E FFEF      02175         MOVFF PBP#VAR0,INDF0
  00001492            02176 F1_000636 EQU $ ; in [INVADERS.BAS] If INVADER_XPOS[INVADER_LOOP] <= 1 Then      ' Have we hit the left side of the screen ?
001492 EE00 F04F      02177         LFSR 0,INVADER_XPOS
001496 503C           02178         MOVF INVADER_LOOP,W
001498 26E9           02179         ADDWF FSR0L,F
00149A 0E00           02180         MOVLW 0
00149C 22EA           02181         ADDWFC FSR0H,F
00149E 50EF           02182         MOVF INDF0,W
0014A0 6E0E           02183         MOVWF PBP#VAR0
0014A2 0E02           02184         MOVLW 2
0014A4 600E           02185         CPFSLT PBP#VAR0
                      02186         F@JUMP BC@LL189
  000014AA            02187 F1_000637 EQU $ ; in [INVADERS.BAS] INVADERS_DIRECTION = FORWARD    ' Yes.. So indicate that we need to go forwards
0014AA 822D           02188         BSF _B#VR1,1
  000014AC            02189 F1_000638 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INVADERS_DOWN = TRUE   ' and signal that we need to move the invaders down
0014AC 862D           02190         BSF _B#VR1,3
  000014AE            02191 F1_000639 EQU $ ; in [INVADERS.BAS] Endif
0014AE                02192 BC@LL189
  000014AE            02193 F1_000640 EQU $ ; in [INVADERS.BAS] Endif
0014AE                02194 BC@LL187
  000014AE            02195 F1_000641 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
0014AE 2A3C           02196         INCF INVADER_LOOP,F
  000014B0            02197 F1_000642 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17         ' Close the loop after all the invader elements have been scanned
0014B0 0E11           02198         MOVLW 17
0014B2 643C           02199         CPFSGT INVADER_LOOP
                      02200         F@JUMP BC@LL184
0014B6                02201 BC@LL185
  000014B6            02202 F1_000643 EQU $ ; in [INVADERS.BAS] Endif
0014B6                02203 BC@LL183
  000014B6            02204 F1_000644 EQU $ ; in [INVADERS.BAS] If TIME_TO_MOVE_INVADERS_DOWN = TRUE Then Gosub MOVE_INVADERS_DOWN ' Do we need to move the invaders down ?
0014B6 A62D           02205         BTFSS _B#VR1,3
                      02206         GO@TO BC@LL191
                      02207         F@CALL MOVE_INVADERS_DOWN
0014BE                02208 BC@LL191
0014BE                02209 DRAW_INVADERS
  000014BE            02210 F1_000660 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0
0014BE 6A3C           02211         CLRF INVADER_LOOP
  000014C0            02212 F1_000661 EQU $ ; in [INVADERS.BAS] Repeat
0014C0                02213 BC@LL192
  000014C0            02214 F1_000662 EQU $ ; in [INVADERS.BAS] If INVADER_ENABLED[INVADER_LOOP] = TRUE Then
0014C0 EE00 F073      02215         LFSR 0,INVADER_ENABLED
0014C4 503C           02216         MOVF INVADER_LOOP,W
0014C6 26E9           02217         ADDWF FSR0L,F
0014C8 0E00           02218         MOVLW 0
0014CA 22EA           02219         ADDWFC FSR0H,F
0014CC 50EF           02220         MOVF INDF0,W
0014CE 6E0E           02221         MOVWF PBP#VAR0
0014D0 2C0E           02222         DECFSZ PBP#VAR0,W
                      02223         F@JUMP BC@LL195
  000014D6            02224 F1_000663 EQU $ ; in [INVADERS.BAS] If INVADER_CHARACTER = 0 Then
0014D6 BA2D           02225         BTFSC _B#VR1,5
                      02226         GO@TO BC@LL197
  000014DC            02227 F1_000664 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_ENABLE = 0
0014DC 9031           02228         BCF NOTE_STATUS,0
  000014DE            02229 F1_000665 EQU $ ; in [INVADERS.BAS] INVADER_FREQ = 90
0014DE 0E5A           02230         MOVLW 90
0014E0 6E34           02231         MOVWF INVADER_FREQ
  000014E2            02232 F1_000666 EQU $ ; in [INVADERS.BAS] Select INVADER_LOOP       ' Decide on the score depending on which invader is hit
  000014E2            02233 F1_000667 EQU $ ; in [INVADERS.BAS] Case 0 to 5
0014E2 0E06           02234         MOVLW 6
0014E4 603C           02235         CPFSLT INVADER_LOOP
                      02236         F@JUMP BC@LL199
  000014EA            02237 F1_000668 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$18,$4C,$2E,$5B,$2F,$2F,$5B,$2E,$4C,$18,$00]
0014EA EE00 F061      02238         LFSR 0,INVADER_YPOS
0014EE 503C           02239         MOVF INVADER_LOOP,W
0014F0 26E9           02240         ADDWF FSR0L,F
0014F2 0E00           02241         MOVLW 0
0014F4 22EA           02242         ADDWFC FSR0H,F
0014F6 50EF           02243         MOVF INDF0,W
0014F8 6E03           02244         MOVWF GEN
0014FA EE00 F04F      02245         LFSR 0,INVADER_XPOS
0014FE 503C           02246         MOVF INVADER_LOOP,W
001500 26E9           02247         ADDWF FSR0L,F
001502 0E00           02248         MOVLW 0
001504 22EA           02249         ADDWFC FSR0H,F
001506 50EF           02250         MOVF INDF0,W
001508 6E0A           02251         MOVWF GENH
00150A 6AE8           02252         CLRW
                      02253         F@CALL GLCD@P
001510 0E18           02254         MOVLW 24
                      02255         F@CALL GLCD@P
001516 0E4C           02256         MOVLW 76
                      02257         F@CALL GLCD@P
00151C 0E2E           02258         MOVLW 46
                      02259         F@CALL GLCD@P
001522 0E5B           02260         MOVLW 91
                      02261         F@CALL GLCD@P
001528 0E2F           02262         MOVLW 47
                      02263         F@CALL GLCD@P
00152E 0E2F           02264         MOVLW 47
                      02265         F@CALL GLCD@P
001534 0E5B           02266         MOVLW 91
                      02267         F@CALL GLCD@P
00153A 0E2E           02268         MOVLW 46
                      02269         F@CALL GLCD@P
001540 0E4C           02270         MOVLW 76
                      02271         F@CALL GLCD@P
001546 0E18           02272         MOVLW 24
                      02273         F@CALL GLCD@P
00154C 6AE8           02274         CLRW
                      02275         F@CALL GLCD@P
                      02276         F@JUMP BC@LL198
001556                02277 BC@LL199
  00001556            02278 F1_000669 EQU $ ; in [INVADERS.BAS] Case 6 to 11
001556 0E05           02279         MOVLW 5
001558 643C           02280         CPFSGT INVADER_LOOP
                      02281         F@JUMP BC@LL202
00155E 0E0C           02282         MOVLW 12
001560 603C           02283         CPFSLT INVADER_LOOP
                      02284         F@JUMP BC@LL202
  00001566            02285 F1_000670 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$38,$0D,$3E,$5A,$1E,$1E,$5A,$3E,$0D,$38,$00]
001566 EE00 F061      02286         LFSR 0,INVADER_YPOS
00156A 503C           02287         MOVF INVADER_LOOP,W
00156C 26E9           02288         ADDWF FSR0L,F
00156E 0E00           02289         MOVLW 0
001570 22EA           02290         ADDWFC FSR0H,F
001572 50EF           02291         MOVF INDF0,W
001574 6E03           02292         MOVWF GEN
001576 EE00 F04F      02293         LFSR 0,INVADER_XPOS
00157A 503C           02294         MOVF INVADER_LOOP,W
00157C 26E9           02295         ADDWF FSR0L,F
00157E 0E00           02296         MOVLW 0
001580 22EA           02297         ADDWFC FSR0H,F
001582 50EF           02298         MOVF INDF0,W
001584 6E0A           02299         MOVWF GENH
001586 6AE8           02300         CLRW
                      02301         F@CALL GLCD@P
00158C 0E38           02302         MOVLW 56
                      02303         F@CALL GLCD@P
001592 0E0D           02304         MOVLW 13
                      02305         F@CALL GLCD@P
001598 0E3E           02306         MOVLW 62
                      02307         F@CALL GLCD@P
00159E 0E5A           02308         MOVLW 90
                      02309         F@CALL GLCD@P
0015A4 0E1E           02310         MOVLW 30
                      02311         F@CALL GLCD@P
0015AA 0E1E           02312         MOVLW 30
                      02313         F@CALL GLCD@P
0015B0 0E5A           02314         MOVLW 90
                      02315         F@CALL GLCD@P
0015B6 0E3E           02316         MOVLW 62
                      02317         F@CALL GLCD@P
0015BC 0E0D           02318         MOVLW 13
                      02319         F@CALL GLCD@P
0015C2 0E38           02320         MOVLW 56
                      02321         F@CALL GLCD@P
0015C8 6AE8           02322         CLRW
                      02323         F@CALL GLCD@P
                      02324         F@JUMP BC@LL198
0015D2                02325 BC@LL202
  000015D2            02326 F1_000671 EQU $ ; in [INVADERS.BAS] Case 12 to 17
0015D2 0E0B           02327         MOVLW 11
0015D4 643C           02328         CPFSGT INVADER_LOOP
                      02329         F@JUMP BC@LL204
0015DA 0E12           02330         MOVLW 18
0015DC 603C           02331         CPFSLT INVADER_LOOP
                      02332         F@JUMP BC@LL204
  000015E2            02333 F1_000672 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$4C,$6E,$3A,$1B,$2F,$2F,$1B,$3A,$6E,$4C,$00]
0015E2 EE00 F061      02334         LFSR 0,INVADER_YPOS
0015E6 503C           02335         MOVF INVADER_LOOP,W
0015E8 26E9           02336         ADDWF FSR0L,F
0015EA 0E00           02337         MOVLW 0
0015EC 22EA           02338         ADDWFC FSR0H,F
0015EE 50EF           02339         MOVF INDF0,W
0015F0 6E03           02340         MOVWF GEN
0015F2 EE00 F04F      02341         LFSR 0,INVADER_XPOS
0015F6 503C           02342         MOVF INVADER_LOOP,W
0015F8 26E9           02343         ADDWF FSR0L,F
0015FA 0E00           02344         MOVLW 0
0015FC 22EA           02345         ADDWFC FSR0H,F
0015FE 50EF           02346         MOVF INDF0,W
001600 6E0A           02347         MOVWF GENH
001602 6AE8           02348         CLRW
                      02349         F@CALL GLCD@P
001608 0E4C           02350         MOVLW 76
                      02351         F@CALL GLCD@P
00160E 0E6E           02352         MOVLW 110
                      02353         F@CALL GLCD@P
001614 0E3A           02354         MOVLW 58
                      02355         F@CALL GLCD@P
00161A 0E1B           02356         MOVLW 27
                      02357         F@CALL GLCD@P
001620 0E2F           02358         MOVLW 47
                      02359         F@CALL GLCD@P
001626 0E2F           02360         MOVLW 47
                      02361         F@CALL GLCD@P
00162C 0E1B           02362         MOVLW 27
                      02363         F@CALL GLCD@P
001632 0E3A           02364         MOVLW 58
                      02365         F@CALL GLCD@P
001638 0E6E           02366         MOVLW 110
                      02367         F@CALL GLCD@P
00163E 0E4C           02368         MOVLW 76
                      02369         F@CALL GLCD@P
001644 6AE8           02370         CLRW
                      02371         F@CALL GLCD@P
  0000164A            02372 F1_000673 EQU $ ; in [INVADERS.BAS] EndSelect
00164A                02373 BC@LL204
00164A                02374 BC@LL198
  0000164A            02375 F1_000675 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_ENABLE = 1
00164A 8031           02376         BSF NOTE_STATUS,0
                      02377         F@JUMP BC@LL205
001650                02378 BC@LL197
  00001650            02379 F1_000676 EQU $ ; in [INVADERS.BAS] Else
  00001650            02380 F1_000677 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_ENABLE = 0
001650 9031           02381         BCF NOTE_STATUS,0
  00001652            02382 F1_000678 EQU $ ; in [INVADERS.BAS] INVADER_FREQ = 105
001652 0E69           02383         MOVLW 105
001654 6E34           02384         MOVWF INVADER_FREQ
  00001656            02385 F1_000679 EQU $ ; in [INVADERS.BAS] Select INVADER_LOOP       ' Decide on the score depending on which invader is hit
  00001656            02386 F1_000680 EQU $ ; in [INVADERS.BAS] Case 0 to 5
001656 0E06           02387         MOVLW 6
001658 603C           02388         CPFSLT INVADER_LOOP
                      02389         F@JUMP BC@LL207
  0000165E            02390 F1_000681 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$08,$2C,$5E,$0B,$1F,$1F,$0B,$5E,$2C,$08,$00]
00165E EE00 F061      02391         LFSR 0,INVADER_YPOS
001662 503C           02392         MOVF INVADER_LOOP,W
001664 26E9           02393         ADDWF FSR0L,F
001666 0E00           02394         MOVLW 0
001668 22EA           02395         ADDWFC FSR0H,F
00166A 50EF           02396         MOVF INDF0,W
00166C 6E03           02397         MOVWF GEN
00166E EE00 F04F      02398         LFSR 0,INVADER_XPOS
001672 503C           02399         MOVF INVADER_LOOP,W
001674 26E9           02400         ADDWF FSR0L,F
001676 0E00           02401         MOVLW 0
001678 22EA           02402         ADDWFC FSR0H,F
00167A 50EF           02403         MOVF INDF0,W
00167C 6E0A           02404         MOVWF GENH
00167E 6AE8           02405         CLRW
                      02406         F@CALL GLCD@P
001684 0E08           02407         MOVLW 8
                      02408         F@CALL GLCD@P
00168A 0E2C           02409         MOVLW 44
                      02410         F@CALL GLCD@P
001690 0E5E           02411         MOVLW 94
                      02412         F@CALL GLCD@P
001696 0E0B           02413         MOVLW 11
                      02414         F@CALL GLCD@P
00169C 0E1F           02415         MOVLW 31
                      02416         F@CALL GLCD@P
0016A2 0E1F           02417         MOVLW 31
                      02418         F@CALL GLCD@P
0016A8 0E0B           02419         MOVLW 11
                      02420         F@CALL GLCD@P
0016AE 0E5E           02421         MOVLW 94
                      02422         F@CALL GLCD@P
0016B4 0E2C           02423         MOVLW 44
                      02424         F@CALL GLCD@P
0016BA 0E08           02425         MOVLW 8
                      02426         F@CALL GLCD@P
0016C0 6AE8           02427         CLRW
                      02428         F@CALL GLCD@P
                      02429         F@JUMP BC@LL206
0016CA                02430 BC@LL207
  000016CA            02431 F1_000682 EQU $ ; in [INVADERS.BAS] Case 6 to 11
0016CA 0E05           02432         MOVLW 5
0016CC 643C           02433         CPFSGT INVADER_LOOP
                      02434         F@JUMP BC@LL210
0016D2 0E0C           02435         MOVLW 12
0016D4 603C           02436         CPFSLT INVADER_LOOP
                      02437         F@JUMP BC@LL210
  000016DA            02438 F1_000683 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$06,$48,$7F,$1A,$1E,$1E,$1A,$7F,$48,$06,$00]
0016DA EE00 F061      02439         LFSR 0,INVADER_YPOS
0016DE 503C           02440         MOVF INVADER_LOOP,W
0016E0 26E9           02441         ADDWF FSR0L,F
0016E2 0E00           02442         MOVLW 0
0016E4 22EA           02443         ADDWFC FSR0H,F
0016E6 50EF           02444         MOVF INDF0,W
0016E8 6E03           02445         MOVWF GEN
0016EA EE00 F04F      02446         LFSR 0,INVADER_XPOS
0016EE 503C           02447         MOVF INVADER_LOOP,W
0016F0 26E9           02448         ADDWF FSR0L,F
0016F2 0E00           02449         MOVLW 0
0016F4 22EA           02450         ADDWFC FSR0H,F
0016F6 50EF           02451         MOVF INDF0,W
0016F8 6E0A           02452         MOVWF GENH
0016FA 6AE8           02453         CLRW
                      02454         F@CALL GLCD@P
001700 0E06           02455         MOVLW 6
                      02456         F@CALL GLCD@P
001706 0E48           02457         MOVLW 72
                      02458         F@CALL GLCD@P
00170C 0E7F           02459         MOVLW 127
                      02460         F@CALL GLCD@P
001712 0E1A           02461         MOVLW 26
                      02462         F@CALL GLCD@P
001718 0E1E           02463         MOVLW 30
                      02464         F@CALL GLCD@P
00171E 0E1E           02465         MOVLW 30
                      02466         F@CALL GLCD@P
001724 0E1A           02467         MOVLW 26
                      02468         F@CALL GLCD@P
00172A 0E7F           02469         MOVLW 127
                      02470         F@CALL GLCD@P
001730 0E48           02471         MOVLW 72
                      02472         F@CALL GLCD@P
001736 0E06           02473         MOVLW 6
                      02474         F@CALL GLCD@P
00173C 6AE8           02475         CLRW
                      02476         F@CALL GLCD@P
                      02477         F@JUMP BC@LL206
001746                02478 BC@LL210
  00001746            02479 F1_000684 EQU $ ; in [INVADERS.BAS] Case 12 to 17
001746 0E0B           02480         MOVLW 11
001748 643C           02481         CPFSGT INVADER_LOOP
                      02482         F@JUMP BC@LL212
00174E 0E12           02483         MOVLW 18
001750 603C           02484         CPFSLT INVADER_LOOP
                      02485         F@JUMP BC@LL212
  00001756            02486 F1_000685 EQU $ ; in [INVADERS.BAS] LCDWRITE INVADER_YPOS[INVADER_LOOP],INVADER_XPOS[INVADER_LOOP],[$00,$0C,$0E,$3A,$4B,$1F,$1F,$4B,$3A,$0E,$0C,$00]
001756 EE00 F061      02487         LFSR 0,INVADER_YPOS
00175A 503C           02488         MOVF INVADER_LOOP,W
00175C 26E9           02489         ADDWF FSR0L,F
00175E 0E00           02490         MOVLW 0
001760 22EA           02491         ADDWFC FSR0H,F
001762 50EF           02492         MOVF INDF0,W
001764 6E03           02493         MOVWF GEN
001766 EE00 F04F      02494         LFSR 0,INVADER_XPOS
00176A 503C           02495         MOVF INVADER_LOOP,W
00176C 26E9           02496         ADDWF FSR0L,F
00176E 0E00           02497         MOVLW 0
001770 22EA           02498         ADDWFC FSR0H,F
001772 50EF           02499         MOVF INDF0,W
001774 6E0A           02500         MOVWF GENH
001776 6AE8           02501         CLRW
                      02502         F@CALL GLCD@P
00177C 0E0C           02503         MOVLW 12
                      02504         F@CALL GLCD@P
001782 0E0E           02505         MOVLW 14
                      02506         F@CALL GLCD@P
001788 0E3A           02507         MOVLW 58
                      02508         F@CALL GLCD@P
00178E 0E4B           02509         MOVLW 75
                      02510         F@CALL GLCD@P
001794 0E1F           02511         MOVLW 31
                      02512         F@CALL GLCD@P
00179A 0E1F           02513         MOVLW 31
                      02514         F@CALL GLCD@P
0017A0 0E4B           02515         MOVLW 75
                      02516         F@CALL GLCD@P
0017A6 0E3A           02517         MOVLW 58
                      02518         F@CALL GLCD@P
0017AC 0E0E           02519         MOVLW 14
                      02520         F@CALL GLCD@P
0017B2 0E0C           02521         MOVLW 12
                      02522         F@CALL GLCD@P
0017B8 6AE8           02523         CLRW
                      02524         F@CALL GLCD@P
  000017BE            02525 F1_000686 EQU $ ; in [INVADERS.BAS] EndSelect
0017BE                02526 BC@LL212
0017BE                02527 BC@LL206
  000017BE            02528 F1_000687 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_ENABLE = 1
0017BE 8031           02529         BSF NOTE_STATUS,0
  000017C0            02530 F1_000688 EQU $ ; in [INVADERS.BAS] Endif
0017C0                02531 BC@LL205
  000017C0            02532 F1_000689 EQU $ ; in [INVADERS.BAS] Endif
0017C0                02533 BC@LL195
  000017C0            02534 F1_000690 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
0017C0 2A3C           02535         INCF INVADER_LOOP,F
  000017C2            02536 F1_000691 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 17
0017C2 0E11           02537         MOVLW 17
0017C4 643C           02538         CPFSGT INVADER_LOOP
                      02539         F@JUMP BC@LL192
0017C8                02540 BC@LL193
  000017C8            02541 F1_000692 EQU $ ; in [INVADERS.BAS] Return
0017C8 0012           02542         RETURN
0017CA                02543 CLEAR_SAUCER
  000017CA            02544 F1_000696 EQU $ ; in [INVADERS.BAS] Lcdwrite 0,SAUCER_XPOS,[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
0017CA 6A03           02545         CLRF GEN
0017CC C098 F00A      02546         MOVFF SAUCER_XPOS,GENH
0017D0 6AE8           02547         CLRW
                      02548         F@CALL GLCD@P
0017D6 6AE8           02549         CLRW
                      02550         F@CALL GLCD@P
0017DC 6AE8           02551         CLRW
                      02552         F@CALL GLCD@P
0017E2 6AE8           02553         CLRW
                      02554         F@CALL GLCD@P
0017E8 6AE8           02555         CLRW
                      02556         F@CALL GLCD@P
0017EE 6AE8           02557         CLRW
                      02558         F@CALL GLCD@P
0017F4 6AE8           02559         CLRW
                      02560         F@CALL GLCD@P
0017FA 6AE8           02561         CLRW
                      02562         F@CALL GLCD@P
001800 6AE8           02563         CLRW
                      02564         F@CALL GLCD@P
001806 6AE8           02565         CLRW
                      02566         F@CALL GLCD@P
00180C 6AE8           02567         CLRW
                      02568         F@CALL GLCD@P
001812 6AE8           02569         CLRW
                      02570         F@CALL GLCD@P
001818 6AE8           02571         CLRW
                      02572         F@CALL GLCD@P
00181E 6AE8           02573         CLRW
                      02574         F@CALL GLCD@P
001824 6AE8           02575         CLRW
                      02576         F@CALL GLCD@P
00182A 6AE8           02577         CLRW
                      02578         F@CALL GLCD@P
001830 6AE8           02579         CLRW
                      02580         F@CALL GLCD@P
001836 6AE8           02581         CLRW
                      02582         F@CALL GLCD@P
  0000183C            02583 F1_000697 EQU $ ; in [INVADERS.BAS] Return
00183C 0012           02584         RETURN
00183E                02585 DRAW_SAUCER
  0000183E            02586 F1_000701 EQU $ ; in [INVADERS.BAS] Lcdwrite 0,SAUCER_XPOS,[$00,$04,$0E,$3A,$1B,$0F,$1B,$1B,$0F,$1B,$3A,$0E,$04,$00]
00183E 6A03           02587         CLRF GEN
001840 C098 F00A      02588         MOVFF SAUCER_XPOS,GENH
001844 6AE8           02589         CLRW
                      02590         F@CALL GLCD@P
00184A 0E04           02591         MOVLW 4
                      02592         F@CALL GLCD@P
001850 0E0E           02593         MOVLW 14
                      02594         F@CALL GLCD@P
001856 0E3A           02595         MOVLW 58
                      02596         F@CALL GLCD@P
00185C 0E1B           02597         MOVLW 27
                      02598         F@CALL GLCD@P
001862 0E0F           02599         MOVLW 15
                      02600         F@CALL GLCD@P
001868 0E1B           02601         MOVLW 27
                      02602         F@CALL GLCD@P
00186E 0E1B           02603         MOVLW 27
                      02604         F@CALL GLCD@P
001874 0E0F           02605         MOVLW 15
                      02606         F@CALL GLCD@P
00187A 0E1B           02607         MOVLW 27
                      02608         F@CALL GLCD@P
001880 0E3A           02609         MOVLW 58
                      02610         F@CALL GLCD@P
001886 0E0E           02611         MOVLW 14
                      02612         F@CALL GLCD@P
00188C 0E04           02613         MOVLW 4
                      02614         F@CALL GLCD@P
001892 6AE8           02615         CLRW
                      02616         F@CALL GLCD@P
  00001898            02617 F1_000702 EQU $ ; in [INVADERS.BAS] Return
001898 0012           02618         RETURN
00189A                02619 MOVE_SAUCER
  0000189A            02620 F1_000707 EQU $ ; in [INVADERS.BAS] If SAUCER_ENABLED = TRUE Then          ' Don't enter the routine if the saucer is already flying
00189A A62E           02621         BTFSS _B#VR2,3
                      02622         GO@TO BC@LL214
  000018A0            02623 F1_000708 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = 1         ' Enable the saucer's sound channel
0018A0 8431           02624         BSF NOTE_STATUS,2
  000018A2            02625 F1_000709 EQU $ ; in [INVADERS.BAS] If TIME_TO_MOVE_SAUCER = TRUE Then      ' Is it time to move the saucer ?
0018A2 A42E           02626         BTFSS _B#VR2,2
                      02627         GO@TO BC@LL216
  000018A8            02628 F1_000710 EQU $ ; in [INVADERS.BAS] Dec SAUCER_XPOS          ' Move the saucer accross the screen
0018A8 0798           02629         DECF SAUCER_XPOS,F
  000018AA            02630 F1_000711 EQU $ ; in [INVADERS.BAS] if SAUCER_XPOS // 2 = 0 Then
0018AA 0E01           02631         MOVLW 1
0018AC 1598           02632         ANDWF SAUCER_XPOS,W
0018AE 6E0E           02633         MOVWF PBP#VAR0
0018B0 6A0F           02634         CLRF PBP#VAR0H
0018B2 500F           02635         MOVF PBP#VAR0H,W
0018B4 100E           02636         IORWF PBP#VAR0,W
0018B6 A4D8           02637         BTFSS STATUS,2
                      02638         GO@TO BC@LL218
  000018BC            02639 F1_000712 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 10
0018BC 0E0A           02640         MOVLW 10
0018BE 6E3A           02641         MOVWF SAUCER_FREQ
                      02642         F@JUMP BC@LL219
0018C4                02643 BC@LL218
  000018C4            02644 F1_000713 EQU $ ; in [INVADERS.BAS] Else
  000018C4            02645 F1_000714 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 12
0018C4 0E0C           02646         MOVLW 12
0018C6 6E3A           02647         MOVWF SAUCER_FREQ
  000018C8            02648 F1_000715 EQU $ ; in [INVADERS.BAS] Endif
0018C8                02649 BC@LL219
  000018C8            02650 F1_000716 EQU $ ; in [INVADERS.BAS] Gosub DRAW_SAUCER         ' Display the saucer
                      02651         F@CALL DRAW_SAUCER
  000018CA            02652 F1_000717 EQU $ ; in [INVADERS.BAS] Endif
0018CA                02653 BC@LL216
  000018CA            02654 F1_000718 EQU $ ; in [INVADERS.BAS] If SAUCER_XPOS = 0 OR SAUCER_HIT = TRUE Then    ' Has the saucer reached the left of the display or been hit ?
0018CA C098 F012      02655         MOVFF SAUCER_XPOS,PP0
0018CE 6AE8           02656         CLRW
                      02657         F@CALL T@EB
0018D4 6E2C           02658         MOVWF SP#P9
0018D6 6AE8           02659         CLRW
0018D8 B22E           02660         BTFSC _B#VR2,1
0018DA 0E01           02661         MOVLW 1
0018DC 102C           02662         IORWF SP#P9,W
0018DE B4D8           02663         BTFSC STATUS,2
                      02664         GO@TO BC@LL221
  000018E4            02665 F1_000719 EQU $ ; in [INVADERS.BAS] SAUCER_ENABLED = FALSE        ' Yes. So signal the sacucer is finished
0018E4 962E           02666         BCF _B#VR2,3
  000018E6            02667 F1_000720 EQU $ ; in [INVADERS.BAS] Gosub CLEAR_SAUCER         ' Clear the saucer
                      02668         F@CALL CLEAR_SAUCER
  000018E8            02669 F1_000721 EQU $ ; in [INVADERS.BAS] SAUCER_XPOS = 127 - SAUCER_WIDTH           ' Reset the saucer to the right of the display
0018E8 0E71           02670         MOVLW 113
0018EA 6F98           02671         MOVWF SAUCER_XPOS
  000018EC            02672 F1_000722 EQU $ ; in [INVADERS.BAS] Print at 0,0,Dec LEVEL, " ",Dec SCORE,at 0,20,LIVES ' And display the score because it was erased by the saucer
0018EC 6A03           02673         CLRF GEN
0018EE 6AE8           02674         CLRW
                      02675         F@CALL GLCD_CUR
0018F4 0E80           02676         MOVLW 128
0018F6 6E01           02677         MOVWF BPFH
0018F8 6A09           02678         CLRF GEN4H
0018FA C09F F019      02679         MOVFF LEVELH,PP2H
0018FE C09E F018      02680         MOVFF LEVEL,PP2
                      02681         F@CALL OUT@DEC
001906 0E20           02682         MOVLW 32
                      02683         F@CALL PRINT
00190C 6A09           02684         CLRF GEN4H
00190E C09D F027      02685         MOVFF SCOREHHH,PP7HHH
001912 C09C F026      02686         MOVFF SCOREHH,PP7HH
001916 C09B F025      02687         MOVFF SCOREH,PP7H
00191A C09A F024      02688         MOVFF SCORE,PP7
                      02689         F@CALL OUT@DEC32
001922 6A03           02690         CLRF GEN
001924 0E14           02691         MOVLW 20
                      02692         F@CALL GLCD_CUR
00192A 51A0           02693         MOVF LIVES,W
                      02694         F@CALL PRINT
  00001930            02695 F1_000723 EQU $ ; in [INVADERS.BAS] Endif
001930                02696 BC@LL221
                      02697         F@JUMP BC@LL222
001934                02698 BC@LL214
  00001934            02699 F1_000724 EQU $ ; in [INVADERS.BAS] Else
  00001934            02700 F1_000725 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = 0        ' Disable the saucer's sound channel
001934 9431           02701         BCF NOTE_STATUS,2
  00001936            02702 F1_000726 EQU $ ; in [INVADERS.BAS] Endif
001936                02703 BC@LL222
  00001936            02704 F1_000727 EQU $ ; in [INVADERS.BAS] Return
001936 0012           02705         RETURN
001938                02706 GOVERN_SPEEDS
  00001938            02707 F1_000733 EQU $ ; in [INVADERS.BAS] Dec SAUCER_SPEED
001938 0799           02708         DECF SAUCER_SPEED,F
  0000193A            02709 F1_000734 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_SAUCER = FALSE
00193A 942E           02710         BCF _B#VR2,2
  0000193C            02711 F1_000735 EQU $ ; in [INVADERS.BAS] If SAUCER_SPEED = 0 Then
00193C 6799           02712         TSTFSZ SAUCER_SPEED
                      02713         F@JUMP BC@LL224
  00001942            02714 F1_000736 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_SAUCER = TRUE
001942 842E           02715         BSF _B#VR2,2
  00001944            02716 F1_000737 EQU $ ; in [INVADERS.BAS] SAUCER_SPEED = 3
001944 0E03           02717         MOVLW 3
001946 6F99           02718         MOVWF SAUCER_SPEED
  00001948            02719 F1_000738 EQU $ ; in [INVADERS.BAS] Endif
001948                02720 BC@LL224
  00001948            02721 F1_000741 EQU $ ; in [INVADERS.BAS] Dec SHIP_SPEED
001948 0788           02722         DECF SHIP_SPEED,F
  0000194A            02723 F1_000742 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_BASE = FALSE
00194A 902D           02724         BCF _B#VR1,0
  0000194C            02725 F1_000743 EQU $ ; in [INVADERS.BAS] If SHIP_SPEED = 0 Then
00194C 6788           02726         TSTFSZ SHIP_SPEED
                      02727         F@JUMP BC@LL226
  00001952            02728 F1_000744 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_BASE = TRUE
001952 802D           02729         BSF _B#VR1,0
  00001954            02730 F1_000745 EQU $ ; in [INVADERS.BAS] SHIP_SPEED = 3
001954 0E03           02731         MOVLW 3
001956 6F88           02732         MOVWF SHIP_SPEED
  00001958            02733 F1_000746 EQU $ ; in [INVADERS.BAS] Endif
001958                02734 BC@LL226
  00001958            02735 F1_000749 EQU $ ; in [INVADERS.BAS] Inc INVADER_MISSILE_TICK
001958 2B8A           02736         INCF INVADER_MISSILE_TICK,F
  0000195A            02737 F1_000750 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INV_MISSILE = FALSE
00195A 983B           02738         BCF MISSILE_STATUS,4
  0000195C            02739 F1_000751 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE_TICK >= INVADER_MISSILE_SPEED Then    ' Set the speed for the invader's missile
00195C 5192           02740         MOVF INVADER_MISSILE_SPEED,W
00195E 5D8A           02741         SUBWF INVADER_MISSILE_TICK,W
001960 A0D8           02742         BTFSS STATUS,0
                      02743         GO@TO BC@LL228
  00001966            02744 F1_000752 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INV_MISSILE = TRUE
001966 883B           02745         BSF MISSILE_STATUS,4
  00001968            02746 F1_000753 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_TICK = 0
001968 6B8A           02747         CLRF INVADER_MISSILE_TICK
  0000196A            02748 F1_000754 EQU $ ; in [INVADERS.BAS] Endif
00196A                02749 BC@LL228
  0000196A            02750 F1_000756 EQU $ ; in [INVADERS.BAS] Inc INVADER_MISSILE2_TICK
00196A 2B94           02751         INCF INVADER_MISSILE2_TICK,F
  0000196C            02752 F1_000757 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INV_MISSILE2 = FALSE
00196C 9C2D           02753         BCF _B#VR1,6
  0000196E            02754 F1_000758 EQU $ ; in [INVADERS.BAS] If INVADER_MISSILE2_TICK >= INVADER_MISSILE2_SPEED Then   ' Set the speed for the invader's second missile
00196E 5197           02755         MOVF INVADER_MISSILE2_SPEED,W
001970 5D94           02756         SUBWF INVADER_MISSILE2_TICK,W
001972 A0D8           02757         BTFSS STATUS,0
                      02758         GO@TO BC@LL230
  00001978            02759 F1_000759 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INV_MISSILE2 = TRUE
001978 8C2D           02760         BSF _B#VR1,6
  0000197A            02761 F1_000760 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_TICK = 0
00197A 6B94           02762         CLRF INVADER_MISSILE2_TICK
  0000197C            02763 F1_000761 EQU $ ; in [INVADERS.BAS] Endif
00197C                02764 BC@LL230
  0000197C            02765 F1_000764 EQU $ ; in [INVADERS.BAS] Dec SHIP_MISSILE_TICK
00197C 078B           02766         DECF SHIP_MISSILE_TICK,F
  0000197E            02767 F1_000765 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_SHIP_MISSILE = FALSE
00197E 963B           02768         BCF MISSILE_STATUS,3
  00001980            02769 F1_000766 EQU $ ; in [INVADERS.BAS] If SHIP_MISSILE_TICK = 0 Then          ' Set the speed for the ship's missile
001980 678B           02770         TSTFSZ SHIP_MISSILE_TICK
                      02771         F@JUMP BC@LL232
  00001986            02772 F1_000767 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_SHIP_MISSILE = TRUE
001986 863B           02773         BSF MISSILE_STATUS,3
  00001988            02774 F1_000768 EQU $ ; in [INVADERS.BAS] SHIP_MISSILE_TICK = 2
001988 0E02           02775         MOVLW 2
00198A 6F8B           02776         MOVWF SHIP_MISSILE_TICK
  0000198C            02777 F1_000769 EQU $ ; in [INVADERS.BAS] Endif
00198C                02778 BC@LL232
  0000198C            02779 F1_000770 EQU $ ; in [INVADERS.BAS] Return
00198C 0012           02780         RETURN
00198E                02781 DISPLAY_SPASH_SCREEN
  0000198E            02782 F1_000776 EQU $ ; in [INVADERS.BAS] Cls
                      02783         F@CALL GLCD@CLS
  00001992            02784 F1_000777 EQU $ ; in [INVADERS.BAS] SCORE = 0
001992 6B9D           02785         CLRF SCOREHHH
001994 6B9C           02786         CLRF SCOREHH
001996 6B9B           02787         CLRF SCOREH
001998 6B9A           02788         CLRF SCORE
  0000199A            02789 F1_000778 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = 0
00199A 6B8C           02790         CLRF TEMP_LOOP
  0000199C            02791 F1_000779 EQU $ ; in [INVADERS.BAS] Repeat
00199C                02792 BC@LL233
  0000199C            02793 F1_000780 EQU $ ; in [INVADERS.BAS] INVADER_LOOP = 0
00199C 6A3C           02794         CLRF INVADER_LOOP
  0000199E            02795 F1_000781 EQU $ ; in [INVADERS.BAS] Repeat
00199E                02796 BC@LL235
  0000199E            02797 F1_000782 EQU $ ; in [INVADERS.BAS] LEVEL = CREAD INVADER_SPLASH_SCREEN + SCORE
00199E 0E24           02798         MOVLW HIGH INVADER_SPLASH_SCREEN
0019A0 6E0F           02799         MOVWF PBP#VAR0H
0019A2 0E1E           02800         MOVLW LOW INVADER_SPLASH_SCREEN
0019A4 6E0E           02801         MOVWF PBP#VAR0
0019A6 519A           02802         MOVF SCORE,W
0019A8 240E           02803         ADDWF PBP#VAR0,W
0019AA 6EF6           02804         MOVWF TBLPTRL
0019AC 519B           02805         MOVF SCOREH,W
0019AE 200F           02806         ADDWFC PBP#VAR0H,W
0019B0 6EF7           02807         MOVWF TBLPTRLH
0019B2 6AA6           02808         CLRF EECON1
0019B4 8EA6           02809         BSF EECON1,EEPGD
0019B6 0009           02810         TBLRD*+
0019B8 CFF5 F09E      02811         MOVFF TABLAT,LEVEL
0019BC 0008           02812         TBLRD*
0019BE CFF5 F09F      02813         MOVFF TABLAT,LEVELH
  000019C2            02814 F1_000783 EQU $ ; in [INVADERS.BAS] LcdWrite TEMP_LOOP,INVADER_LOOP,[LEVEL]
0019C2 C08C F003      02815         MOVFF TEMP_LOOP,GEN
0019C6 C03C F00A      02816         MOVFF INVADER_LOOP,GENH
0019CA 519E           02817         MOVF LEVEL,W
                      02818         F@CALL GLCD@P
  000019D0            02819 F1_000784 EQU $ ; in [INVADERS.BAS] Inc SCORE
0019D0 2B9A           02820         INCF SCORE,F
0019D2 0E00           02821         MOVLW 0
0019D4 239B           02822         ADDWFC SCOREH,F
0019D6 239C           02823         ADDWFC SCOREHH,F
0019D8 239D           02824         ADDWFC SCOREHHH,F
  000019DA            02825 F1_000785 EQU $ ; in [INVADERS.BAS] Inc INVADER_LOOP
0019DA 2A3C           02826         INCF INVADER_LOOP,F
  000019DC            02827 F1_000786 EQU $ ; in [INVADERS.BAS] Until INVADER_LOOP > 127
0019DC 0E7F           02828         MOVLW 127
0019DE 643C           02829         CPFSGT INVADER_LOOP
                      02830         F@JUMP BC@LL235
0019E2                02831 BC@LL236
  000019E2            02832 F1_000787 EQU $ ; in [INVADERS.BAS] Inc TEMP_LOOP
0019E2 2B8C           02833         INCF TEMP_LOOP,F
  000019E4            02834 F1_000788 EQU $ ; in [INVADERS.BAS] Until TEMP_LOOP > 7
0019E4 0E07           02835         MOVLW 7
0019E6 658C           02836         CPFSGT TEMP_LOOP
                      02837         F@JUMP BC@LL233
0019EA                02838 BC@LL234
  000019EA            02839 F1_000789 EQU $ ; in [INVADERS.BAS] Return
0019EA 0012           02840         RETURN
0019EC                02841 MAIN_PROGRAM_LOOP
  000019EC            02842 F1_000793 EQU $ ; in [INVADERS.BAS] Gosub DISPLAY_SPASH_SCREEN
                      02843         F@CALL DISPLAY_SPASH_SCREEN
  000019EE            02844 F1_000794 EQU $ ; in [INVADERS.BAS] Delayms 1000
0019EE 0E03           02845         MOVLW 3
0019F0 6E17           02846         MOVWF PP1H
0019F2 0EE8           02847         MOVLW 232
                      02848         F@CALL DLY@W
  000019F8            02849 F1_000795 EQU $ ; in [INVADERS.BAS] Print at 4,1,"PRESS FIRE TO START"
0019F8 0E04           02850         MOVLW 4
0019FA 6E03           02851         MOVWF GEN
0019FC 0E01           02852         MOVLW 1
                      02853         F@CALL GLCD_CUR
001A02 0E28           02854         MOVLW HIGH STR@LB1
001A04 6E09           02855         MOVWF GEN4H
001A06 0E1E           02856         MOVLW LOW STR@LB1
001A08 6E08           02857         MOVWF GEN4
                      02858         F@CALL PRINT@MSTR
  00001A0E            02859 F1_000796 EQU $ ; in [INVADERS.BAS] While FIRE_BUTTON = 1 : Wend
001A0E                02860 BC@LL237
001A0E A481           02861         BTFSS PORTB,2
                      02862         GO@TO BC@LL238
                      02863
                      02864         F@JUMP BC@LL237
001A16                02865 BC@LL238
  00001A16            02866 F1_000797 EQU $ ; in [INVADERS.BAS] While FIRE_BUTTON = 0 : Wend
001A16                02867 BC@LL239
001A16 B481           02868         BTFSC PORTB,2
                      02869         GO@TO BC@LL240
                      02870
                      02871         F@JUMP BC@LL239
001A1E                02872 BC@LL240
  00001A1E            02873 F1_000798 EQU $ ; in [INVADERS.BAS] Delayms 50
001A1E 0E32           02874         MOVLW 50
                      02875         F@CALL DL@MS
  00001A24            02876 F1_000800 EQU $ ; in [INVADERS.BAS] Cls
                      02877         F@CALL GLCD@CLS
  00001A28            02878 F1_000801 EQU $ ; in [INVADERS.BAS] Print at 0,7,"Scoring"
001A28 6A03           02879         CLRF GEN
001A2A 0E07           02880         MOVLW 7
                      02881         F@CALL GLCD_CUR
001A30 0E28           02882         MOVLW HIGH STR@LB2
001A32 6E09           02883         MOVWF GEN4H
001A34 0E32           02884         MOVLW LOW STR@LB2
001A36 6E08           02885         MOVWF GEN4
                      02886         F@CALL PRINT@MSTR
  00001A3C            02887 F1_000802 EQU $ ; in [INVADERS.BAS] Lcdwrite 2,0,[$00,$04,$0E,$3A,$1B,$0F,$1B,$1B,$0F,$1B,$3A,$0E,$04,$00]
001A3C 0E02           02888         MOVLW 2
001A3E 6E03           02889         MOVWF GEN
001A40 6A0A           02890         CLRF GENH
001A42 6AE8           02891         CLRW
                      02892         F@CALL GLCD@P
001A48 0E04           02893         MOVLW 4
                      02894         F@CALL GLCD@P
001A4E 0E0E           02895         MOVLW 14
                      02896         F@CALL GLCD@P
001A54 0E3A           02897         MOVLW 58
                      02898         F@CALL GLCD@P
001A5A 0E1B           02899         MOVLW 27
                      02900         F@CALL GLCD@P
001A60 0E0F           02901         MOVLW 15
                      02902         F@CALL GLCD@P
001A66 0E1B           02903         MOVLW 27
                      02904         F@CALL GLCD@P
001A6C 0E1B           02905         MOVLW 27
                      02906         F@CALL GLCD@P
001A72 0E0F           02907         MOVLW 15
                      02908         F@CALL GLCD@P
001A78 0E1B           02909         MOVLW 27
                      02910         F@CALL GLCD@P
001A7E 0E3A           02911         MOVLW 58
                      02912         F@CALL GLCD@P
001A84 0E0E           02913         MOVLW 14
                      02914         F@CALL GLCD@P
001A8A 0E04           02915         MOVLW 4
                      02916         F@CALL GLCD@P
001A90 6AE8           02917         CLRW
                      02918         F@CALL GLCD@P
  00001A96            02919 F1_000803 EQU $ ; in [INVADERS.BAS] Print at 2,2," = 100+ Points"
001A96 0E02           02920         MOVLW 2
001A98 6E03           02921         MOVWF GEN
001A9A 0E02           02922         MOVLW 2
                      02923         F@CALL GLCD_CUR
001AA0 0E28           02924         MOVLW HIGH STR@LB3
001AA2 6E09           02925         MOVWF GEN4H
001AA4 0E3A           02926         MOVLW LOW STR@LB3
001AA6 6E08           02927         MOVWF GEN4
                      02928         F@CALL PRINT@MSTR
  00001AAC            02929 F1_000805 EQU $ ; in [INVADERS.BAS] LCDWRITE 3,0,[$00,$18,$4C,$2E,$5B,$2F,$2F,$5B,$2E,$4C,$18,$00]
001AAC 0E03           02930         MOVLW 3
001AAE 6E03           02931         MOVWF GEN
001AB0 6A0A           02932         CLRF GENH
001AB2 6AE8           02933         CLRW
                      02934         F@CALL GLCD@P
001AB8 0E18           02935         MOVLW 24
                      02936         F@CALL GLCD@P
001ABE 0E4C           02937         MOVLW 76
                      02938         F@CALL GLCD@P
001AC4 0E2E           02939         MOVLW 46
                      02940         F@CALL GLCD@P
001ACA 0E5B           02941         MOVLW 91
                      02942         F@CALL GLCD@P
001AD0 0E2F           02943         MOVLW 47
                      02944         F@CALL GLCD@P
001AD6 0E2F           02945         MOVLW 47
                      02946         F@CALL GLCD@P
001ADC 0E5B           02947         MOVLW 91
                      02948         F@CALL GLCD@P
001AE2 0E2E           02949         MOVLW 46
                      02950         F@CALL GLCD@P
001AE8 0E4C           02951         MOVLW 76
                      02952         F@CALL GLCD@P
001AEE 0E18           02953         MOVLW 24
                      02954         F@CALL GLCD@P
001AF4 6AE8           02955         CLRW
                      02956         F@CALL GLCD@P
  00001AFA            02957 F1_000806 EQU $ ; in [INVADERS.BAS] Print at 3,2," = 20 Points"
001AFA 0E03           02958         MOVLW 3
001AFC 6E03           02959         MOVWF GEN
001AFE 0E02           02960         MOVLW 2
                      02961         F@CALL GLCD_CUR
001B04 0E28           02962         MOVLW HIGH STR@LB4
001B06 6E09           02963         MOVWF GEN4H
001B08 0E4A           02964         MOVLW LOW STR@LB4
001B0A 6E08           02965         MOVWF GEN4
                      02966         F@CALL PRINT@MSTR
  00001B10            02967 F1_000807 EQU $ ; in [INVADERS.BAS] LCDWRITE 4,0,[$00,$38,$0D,$3E,$5A,$1E,$1E,$5A,$3E,$0D,$38,$00]
001B10 0E04           02968         MOVLW 4
001B12 6E03           02969         MOVWF GEN
001B14 6A0A           02970         CLRF GENH
001B16 6AE8           02971         CLRW
                      02972         F@CALL GLCD@P
001B1C 0E38           02973         MOVLW 56
                      02974         F@CALL GLCD@P
001B22 0E0D           02975         MOVLW 13
                      02976         F@CALL GLCD@P
001B28 0E3E           02977         MOVLW 62
                      02978         F@CALL GLCD@P
001B2E 0E5A           02979         MOVLW 90
                      02980         F@CALL GLCD@P
001B34 0E1E           02981         MOVLW 30
                      02982         F@CALL GLCD@P
001B3A 0E1E           02983         MOVLW 30
                      02984         F@CALL GLCD@P
001B40 0E5A           02985         MOVLW 90
                      02986         F@CALL GLCD@P
001B46 0E3E           02987         MOVLW 62
                      02988         F@CALL GLCD@P
001B4C 0E0D           02989         MOVLW 13
                      02990         F@CALL GLCD@P
001B52 0E38           02991         MOVLW 56
                      02992         F@CALL GLCD@P
001B58 6AE8           02993         CLRW
                      02994         F@CALL GLCD@P
  00001B5E            02995 F1_000808 EQU $ ; in [INVADERS.BAS] Print at 4,2," = 10 Points"
001B5E 0E04           02996         MOVLW 4
001B60 6E03           02997         MOVWF GEN
001B62 0E02           02998         MOVLW 2
                      02999         F@CALL GLCD_CUR
001B68 0E28           03000         MOVLW HIGH STR@LB5
001B6A 6E09           03001         MOVWF GEN4H
001B6C 0E58           03002         MOVLW LOW STR@LB5
001B6E 6E08           03003         MOVWF GEN4
                      03004         F@CALL PRINT@MSTR
  00001B74            03005 F1_000809 EQU $ ; in [INVADERS.BAS] LCDWRITE 5,0,[$00,$4C,$6E,$3A,$1B,$2F,$2F,$1B,$3A,$6E,$4C,$00]
001B74 0E05           03006         MOVLW 5
001B76 6E03           03007         MOVWF GEN
001B78 6A0A           03008         CLRF GENH
001B7A 6AE8           03009         CLRW
                      03010         F@CALL GLCD@P
001B80 0E4C           03011         MOVLW 76
                      03012         F@CALL GLCD@P
001B86 0E6E           03013         MOVLW 110
                      03014         F@CALL GLCD@P
001B8C 0E3A           03015         MOVLW 58
                      03016         F@CALL GLCD@P
001B92 0E1B           03017         MOVLW 27
                      03018         F@CALL GLCD@P
001B98 0E2F           03019         MOVLW 47
                      03020         F@CALL GLCD@P
001B9E 0E2F           03021         MOVLW 47
                      03022         F@CALL GLCD@P
001BA4 0E1B           03023         MOVLW 27
                      03024         F@CALL GLCD@P
001BAA 0E3A           03025         MOVLW 58
                      03026         F@CALL GLCD@P
001BB0 0E6E           03027         MOVLW 110
                      03028         F@CALL GLCD@P
001BB6 0E4C           03029         MOVLW 76
                      03030         F@CALL GLCD@P
001BBC 6AE8           03031         CLRW
                      03032         F@CALL GLCD@P
  00001BC2            03033 F1_000810 EQU $ ; in [INVADERS.BAS] Print at 5,2," = 5 Points"
001BC2 0E05           03034         MOVLW 5
001BC4 6E03           03035         MOVWF GEN
001BC6 0E02           03036         MOVLW 2
                      03037         F@CALL GLCD_CUR
001BCC 0E28           03038         MOVLW HIGH STR@LB6
001BCE 6E09           03039         MOVWF GEN4H
001BD0 0E66           03040         MOVLW LOW STR@LB6
001BD2 6E08           03041         MOVWF GEN4
                      03042         F@CALL PRINT@MSTR
  00001BD8            03043 F1_000811 EQU $ ; in [INVADERS.BAS] Print at 7,1,"PRESS FIRE TO START"
001BD8 0E07           03044         MOVLW 7
001BDA 6E03           03045         MOVWF GEN
001BDC 0E01           03046         MOVLW 1
                      03047         F@CALL GLCD_CUR
001BE2 0E28           03048         MOVLW HIGH STR@LB7
001BE4 6E09           03049         MOVWF GEN4H
001BE6 0E72           03050         MOVLW LOW STR@LB7
001BE8 6E08           03051         MOVWF GEN4
                      03052         F@CALL PRINT@MSTR
  00001BEE            03053 F1_000812 EQU $ ; in [INVADERS.BAS] While FIRE_BUTTON = 1 : Wend
001BEE                03054 BC@LL241
001BEE A481           03055         BTFSS PORTB,2
                      03056         GO@TO BC@LL242
                      03057
                      03058         F@JUMP BC@LL241
001BF6                03059 BC@LL242
  00001BF6            03060 F1_000813 EQU $ ; in [INVADERS.BAS] While FIRE_BUTTON = 0 : Wend
001BF6                03061 BC@LL243
001BF6 B481           03062         BTFSC PORTB,2
                      03063         GO@TO BC@LL244
                      03064
                      03065         F@JUMP BC@LL243
001BFE                03066 BC@LL244
  00001BFE            03067 F1_000814 EQU $ ; in [INVADERS.BAS] Delayms 50
001BFE 0E32           03068         MOVLW 50
                      03069         F@CALL DL@MS
  00001C04            03070 F1_000816 EQU $ ; in [INVADERS.BAS] LEVEL = 0          ' Start at level 0
001C04 6B9F           03071         CLRF LEVELH
001C06 6B9E           03072         CLRF LEVEL
  00001C08            03073 F1_000817 EQU $ ; in [INVADERS.BAS] LIVES = "3"          ' Set the initial lives counter to 3
001C08 0E33           03074         MOVLW 51
001C0A 6FA0           03075         MOVWF LIVES
  00001C0C            03076 F1_000818 EQU $ ; in [INVADERS.BAS] SHIP_SPEED = 3
001C0C 0E03           03077         MOVLW 3
001C0E 6F88           03078         MOVWF SHIP_SPEED
  00001C10            03079 F1_000819 EQU $ ; in [INVADERS.BAS] SCORE = 0
001C10 6B9D           03080         CLRF SCOREHHH
001C12 6B9C           03081         CLRF SCOREHH
001C14 6B9B           03082         CLRF SCOREH
001C16 6B9A           03083         CLRF SCORE
  00001C18            03084 F1_000820 EQU $ ; in [INVADERS.BAS] SHIP_XPOS = 64
001C18 0E40           03085         MOVLW 64
001C1A 6F85           03086         MOVWF SHIP_XPOS
  00001C1C            03087 F1_000821 EQU $ ; in [INVADERS.BAS] SAUCER_SPEED = 7        ' Speed of the saucer
001C1C 0E07           03088         MOVLW 7
001C1E 6F99           03089         MOVWF SAUCER_SPEED
  00001C20            03090 F1_000822 EQU $ ; in [INVADERS.BAS] INVADER_SPEED = 70        ' The initial speed of the invaders
001C20 0E46           03091         MOVLW 70
001C22 6F8E           03092         MOVWF INVADER_SPEED
  00001C24            03093 F1_000823 EQU $ ; in [INVADERS.BAS] DEFAULT_INVADER_SPEED = INVADER_SPEED
001C24 C08E F093      03094         MOVFF INVADER_SPEED,DEFAULT_INVADER_SPEED
  00001C28            03095 F1_000825 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = 0
001C28 6B8C           03096         CLRF TEMP_LOOP
  00001C2A            03097 F1_000826 EQU $ ; in [INVADERS.BAS] Repeat
001C2A                03098 BC@LL245
  00001C2A            03099 F1_000827 EQU $ ; in [INVADERS.BAS] BASE_ENABLED[TEMP_LOOP] = TRUE
001C2A EE00 F03D      03100         LFSR 0,BASE_ENABLED
001C2E 518C           03101         MOVF TEMP_LOOP,W
001C30 26E9           03102         ADDWF FSR0L,F
001C32 0E00           03103         MOVLW 0
001C34 22EA           03104         ADDWFC FSR0H,F
001C36 0E01           03105         MOVLW 1
001C38 6EEF           03106         MOVWF INDF0
  00001C3A            03107 F1_000828 EQU $ ; in [INVADERS.BAS] BASE_HITS[TEMP_LOOP] = 0
001C3A EE00 F046      03108         LFSR 0,BASE_HITS
001C3E 518C           03109         MOVF TEMP_LOOP,W
001C40 26E9           03110         ADDWF FSR0L,F
001C42 0E00           03111         MOVLW 0
001C44 22EA           03112         ADDWFC FSR0H,F
001C46 6AEF           03113         CLRF INDF0
  00001C48            03114 F1_000829 EQU $ ; in [INVADERS.BAS] Inc TEMP_LOOP
001C48 2B8C           03115         INCF TEMP_LOOP,F
  00001C4A            03116 F1_000830 EQU $ ; in [INVADERS.BAS] Until TEMP_LOOP > 8
001C4A 0E08           03117         MOVLW 8
001C4C 658C           03118         CPFSGT TEMP_LOOP
                      03119         F@JUMP BC@LL245
001C50                03120 BC@LL246
  00001C50            03121 F1_000833 EQU $ ; in [INVADERS.BAS] INTERRUPT_COUNTER1 = 0
001C50 6A32           03122         CLRF INTERRUPT_COUNTER1
  00001C52            03123 F1_000834 EQU $ ; in [INVADERS.BAS] NOTE_STATUS = 0
001C52 6A31           03124         CLRF NOTE_STATUS
  00001C54            03125 F1_000835 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_COUNTER = 0
001C54 6A33           03126         CLRF INVADER_SOUND_COUNTER
  00001C56            03127 F1_000836 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_COUNTER = 0
001C56 6A37           03128         CLRF MISSILE_SOUND_COUNTER
  00001C58            03129 F1_000837 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_COUNTER = 0
001C58 6A39           03130         CLRF SAUCER_SOUND_COUNTER
  00001C5A            03131 F1_000838 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_DURATION_COUNTER = 0
001C5A 6A36           03132         CLRF INVADER_SOUND_DURATION_COUNTER
  00001C5C            03133 F1_000840 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_ENABLE = 1      ' Enable the Invaders sound channel
001C5C 8031           03134         BSF NOTE_STATUS,0
  00001C5E            03135 F1_000841 EQU $ ; in [INVADERS.BAS] INVADER_SOUND_DURATION = 20      ' Set the note duration to 20
001C5E 0E14           03136         MOVLW 20
001C60 6E35           03137         MOVWF INVADER_SOUND_DURATION
001C62                03138 NEW_SHEET
  00001C62            03139 F1_000849 EQU $ ; in [INVADERS.BAS] Inc LEVEL
001C62 2B9E           03140         INCF LEVEL,F
001C64 6AE8           03141         CLRW
001C66 239F           03142         ADDWFC LEVELH,F
  00001C68            03143 F1_000850 EQU $ ; in [INVADERS.BAS] Cls
                      03144         F@CALL GLCD@CLS
  00001C6C            03145 F1_000851 EQU $ ; in [INVADERS.BAS] Gosub UPDATE_BASES           ' Draw the bases (or what's left of them)
                      03146         F@CALL UPDATE_BASES
  00001C70            03147 F1_000852 EQU $ ; in [INVADERS.BAS] SHIP_HIT = FALSE           ' Default to no hit on the ship by a missile
001C70 942D           03148         BCF _B#VR1,2
  00001C72            03149 F1_000853 EQU $ ; in [INVADERS.BAS] SAUCER_ENABLED = FALSE          ' Disable the saucer
001C72 962E           03150         BCF _B#VR2,3
  00001C74            03151 F1_000854 EQU $ ; in [INVADERS.BAS] SAUCER_XPOS = 127 - SAUCER_WIDTH       ' Position saucer at top tight of the screen
001C74 0E71           03152         MOVLW 113
001C76 6F98           03153         MOVWF SAUCER_XPOS
  00001C78            03154 F1_000855 EQU $ ; in [INVADERS.BAS] MISSILE_XPOS = 0
001C78 6B87           03155         CLRF MISSILE_XPOS
  00001C7A            03156 F1_000856 EQU $ ; in [INVADERS.BAS] MISSILE_YPOS = 63 - 9
001C7A 0E36           03157         MOVLW 54
001C7C 6F86           03158         MOVWF MISSILE_YPOS
  00001C7E            03159 F1_000857 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_XPOS = 0
001C7E 6B91           03160         CLRF INVADER_MISSILE_XPOS
  00001C80            03161 F1_000858 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_YPOS = 0
001C80 6B90           03162         CLRF INVADER_MISSILE_YPOS
  00001C82            03163 F1_000859 EQU $ ; in [INVADERS.BAS] MISSILE_STATUS = 0
001C82 6A3B           03164         CLRF MISSILE_STATUS
  00001C84            03165 F1_000860 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_YPOS = 0         ' Y position of Invader's second MISSILE
001C84 6B95           03166         CLRF INVADER_MISSILE2_YPOS
  00001C86            03167 F1_000861 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_XPOS = 0         ' X position of Invader's second MISSILE
001C86 6B96           03168         CLRF INVADER_MISSILE2_XPOS
  00001C88            03169 F1_000862 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INV_MISSILE2 = FALSE       ' Indicate time to move the invader's second missile
001C88 9C2D           03170         BCF _B#VR1,6
  00001C8A            03171 F1_000863 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_FIRED = FALSE        ' TRUE if Invader's second MISSILE in the air
001C8A 9E2D           03172         BCF _B#VR1,7
  00001C8C            03173 F1_000864 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_HIT = FALSE        ' Default to not hit anything
001C8C 902E           03174         BCF _B#VR2,0
  00001C8E            03175 F1_000865 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_BASE = FALSE
001C8E 902D           03176         BCF _B#VR1,0
  00001C90            03177 F1_000867 EQU $ ; in [INVADERS.BAS] Gosub CLEAR_INVADER_MISSILE
                      03178         F@CALL CLEAR_INVADER_MISSILE
  00001C94            03179 F1_000868 EQU $ ; in [INVADERS.BAS] Gosub CLEAR_MISSILE
                      03180         F@CALL CLEAR_MISSILE
  00001C98            03181 F1_000869 EQU $ ; in [INVADERS.BAS] Gosub DRAW_SHIP            ' Draw the initial ship
                      03182         F@CALL DRAW_SHIP
  00001C9C            03183 F1_000871 EQU $ ; in [INVADERS.BAS] Dec DEFAULT_INVADER_SPEED         ' Speed up the invaders every new sheet
001C9C 0793           03184         DECF DEFAULT_INVADER_SPEED,F
  00001C9E            03185 F1_000872 EQU $ ; in [INVADERS.BAS] INVADER_SPEED = DEFAULT_INVADER_SPEED      ' Transfer the speed into the actual speed altering variable
001C9E C093 F08E      03186         MOVFF DEFAULT_INVADER_SPEED,INVADER_SPEED
  00001CA2            03187 F1_000873 EQU $ ; in [INVADERS.BAS] Clear INVADER_TICK
001CA2 6B89           03188         CLRF INVADER_TICK
  00001CA4            03189 F1_000874 EQU $ ; in [INVADERS.BAS] Clear INVADER_MISSILE_TICK
001CA4 6B8A           03190         CLRF INVADER_MISSILE_TICK
  00001CA6            03191 F1_000875 EQU $ ; in [INVADERS.BAS] Clear INVADER_MISSILE2_TICK
001CA6 6B94           03192         CLRF INVADER_MISSILE2_TICK
  00001CA8            03193 F1_000876 EQU $ ; in [INVADERS.BAS] SHIP_MISSILE_TICK = 2
001CA8 0E02           03194         MOVLW 2
001CAA 6F8B           03195         MOVWF SHIP_MISSILE_TICK
  00001CAC            03196 F1_000877 EQU $ ; in [INVADERS.BAS] INVADERS_REACHED_BOTTOM = FALSE        ' Default to the invaders not at the bottom of the screen
001CAC 982D           03197         BCF _B#VR1,4
  00001CAE            03198 F1_000878 EQU $ ; in [INVADERS.BAS] INVADER_CHARACTER = 0
001CAE 9A2D           03199         BCF _B#VR1,5
  00001CB0            03200 F1_000879 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE_SPEED = 5         ' Default speed of the invader's missile
001CB0 0E05           03201         MOVLW 5
001CB2 6F92           03202         MOVWF INVADER_MISSILE_SPEED
  00001CB4            03203 F1_000880 EQU $ ; in [INVADERS.BAS] INVADER_MISSILE2_SPEED = 4
001CB4 0E04           03204         MOVLW 4
001CB6 6F97           03205         MOVWF INVADER_MISSILE2_SPEED
  00001CB8            03206 F1_000881 EQU $ ; in [INVADERS.BAS] INVADERS_DIRECTION = FORWARD        ' Default to the invaders moving right
001CB8 822D           03207         BSF _B#VR1,1
  00001CBA            03208 F1_000882 EQU $ ; in [INVADERS.BAS] INVADERS_ENABLED = 18          ' All 18 invaders are enabled
001CBA 0E12           03209         MOVLW 18
001CBC 6F8D           03210         MOVWF INVADERS_ENABLED
  00001CBE            03211 F1_000883 EQU $ ; in [INVADERS.BAS] Gosub RESET_INVADERS           ' Reset all the invaders positions
                      03212         F@CALL RESET_INVADERS
  00001CC2            03213 F1_000884 EQU $ ; in [INVADERS.BAS] Gosub DRAW_INVADERS           ' Place all the invaders on the screen
                      03214         F@CALL DRAW_INVADERS
  00001CC6            03215 F1_000886 EQU $ ; in [INVADERS.BAS] Print at 0,0,Dec LEVEL, " ",Dec SCORE,at 0,20,LIVES
001CC6 6A03           03216         CLRF GEN
001CC8 6AE8           03217         CLRW
                      03218         F@CALL GLCD_CUR
001CCE 0E80           03219         MOVLW 128
001CD0 6E01           03220         MOVWF BPFH
001CD2 6A09           03221         CLRF GEN4H
001CD4 C09F F019      03222         MOVFF LEVELH,PP2H
001CD8 C09E F018      03223         MOVFF LEVEL,PP2
                      03224         F@CALL OUT@DEC
001CE0 0E20           03225         MOVLW 32
                      03226         F@CALL PRINT
001CE6 6A09           03227         CLRF GEN4H
001CE8 C09D F027      03228         MOVFF SCOREHHH,PP7HHH
001CEC C09C F026      03229         MOVFF SCOREHH,PP7HH
001CF0 C09B F025      03230         MOVFF SCOREH,PP7H
001CF4 C09A F024      03231         MOVFF SCORE,PP7
                      03232         F@CALL OUT@DEC32
001CFC 6A03           03233         CLRF GEN
001CFE 0E14           03234         MOVLW 20
                      03235         F@CALL GLCD_CUR
001D04 51A0           03236         MOVF LIVES,W
                      03237         F@CALL PRINT
  00001D0A            03238 F1_000888 EQU $ ; in [INVADERS.BAS] While 1 = 1
001D0A                03239 BC@LL247
  00001D0A            03240 F1_000889 EQU $ ; in [INVADERS.BAS] RANDOM_VALUE = RANDOM
                      03241         F@CALL RN@DM
001D0E 6FA1           03242         MOVWF RANDOM_VALUE
  00001D10            03243 F1_000890 EQU $ ; in [INVADERS.BAS] RANDOM_VALUE = RANDOM_VALUE & %00111000
001D10 0E38           03244         MOVLW 56
001D12 17A1           03245         ANDWF RANDOM_VALUE,F
  00001D14            03246 F1_000891 EQU $ ; in [INVADERS.BAS] Inc INVADER_TICK
001D14 2B89           03247         INCF INVADER_TICK,F
  00001D16            03248 F1_000892 EQU $ ; in [INVADERS.BAS] TIME_TO_MOVE_INVADERS = FALSE
001D16 9E3B           03249         BCF MISSILE_STATUS,7
  00001D18            03250 F1_000893 EQU $ ; in [INVADERS.BAS] If INVADER_TICK > INVADER_SPEED Then
001D18 5189           03251         MOVF INVADER_TICK,W
001D1A 618E           03252         CPFSLT INVADER_SPEED
                      03253         F@JUMP BC@LL250
  00001D20            03254 F1_000894 EQU $ ; in [INVADERS.BAS] INVADER_TICK = 0
001D20 6B89           03255         CLRF INVADER_TICK
  00001D22            03256 F1_000897 EQU $ ; in [INVADERS.BAS] Gosub MOVE_INVADERS
                      03257         F@CALL MOVE_INVADERS
  00001D26            03258 F1_000898 EQU $ ; in [INVADERS.BAS] Gosub MOVE_INVADERS
                      03259         F@CALL MOVE_INVADERS
  00001D2A            03260 F1_000899 EQU $ ; in [INVADERS.BAS] INVADER_CHARACTER = ~INVADER_CHARACTER    ' Use a new invader character
001D2A 6AE8           03261         CLRW
001D2C AA2D           03262         BTFSS _B#VR1,5
001D2E 0F01           03263         ADDLW 1
001D30 B4D8           03264         BTFSC STATUS,2
001D32 9A2D           03265         BCF _B#VR1,5
001D34 A4D8           03266         BTFSS STATUS,2
001D36 8A2D           03267         BSF _B#VR1,5
  00001D38            03268 F1_000900 EQU $ ; in [INVADERS.BAS] If INVADERS_REACHED_BOTTOM  = TRUE Then GAME_OVER
001D38 A82D           03269         BTFSS _B#VR1,4
                      03270         GO@TO BC@LL252
                      03271         F@JUMP GAME_OVER
001D42                03272 BC@LL252
  00001D42            03273 F1_000901 EQU $ ; in [INVADERS.BAS] Endif
001D42                03274 BC@LL250
  00001D42            03275 F1_000902 EQU $ ; in [INVADERS.BAS] Gosub MOVE_SAUCER          ' Move the flying saucer (if required)
                      03276         F@CALL MOVE_SAUCER
  00001D46            03277 F1_000904 EQU $ ; in [INVADERS.BAS] Gosub GOVERN_SPEEDS          ' Check whether a piece should be moving
                      03278         F@CALL GOVERN_SPEEDS
  00001D4A            03279 F1_000906 EQU $ ; in [INVADERS.BAS] If L_BUTTON = 0 Then Gosub SHIP_LEFT       ' Move ship left if LEFT button pressed
001D4A B081           03280         BTFSC PORTB,0
                      03281         GO@TO BC@LL254
                      03282         F@CALL SHIP_LEFT
001D54                03283 BC@LL254
  00001D54            03284 F1_000907 EQU $ ; in [INVADERS.BAS] If R_BUTTON = 0 Then Gosub SHIP_RIGHT     ' Move ship right if RIGHT button pressed
001D54 B281           03285         BTFSC PORTB,1
                      03286         GO@TO BC@LL256
                      03287         F@CALL SHIP_RIGHT
001D5E                03288 BC@LL256
  00001D5E            03289 F1_000910 EQU $ ; in [INVADERS.BAS] If FIRE_BUTTON = 0 Then If MISSILE_FIRED = FALSE Then  ' Has the FIRE button been pressed and the ship's missile not already flying ?
001D5E B481           03290         BTFSC PORTB,2
                      03291         GO@TO BC@LL258
001D64 B03B           03292         BTFSC MISSILE_STATUS,0
                      03293         GO@TO BC@LL260
  00001D6A            03294 F1_000911 EQU $ ; in [INVADERS.BAS] SEED INVADER_SOUND_COUNTER
001D6A 6A0D           03295         CLRF PBP#RNDH
001D6C C033 F00C      03296         MOVFF INVADER_SOUND_COUNTER,PBP#RND
  00001D70            03297 F1_000912 EQU $ ; in [INVADERS.BAS] MISSILE_FIRED = TRUE        ' Yes.. So signal we need the ship's missile FIRED
001D70 803B           03298         BSF MISSILE_STATUS,0
  00001D72            03299 F1_000913 EQU $ ; in [INVADERS.BAS] MISSILE_XPOS = SHIP_XPOS + 4      ' Place the ship's missile's xpos at the middle of the ship's shape
001D72 0E04           03300         MOVLW 4
001D74 2585           03301         ADDWF SHIP_XPOS,W
001D76 6F87           03302         MOVWF MISSILE_XPOS
  00001D78            03303 F1_000914 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 1       ' Enable the missile's sound
001D78 8231           03304         BSF NOTE_STATUS,1
  00001D7A            03305 F1_000915 EQU $ ; in [INVADERS.BAS] Endif
001D7A                03306 BC@LL260
001D7A                03307 BC@LL258
  00001D7A            03308 F1_000918 EQU $ ; in [INVADERS.BAS] Gosub MOVE_MISSILE          ' Move the ship's missile if OK to do so
                      03309         F@CALL MOVE_MISSILE
  00001D7E            03310 F1_000919 EQU $ ; in [INVADERS.BAS] Gosub CHECK_FOR_MISSILE_HIT        ' Check if the ship's missile has hit anything
                      03311         F@CALL CHECK_FOR_MISSILE_HIT
  00001D82            03312 F1_000921 EQU $ ; in [INVADERS.BAS] If MISSILE_HIT = TRUE OR SAUCER_HIT = TRUE Then
001D82 6AE8           03313         CLRW
001D84 B23B           03314         BTFSC MISSILE_STATUS,1
001D86 0E01           03315         MOVLW 1
001D88 6E2C           03316         MOVWF SP#P9
001D8A 6AE8           03317         CLRW
001D8C B22E           03318         BTFSC _B#VR2,1
001D8E 0E01           03319         MOVLW 1
001D90 102C           03320         IORWF SP#P9,W
001D92 B4D8           03321         BTFSC STATUS,2
                      03322         GO@TO BC@LL262
  00001D98            03323 F1_000922 EQU $ ; in [INVADERS.BAS] If BASE_HIT = FALSE Then
001D98 B43B           03324         BTFSC MISSILE_STATUS,2
                      03325         GO@TO BC@LL264
  00001D9E            03326 F1_000924 EQU $ ; in [INVADERS.BAS] Print at 0,0,Dec LEVEL, " ",Dec SCORE,at 0,20,LIVES
001D9E 6A03           03327         CLRF GEN
001DA0 6AE8           03328         CLRW
                      03329         F@CALL GLCD_CUR
001DA6 0E80           03330         MOVLW 128
001DA8 6E01           03331         MOVWF BPFH
001DAA 6A09           03332         CLRF GEN4H
001DAC C09F F019      03333         MOVFF LEVELH,PP2H
001DB0 C09E F018      03334         MOVFF LEVEL,PP2
                      03335         F@CALL OUT@DEC
001DB8 0E20           03336         MOVLW 32
                      03337         F@CALL PRINT
001DBE 6A09           03338         CLRF GEN4H
001DC0 C09D F027      03339         MOVFF SCOREHHH,PP7HHH
001DC4 C09C F026      03340         MOVFF SCOREHH,PP7HH
001DC8 C09B F025      03341         MOVFF SCOREH,PP7H
001DCC C09A F024      03342         MOVFF SCORE,PP7
                      03343         F@CALL OUT@DEC32
001DD4 6A03           03344         CLRF GEN
001DD6 0E14           03345         MOVLW 20
                      03346         F@CALL GLCD_CUR
001DDC 51A0           03347         MOVF LIVES,W
                      03348         F@CALL PRINT
  00001DE2            03349 F1_000925 EQU $ ; in [INVADERS.BAS] Endif
001DE2                03350 BC@LL264
  00001DE2            03351 F1_000926 EQU $ ; in [INVADERS.BAS] Endif
001DE2                03352 BC@LL262
  00001DE2            03353 F1_000928 EQU $ ; in [INVADERS.BAS] If INVADER_CHARACTER = 1 Then
001DE2 AA2D           03354         BTFSS _B#VR1,5
                      03355         GO@TO BC@LL266
  00001DE8            03356 F1_000929 EQU $ ; in [INVADERS.BAS] Gosub FIRE_INVADER_MISSILE       ' Fire an invader missile is possible
                      03357         F@CALL FIRE_INVADER_MISSILE
  00001DEC            03358 F1_000930 EQU $ ; in [INVADERS.BAS] Endif
001DEC                03359 BC@LL266
  00001DEC            03360 F1_000931 EQU $ ; in [INVADERS.BAS] Gosub MOVE_INVADER_MISSILE        ' Move the invader's missile (if fired)
                      03361         F@CALL MOVE_INVADER_MISSILE
  00001DF0            03362 F1_000932 EQU $ ; in [INVADERS.BAS] Gosub CHECK_FOR_INVADER_MISSILE_HIT      ' Check if the invader's missile has hit anything
                      03363         F@CALL CHECK_FOR_INVADER_MISSILE_HIT
  00001DF4            03364 F1_000934 EQU $ ; in [INVADERS.BAS] If INVADERS_ENABLED = 0 Then        ' Have all the invaders been destroyed ?
001DF4 678D           03365         TSTFSZ INVADERS_ENABLED
                      03366         F@JUMP BC@LL268
  00001DFA            03367 F1_000935 EQU $ ; in [INVADERS.BAS] INVADERS_ENABLED = 18        ' Yes.. So enable them all again
001DFA 0E12           03368         MOVLW 18
001DFC 6F8D           03369         MOVWF INVADERS_ENABLED
  00001DFE            03370 F1_000936 EQU $ ; in [INVADERS.BAS] If INVADER_SPEED >= 3 Then Dec INVADER_SPEED  ' Increase the speed of the invaders
001DFE 0E02           03371         MOVLW 2
001E00 658E           03372         CPFSGT INVADER_SPEED
                      03373         F@JUMP BC@LL270
001E06 078E           03374         DECF INVADER_SPEED,F
001E08                03375 BC@LL270
  00001E08            03376 F1_000937 EQU $ ; in [INVADERS.BAS] Goto NEW_SHEET          ' and start a new sheet
                      03377         F@JUMP NEW_SHEET
  00001E0A            03378 F1_000938 EQU $ ; in [INVADERS.BAS] Endif
001E0A                03379 BC@LL268
  00001E0A            03380 F1_000940 EQU $ ; in [INVADERS.BAS] If LEVEL > 10 Then          ' Add a second invader missile after level 10
001E0A 519F           03381         MOVF LEVELH,W
001E0C E104           03382         BNZ CP@LB15
001E0E 0E0A           03383         MOVLW 10
001E10 659E           03384         CPFSGT LEVEL
                      03385         F@JUMP BC@LL272
001E16                03386 CP@LB15
  00001E16            03387 F1_000941 EQU $ ; in [INVADERS.BAS] If INVADER_CHARACTER = 0 then
001E16 BA2D           03388         BTFSC _B#VR1,5
                      03389         GO@TO BC@LL274
  00001E1C            03390 F1_000942 EQU $ ; in [INVADERS.BAS] Gosub FIRE_INVADER_MISSILE2      ' Fire an invader missile is possible
                      03391         F@CALL FIRE_INVADER_MISSILE2
  00001E20            03392 F1_000943 EQU $ ; in [INVADERS.BAS] Endif
001E20                03393 BC@LL274
  00001E20            03394 F1_000944 EQU $ ; in [INVADERS.BAS] Gosub MOVE_INVADER_MISSILE2       ' Move the invader's missile (if fired)
                      03395         F@CALL MOVE_INVADER_MISSILE2
  00001E24            03396 F1_000945 EQU $ ; in [INVADERS.BAS] Gosub CHECK_FOR_INVADER_MISSILE2_HIT    ' Check if the invader's missile has hit anything
                      03397         F@CALL CHECK_FOR_INVADER_MISSILE2_HIT
  00001E28            03398 F1_000946 EQU $ ; in [INVADERS.BAS] Endif
001E28                03399 BC@LL272
  00001E28            03400 F1_000948 EQU $ ; in [INVADERS.BAS] If SHIP_HIT = TRUE Then         ' Has the ship been hit ?
001E28 A42D           03401         BTFSS _B#VR1,2
                      03402         GO@TO BC@LL276
  00001E2E            03403 F1_000949 EQU $ ; in [INVADERS.BAS] SHIP_HIT = FALSE
001E2E 942D           03404         BCF _B#VR1,2
  00001E30            03405 F1_000951 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = 1        ' Yes. So enable SAUCER sound channel
001E30 8431           03406         BSF NOTE_STATUS,2
  00001E32            03407 F1_000952 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 1             ' Enable MISSILE sound channel
001E32 8231           03408         BSF NOTE_STATUS,1
  00001E34            03409 F1_000953 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 70         ' Set MISSILE channel frequency to 70
001E34 0E46           03410         MOVLW 70
001E36 6E38           03411         MOVWF MISSILE_FREQ
  00001E38            03412 F1_000954 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 90             ' Set SAUCER channel frequency to 90
001E38 0E5A           03413         MOVLW 90
001E3A 6E3A           03414         MOVWF SAUCER_FREQ
  00001E3C            03415 F1_000955 EQU $ ; in [INVADERS.BAS] LCDWRITE 7,SHIP_XPOS,[$10,$24,$AC,$F8,$F0,$E0,$F0,$F8,$AC,$24,$10] ' Draw first part of ship exploding
001E3C 0E07           03416         MOVLW 7
001E3E 6E03           03417         MOVWF GEN
001E40 C085 F00A      03418         MOVFF SHIP_XPOS,GENH
001E44 0E10           03419         MOVLW 16
                      03420         F@CALL GLCD@P
001E4A 0E24           03421         MOVLW 36
                      03422         F@CALL GLCD@P
001E50 0EAC           03423         MOVLW 172
                      03424         F@CALL GLCD@P
001E56 0EF8           03425         MOVLW 248
                      03426         F@CALL GLCD@P
001E5C 0EF0           03427         MOVLW 240
                      03428         F@CALL GLCD@P
001E62 0EE0           03429         MOVLW 224
                      03430         F@CALL GLCD@P
001E68 0EF0           03431         MOVLW 240
                      03432         F@CALL GLCD@P
001E6E 0EF8           03433         MOVLW 248
                      03434         F@CALL GLCD@P
001E74 0EAC           03435         MOVLW 172
                      03436         F@CALL GLCD@P
001E7A 0E24           03437         MOVLW 36
                      03438         F@CALL GLCD@P
001E80 0E10           03439         MOVLW 16
                      03440         F@CALL GLCD@P
  00001E86            03441 F1_000956 EQU $ ; in [INVADERS.BAS] Delayms 40           ' Leave the graphic on the screen for 40ms
001E86 0E28           03442         MOVLW 40
                      03443         F@CALL DL@MS
  00001E8C            03444 F1_000957 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 100         ' Increase the SAUCER channel's frequency
001E8C 0E64           03445         MOVLW 100
001E8E 6E3A           03446         MOVWF SAUCER_FREQ
  00001E90            03447 F1_000958 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 120         ' Increase the MISSILE channel's frequency
001E90 0E78           03448         MOVLW 120
001E92 6E38           03449         MOVWF MISSILE_FREQ
  00001E94            03450 F1_000959 EQU $ ; in [INVADERS.BAS] LCDWRITE 7,SHIP_XPOS,[$00,$20,$28,$F0,$A8,$C0,$E0,$F0,$28,$04,$00] ' Draw second part of ship exploding
001E94 0E07           03451         MOVLW 7
001E96 6E03           03452         MOVWF GEN
001E98 C085 F00A      03453         MOVFF SHIP_XPOS,GENH
001E9C 6AE8           03454         CLRW
                      03455         F@CALL GLCD@P
001EA2 0E20           03456         MOVLW 32
                      03457         F@CALL GLCD@P
001EA8 0E28           03458         MOVLW 40
                      03459         F@CALL GLCD@P
001EAE 0EF0           03460         MOVLW 240
                      03461         F@CALL GLCD@P
001EB4 0EA8           03462         MOVLW 168
                      03463         F@CALL GLCD@P
001EBA 0EC0           03464         MOVLW 192
                      03465         F@CALL GLCD@P
001EC0 0EE0           03466         MOVLW 224
                      03467         F@CALL GLCD@P
001EC6 0EF0           03468         MOVLW 240
                      03469         F@CALL GLCD@P
001ECC 0E28           03470         MOVLW 40
                      03471         F@CALL GLCD@P
001ED2 0E04           03472         MOVLW 4
                      03473         F@CALL GLCD@P
001ED8 6AE8           03474         CLRW
                      03475         F@CALL GLCD@P
  00001EDE            03476 F1_000960 EQU $ ; in [INVADERS.BAS] Delayms 40           ' Leave the graphic on the screen for 40ms
001EDE 0E28           03477         MOVLW 40
                      03478         F@CALL DL@MS
  00001EE4            03479 F1_000961 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 150         ' Increase the SAUCER channel's frequency
001EE4 0E96           03480         MOVLW 150
001EE6 6E3A           03481         MOVWF SAUCER_FREQ
  00001EE8            03482 F1_000962 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 135         ' Increase the MISSILE channel's frequency
001EE8 0E87           03483         MOVLW 135
001EEA 6E38           03484         MOVWF MISSILE_FREQ
  00001EEC            03485 F1_000963 EQU $ ; in [INVADERS.BAS] LCDWRITE 7,SHIP_XPOS,[$00,$00,$30,$60,$80,$C0,$60,$30,$00,$00,$00] ' Draw third part of ship exploding
001EEC 0E07           03486         MOVLW 7
001EEE 6E03           03487         MOVWF GEN
001EF0 C085 F00A      03488         MOVFF SHIP_XPOS,GENH
001EF4 6AE8           03489         CLRW
                      03490         F@CALL GLCD@P
001EFA 6AE8           03491         CLRW
                      03492         F@CALL GLCD@P
001F00 0E30           03493         MOVLW 48
                      03494         F@CALL GLCD@P
001F06 0E60           03495         MOVLW 96
                      03496         F@CALL GLCD@P
001F0C 0E80           03497         MOVLW 128
                      03498         F@CALL GLCD@P
001F12 0EC0           03499         MOVLW 192
                      03500         F@CALL GLCD@P
001F18 0E60           03501         MOVLW 96
                      03502         F@CALL GLCD@P
001F1E 0E30           03503         MOVLW 48
                      03504         F@CALL GLCD@P
001F24 6AE8           03505         CLRW
                      03506         F@CALL GLCD@P
001F2A 6AE8           03507         CLRW
                      03508         F@CALL GLCD@P
001F30 6AE8           03509         CLRW
                      03510         F@CALL GLCD@P
  00001F36            03511 F1_000964 EQU $ ; in [INVADERS.BAS] Delayms 100
001F36 0E64           03512         MOVLW 100
                      03513         F@CALL DL@MS
  00001F3C            03514 F1_000965 EQU $ ; in [INVADERS.BAS] LCDWRITE 7,SHIP_XPOS,[$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00] ' Clear the ship graphic
001F3C 0E07           03515         MOVLW 7
001F3E 6E03           03516         MOVWF GEN
001F40 C085 F00A      03517         MOVFF SHIP_XPOS,GENH
001F44 6AE8           03518         CLRW
                      03519         F@CALL GLCD@P
001F4A 6AE8           03520         CLRW
                      03521         F@CALL GLCD@P
001F50 6AE8           03522         CLRW
                      03523         F@CALL GLCD@P
001F56 6AE8           03524         CLRW
                      03525         F@CALL GLCD@P
001F5C 6AE8           03526         CLRW
                      03527         F@CALL GLCD@P
001F62 6AE8           03528         CLRW
                      03529         F@CALL GLCD@P
001F68 6AE8           03530         CLRW
                      03531         F@CALL GLCD@P
001F6E 6AE8           03532         CLRW
                      03533         F@CALL GLCD@P
001F74 6AE8           03534         CLRW
                      03535         F@CALL GLCD@P
001F7A 6AE8           03536         CLRW
                      03537         F@CALL GLCD@P
001F80 6AE8           03538         CLRW
                      03539         F@CALL GLCD@P
  00001F86            03540 F1_000966 EQU $ ; in [INVADERS.BAS] Delayms 100           ' Leave the graphic on the screen for 100ms
001F86 0E64           03541         MOVLW 100
                      03542         F@CALL DL@MS
  00001F8C            03543 F1_000967 EQU $ ; in [INVADERS.BAS] LIVES = LIVES - 1         ' Decrement the lives counter
001F8C 07A0           03544         DECF LIVES,F
  00001F8E            03545 F1_000968 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = 0       ' Disable the MISSILE sound channel
001F8E 9231           03546         BCF NOTE_STATUS,1
  00001F90            03547 F1_000969 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = 0        ' Disable the SAUCER sound channel
001F90 9431           03548         BCF NOTE_STATUS,2
  00001F92            03549 F1_000970 EQU $ ; in [INVADERS.BAS] If LIVES > "0" Then         ' Do we have any lives left ?
001F92 0E30           03550         MOVLW 48
001F94 65A0           03551         CPFSGT LIVES
                      03552         F@JUMP BC@LL278
  00001F9A            03553 F1_000971 EQU $ ; in [INVADERS.BAS] LCDWRITE 7,SHIP_XPOS,[$00,$E0,$F0,$F0,$F8,$FC,$F8,$F0,$F0,$E0,$00] ' Yes. So Re-draw the ship and carry on
001F9A 0E07           03554         MOVLW 7
001F9C 6E03           03555         MOVWF GEN
001F9E C085 F00A      03556         MOVFF SHIP_XPOS,GENH
001FA2 6AE8           03557         CLRW
                      03558         F@CALL GLCD@P
001FA8 0EE0           03559         MOVLW 224
                      03560         F@CALL GLCD@P
001FAE 0EF0           03561         MOVLW 240
                      03562         F@CALL GLCD@P
001FB4 0EF0           03563         MOVLW 240
                      03564         F@CALL GLCD@P
001FBA 0EF8           03565         MOVLW 248
                      03566         F@CALL GLCD@P
001FC0 0EFC           03567         MOVLW 252
                      03568         F@CALL GLCD@P
001FC6 0EF8           03569         MOVLW 248
                      03570         F@CALL GLCD@P
001FCC 0EF0           03571         MOVLW 240
                      03572         F@CALL GLCD@P
001FD2 0EF0           03573         MOVLW 240
                      03574         F@CALL GLCD@P
001FD8 0EE0           03575         MOVLW 224
                      03576         F@CALL GLCD@P
001FDE 6AE8           03577         CLRW
                      03578         F@CALL GLCD@P
  00001FE4            03579 F1_000972 EQU $ ; in [INVADERS.BAS] Print at 0,20,LIVES        ' Update the Display for the amount of lives
001FE4 6A03           03580         CLRF GEN
001FE6 0E14           03581         MOVLW 20
                      03582         F@CALL GLCD_CUR
001FEC 51A0           03583         MOVF LIVES,W
                      03584         F@CALL PRINT
                      03585         F@JUMP BC@LL279
001FF6                03586 BC@LL278
  00001FF6            03587 F1_000973 EQU $ ; in [INVADERS.BAS] Else            ' Otherwise, we don't have any lives left
  00001FF6            03588 F1_000974 EQU $ ; in [INVADERS.BAS] Goto GAME_OVER         ' So game over
                      03589         F@JUMP GAME_OVER
  00001FFA            03590 F1_000975 EQU $ ; in [INVADERS.BAS] Endif
001FFA                03591 BC@LL279
  00001FFA            03592 F1_000976 EQU $ ; in [INVADERS.BAS] Endif
001FFA                03593 BC@LL276
  00001FFA            03594 F1_000977 EQU $ ; in [INVADERS.BAS] Delayms 6            ' Main game speed setting
001FFA 0E06           03595         MOVLW 6
                      03596         F@CALL DL@MS
  00002000            03597 F1_000978 EQU $ ; in [INVADERS.BAS] Wend
                      03598         F@JUMP BC@LL247
002002                03599 BC@LL248
002002                03600 GAME_OVER
  00002002            03601 F1_000982 EQU $ ; in [INVADERS.BAS] Print at 0,0,Dec LEVEL, " ",Dec SCORE,at 0,20,LIVES
002002 6A03           03602         CLRF GEN
002004 6AE8           03603         CLRW
                      03604         F@CALL GLCD_CUR
00200A 0E80           03605         MOVLW 128
00200C 6E01           03606         MOVWF BPFH
00200E 6A09           03607         CLRF GEN4H
002010 C09F F019      03608         MOVFF LEVELH,PP2H
002014 C09E F018      03609         MOVFF LEVEL,PP2
                      03610         F@CALL OUT@DEC
00201C 0E20           03611         MOVLW 32
                      03612         F@CALL PRINT
002022 6A09           03613         CLRF GEN4H
002024 C09D F027      03614         MOVFF SCOREHHH,PP7HHH
002028 C09C F026      03615         MOVFF SCOREHH,PP7HH
00202C C09B F025      03616         MOVFF SCOREH,PP7H
002030 C09A F024      03617         MOVFF SCORE,PP7
                      03618         F@CALL OUT@DEC32
002038 6A03           03619         CLRF GEN
00203A 0E14           03620         MOVLW 20
                      03621         F@CALL GLCD_CUR
002040 51A0           03622         MOVF LIVES,W
                      03623         F@CALL PRINT
  00002046            03624 F1_000983 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = TRUE          ' Enable SAUCER sound channel
002046 8431           03625         BSF NOTE_STATUS,2
  00002048            03626 F1_000984 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = TRUE               ' Enable MISSILE sound channel
002048 8231           03627         BSF NOTE_STATUS,1
  0000204A            03628 F1_000985 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = 70           ' Set MISSILE channel frequency to 70
00204A 0E46           03629         MOVLW 70
00204C 6E38           03630         MOVWF MISSILE_FREQ
  0000204E            03631 F1_000986 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = 90               ' Set SAUCER channel frequency to 90
00204E 0E5A           03632         MOVLW 90
002050 6E3A           03633         MOVWF SAUCER_FREQ
  00002052            03634 F1_000987 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = 1
002052 0E01           03635         MOVLW 1
002054 6F8C           03636         MOVWF TEMP_LOOP
  00002056            03637 F1_000988 EQU $ ; in [INVADERS.BAS] Repeat
002056                03638 BC@LL280
  00002056            03639 F1_000989 EQU $ ; in [INVADERS.BAS] MISSILE_FREQ = MISSILE_FREQ - TEMP_LOOP
002056 518C           03640         MOVF TEMP_LOOP,W
002058 5E38           03641         SUBWF MISSILE_FREQ,F
  0000205A            03642 F1_000990 EQU $ ; in [INVADERS.BAS] SAUCER_FREQ = SAUCER_FREQ - TEMP_LOOP
00205A 518C           03643         MOVF TEMP_LOOP,W
00205C 5E3A           03644         SUBWF SAUCER_FREQ,F
  0000205E            03645 F1_000991 EQU $ ; in [INVADERS.BAS] Delayms 10 + TEMP_LOOP
00205E 0E0A           03646         MOVLW 10
002060 258C           03647         ADDWF TEMP_LOOP,W
002062 6A17           03648         CLRF PP1H
002064 6E16           03649         MOVWF PP1
002066 3617           03650         RLCF PP1H,F
002068 5016           03651         MOVF PP1,W
                      03652         F@CALL DLY@W
  0000206E            03653 F1_000992 EQU $ ; in [INVADERS.BAS] Circle 1,SHIP_XPOS + 5,63,TEMP_LOOP
00206E 8400           03654         BSF BPF,2
002070 0E05           03655         MOVLW 5
002072 2585           03656         ADDWF SHIP_XPOS,W
002074 6E04           03657         MOVWF GEN2
002076 0E3F           03658         MOVLW 63
002078 6E05           03659         MOVWF GEN2H
00207A 518C           03660         MOVF TEMP_LOOP,W
                      03661         F@CALL CIR@CLE
  00002080            03662 F1_000993 EQU $ ; in [INVADERS.BAS] If TEMP_LOOP > 10 Then
002080 0E0A           03663         MOVLW 10
002082 658C           03664         CPFSGT TEMP_LOOP
                      03665         F@JUMP BC@LL283
  00002088            03666 F1_000994 EQU $ ; in [INVADERS.BAS] Circle 0,SHIP_XPOS + 5,63,TEMP_LOOP - 10
002088 9400           03667         BCF BPF,2
00208A 0E05           03668         MOVLW 5
00208C 2585           03669         ADDWF SHIP_XPOS,W
00208E 6E04           03670         MOVWF GEN2
002090 0E3F           03671         MOVLW 63
002092 6E05           03672         MOVWF GEN2H
002094 0E0A           03673         MOVLW 10
002096 5D8C           03674         SUBWF TEMP_LOOP,W
                      03675         F@CALL CIR@CLE
  0000209C            03676 F1_000995 EQU $ ; in [INVADERS.BAS] Endif
00209C                03677 BC@LL283
  0000209C            03678 F1_000996 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = TEMP_LOOP + 2
00209C 0E02           03679         MOVLW 2
00209E 278C           03680         ADDWF TEMP_LOOP,F
  000020A0            03681 F1_000997 EQU $ ; in [INVADERS.BAS] Until TEMP_LOOP > 24
0020A0 0E18           03682         MOVLW 24
0020A2 658C           03683         CPFSGT TEMP_LOOP
                      03684         F@JUMP BC@LL280
0020A6                03685 BC@LL281
  000020A6            03686 F1_000998 EQU $ ; in [INVADERS.BAS] SAUCER_SOUND_ENABLE = FALSE          ' Disable SAUCER sound channel
0020A6 9431           03687         BCF NOTE_STATUS,2
  000020A8            03688 F1_000999 EQU $ ; in [INVADERS.BAS] MISSILE_SOUND_ENABLE = FALSE               ' Disable MISSILE sound channel
0020A8 9231           03689         BCF NOTE_STATUS,1
  000020AA            03690 F1_001000 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = 1
0020AA 0E01           03691         MOVLW 1
0020AC 6F8C           03692         MOVWF TEMP_LOOP
  000020AE            03693 F1_001001 EQU $ ; in [INVADERS.BAS] Repeat
0020AE                03694 BC@LL284
  000020AE            03695 F1_001002 EQU $ ; in [INVADERS.BAS] Circle 0,SHIP_XPOS + 5,63,TEMP_LOOP
0020AE 9400           03696         BCF BPF,2
0020B0 0E05           03697         MOVLW 5
0020B2 2585           03698         ADDWF SHIP_XPOS,W
0020B4 6E04           03699         MOVWF GEN2
0020B6 0E3F           03700         MOVLW 63
0020B8 6E05           03701         MOVWF GEN2H
0020BA 518C           03702         MOVF TEMP_LOOP,W
                      03703         F@CALL CIR@CLE
  000020C0            03704 F1_001003 EQU $ ; in [INVADERS.BAS] TEMP_LOOP = TEMP_LOOP + 2
0020C0 0E02           03705         MOVLW 2
0020C2 278C           03706         ADDWF TEMP_LOOP,F
  000020C4            03707 F1_001004 EQU $ ; in [INVADERS.BAS] Until TEMP_LOOP > 24
0020C4 0E18           03708         MOVLW 24
0020C6 658C           03709         CPFSGT TEMP_LOOP
                      03710         F@JUMP BC@LL284
0020CA                03711 BC@LL285
  000020CA            03712 F1_001006 EQU $ ; in [INVADERS.BAS] Print at 3,6,INVERSE 1,"GAME OVER", INVERSE 0
0020CA 0E03           03713         MOVLW 3
0020CC 6E03           03714         MOVWF GEN
0020CE 0E06           03715         MOVLW 6
                      03716         F@CALL GLCD_CUR
0020D4 802F           03717         BSF _GLCD_FLAG,0
0020D6 0E28           03718         MOVLW HIGH STR@LB8
0020D8 6E09           03719         MOVWF GEN4H
0020DA 0E86           03720         MOVLW LOW STR@LB8
0020DC 6E08           03721         MOVWF GEN4
                      03722         F@CALL PRINT@MSTR
0020E2 902F           03723         BCF _GLCD_FLAG,0
  000020E4            03724 F1_001007 EQU $ ; in [INVADERS.BAS] Delayms 500
0020E4 0E01           03725         MOVLW 1
0020E6 6E17           03726         MOVWF PP1H
0020E8 0EF4           03727         MOVLW 244
                      03728         F@CALL DLY@W
  000020EE            03729 F1_001008 EQU $ ; in [INVADERS.BAS] Print at 4,1,"PRESS FIRE TO START"
0020EE 0E04           03730         MOVLW 4
0020F0 6E03           03731         MOVWF GEN
0020F2 0E01           03732         MOVLW 1
                      03733         F@CALL GLCD_CUR
0020F8 0E28           03734         MOVLW HIGH STR@LB9
0020FA 6E09           03735         MOVWF GEN4H
0020FC 0E90           03736         MOVLW LOW STR@LB9
0020FE 6E08           03737         MOVWF GEN4
                      03738         F@CALL PRINT@MSTR
  00002104            03739 F1_001009 EQU $ ; in [INVADERS.BAS] While FIRE_BUTTON = 1 : Wend
002104                03740 BC@LL286
002104 A481           03741         BTFSS PORTB,2
                      03742         GO@TO BC@LL287
                      03743
                      03744         F@JUMP BC@LL286
00210C                03745 BC@LL287
  0000210C            03746 F1_001010 EQU $ ; in [INVADERS.BAS] Delayms 50
00210C 0E32           03747         MOVLW 50
                      03748         F@CALL DL@MS
  00002112            03749 F1_001011 EQU $ ; in [INVADERS.BAS] While FIRE_BUTTON = 0 : Wend
002112                03750 BC@LL288
002112 B481           03751         BTFSC PORTB,2
                      03752         GO@TO BC@LL289
                      03753
                      03754         F@JUMP BC@LL288
00211A                03755 BC@LL289
  0000211A            03756 F1_001012 EQU $ ; in [INVADERS.BAS] Delayms 50
00211A 0E32           03757         MOVLW 50
                      03758         F@CALL DL@MS
  00002120            03759 F1_001013 EQU $ ; in [INVADERS.BAS] Goto MAIN_PROGRAM_LOOP
                      03760         F@JUMP MAIN_PROGRAM_LOOP
002124                03761 FONT
002124 0000 0000 0000 03762         DB 0,0,0,0,0,0
00212A FFFF FFFF FFFF 03763         DB 255,255,255,255,255,255
002130 F0E0 FCF8 FEFC 03764         DB 224,240,248,252,252,254
002136 B0C0 70B0 F8EC 03765         DB 192,176,176,112,236,248
00213C A0C0 70B0 28AC 03766         DB 192,160,176,112,172,40
002142 A040 70B0 20A0 03767         DB 64,160,176,112,160,32
002148 8040 4080 20A0 03768         DB 64,128,128,64,160,32
00214E 0000 0000 0000 03769         DB 0,0,0,0,0,0
002154 FEFE FEFE FEFE 03770         DB 254,254,254,254,254,254
00215A DEFE F0EC FEF8 03771         DB 254,222,236,240,248,254
002160 DEF8 F0E4 9ED8 03772         DB 248,222,228,240,216,158
002166 DEB8 B0A4 B448 03773         DB 184,222,164,176,72,180
00216C 5834 B8A4 3448 03774         DB 52,88,164,184,72,52
002172 0000 0000 0000 03775         DB 0,0,0,0,0,0
002178 FCFE F8FC E0F0 03776         DB 254,252,252,248,240,224
00217E B0C0 70B0 F8EC 03777         DB 192,176,176,112,236,248
002184 A0C0 70B0 28AC 03778         DB 192,160,176,112,172,40
00218A A040 70B0 20A0 03779         DB 64,160,176,112,160,32
002190 8040 4080 20A0 03780         DB 64,128,128,64,160,32
002196 0000 0000 0000 03781         DB 0,0,0,0,0,0
00219C 00FF 0000 0000 03782         DB 255,0,0,0,0,0
0021A2 0000 0000 FF00 03783         DB 0,0,0,0,0,255
0021A8 01FF 0101 0101 03784         DB 255,1,1,1,1,1
0021AE 0101 0101 FF01 03785         DB 1,1,1,1,1,255
0021B4 80FF 8080 8080 03786         DB 255,128,128,128,128,128
0021BA 8080 8080 FF80 03787         DB 128,128,128,128,128,255
0021C0 0000 0000 F0F0 03788         DB 0,0,0,0,240,240
0021C6 0000 0000 0F0F 03789         DB 0,0,0,0,15,15
0021CC 0000 0000 0000 03790         DB 0,0,0,0,0,0
0021D2 0000 0000 0000 03791         DB 0,0,0,0,0,0
0021D8 0000 0000 0000 03792         DB 0,0,0,0,0,0
0021DE 0000 0000 0000 03793         DB 0,0,0,0,0,0
0021E4 0000 0000 0000 03794         DB 0,0,0,0,0,0
0021EA 0000 004F 0000 03795         DB 0,0,79,0,0,0
0021F0 0700 0700 0000 03796         DB 0,7,0,7,0,0
0021F6 7F14 7F14 0014 03797         DB 20,127,20,127,20,0
0021FC 2A24 2A7F 0012 03798         DB 36,42,127,42,18,0
002202 1323 6408 0062 03799         DB 35,19,8,100,98,0
002208 4936 2255 0050 03800         DB 54,73,85,34,80,0
00220E 0500 0003 0000 03801         DB 0,5,3,0,0,0
002214 221C 0041 0000 03802         DB 28,34,65,0,0,0
00221A 0000 2241 001C 03803         DB 0,0,65,34,28,0
002220 0814 083E 0014 03804         DB 20,8,62,8,20,0
002226 0808 083E 0008 03805         DB 8,8,62,8,8,0
00222C 5000 0030 0000 03806         DB 0,80,48,0,0,0
002232 0808 0808 0008 03807         DB 8,8,8,8,8,0
002238 6000 0060 0000 03808         DB 0,96,96,0,0,0
00223E 1020 0408 0002 03809         DB 32,16,8,4,2,0
002244 513E 4549 003E 03810         DB 62,81,73,69,62,0
00224A 4200 407F 0000 03811         DB 0,66,127,64,0,0
002250 6142 4951 0046 03812         DB 66,97,81,73,70,0
002256 4121 4B45 0031 03813         DB 33,65,69,75,49,0
00225C 1418 7F12 0010 03814         DB 24,20,18,127,16,0
002262 4527 4545 0039 03815         DB 39,69,69,69,57,0
002268 4A3C 4949 0030 03816         DB 60,74,73,73,48,0
00226E 7101 0509 0003 03817         DB 1,113,9,5,3,0
002274 4936 4949 0036 03818         DB 54,73,73,73,54,0
00227A 4906 4949 003E 03819         DB 6,73,73,73,62,0
002280 3600 0036 0000 03820         DB 0,54,54,0,0,0
002286 5600 0036 0000 03821         DB 0,86,54,0,0,0
00228C 1408 4122 0000 03822         DB 8,20,34,65,0,0
002292 1414 1414 0014 03823         DB 20,20,20,20,20,0
002298 4100 1422 0008 03824         DB 0,65,34,20,8,0
00229E 0102 0951 0006 03825         DB 2,1,81,9,6,0
0022A4 4932 4179 003E 03826         DB 50,73,121,65,62,0
0022AA 117E 1111 007E 03827         DB 126,17,17,17,126,0
0022B0 497F 4949 0036 03828         DB 127,73,73,73,54,0
0022B6 413E 4141 0022 03829         DB 62,65,65,65,34,0
0022BC 417F 2241 001C 03830         DB 127,65,65,34,28,0
0022C2 497F 4949 0041 03831         DB 127,73,73,73,65,0
0022C8 097F 0909 0001 03832         DB 127,9,9,9,1,0
0022CE 413E 4949 007A 03833         DB 62,65,73,73,122,0
0022D4 087F 0808 007F 03834         DB 127,8,8,8,127,0
0022DA 4100 417F 0000 03835         DB 0,65,127,65,0,0
0022E0 4020 3F41 0001 03836         DB 32,64,65,63,1,0
0022E6 087F 2214 0041 03837         DB 127,8,20,34,65,0
0022EC 407F 4040 0040 03838         DB 127,64,64,64,64,0
0022F2 027F 020C 007F 03839         DB 127,2,12,2,127,0
0022F8 047F 1008 007F 03840         DB 127,4,8,16,127,0
0022FE 413E 4141 003E 03841         DB 62,65,65,65,62,0
002304 097F 0909 0006 03842         DB 127,9,9,9,6,0
00230A 413E 2151 005E 03843         DB 62,65,81,33,94,0
002310 097F 2919 0046 03844         DB 127,9,25,41,70,0
002316 4946 4949 0031 03845         DB 70,73,73,73,49,0
00231C 0101 017F 0001 03846         DB 1,1,127,1,1,0
002322 403F 4040 003F 03847         DB 63,64,64,64,63,0
002328 201F 2040 001F 03848         DB 31,32,64,32,31,0
00232E 403F 4038 003F 03849         DB 63,64,56,64,63,0
002334 1463 1408 0063 03850         DB 99,20,8,20,99,0
00233A 0807 0870 0007 03851         DB 7,8,112,8,7,0
002340 5161 4549 0043 03852         DB 97,81,73,69,67,0
002346 417F 0041 0000 03853         DB 127,65,65,0,0,0
00234C 0402 1008 0020 03854         DB 2,4,8,16,32,0
002352 0000 4141 007F 03855         DB 0,0,65,65,127,0
002358 0204 0201 0004 03856         DB 4,2,1,2,4,0
00235E 4040 4040 0040 03857         DB 64,64,64,64,64,0
002364 0100 0402 0000 03858         DB 0,1,2,4,0,0
00236A 5420 5454 0078 03859         DB 32,84,84,84,120,0
002370 487F 4444 0038 03860         DB 127,72,68,68,56,0
002376 4438 4444 0020 03861         DB 56,68,68,68,32,0
00237C 4438 4844 007F 03862         DB 56,68,68,72,127,0
002382 5438 5454 0018 03863         DB 56,84,84,84,24,0
002388 7E08 0109 0002 03864         DB 8,126,9,1,2,0
00238E 520C 5252 003E 03865         DB 12,82,82,82,62,0
002394 087F 0404 0078 03866         DB 127,8,4,4,120,0
00239A 4400 407D 0000 03867         DB 0,68,125,64,0,0
0023A0 2000 4440 003D 03868         DB 0,32,64,68,61,0
0023A6 107F 4428 0000 03869         DB 127,16,40,68,0,0
0023AC 4100 407F 0000 03870         DB 0,65,127,64,0,0
0023B2 047C 0418 0078 03871         DB 124,4,24,4,120,0
0023B8 087C 0404 0078 03872         DB 124,8,4,4,120,0
0023BE 4438 4444 0038 03873         DB 56,68,68,68,56,0
0023C4 147C 1414 0008 03874         DB 124,20,20,20,8,0
0023CA 1408 1814 007C 03875         DB 8,20,20,24,124,0
0023D0 087C 0404 0008 03876         DB 124,8,4,4,8,0
0023D6 5448 5454 0020 03877         DB 72,84,84,84,32,0
0023DC 3F04 4044 0020 03878         DB 4,63,68,64,32,0
0023E2 403C 2040 007C 03879         DB 60,64,64,32,124,0
0023E8 201C 2040 001C 03880         DB 28,32,64,32,28,0
0023EE 403C 4030 003C 03881         DB 60,64,48,64,60,0
0023F4 2844 2810 0044 03882         DB 68,40,16,40,68,0
0023FA 500C 5050 003C 03883         DB 12,80,80,80,60,0
002400 6444 4C54 0044 03884         DB 68,100,84,76,68,0
002406 3608 0041 0000 03885         DB 8,54,65,0,0,0
00240C 0000 007F 0000 03886         DB 0,0,127,0,0,0
002412 0000 3641 0008 03887         DB 0,0,65,54,8,0
002418 0800 0804 0004 03888         DB 0,8,4,8,4,0
00241E                03889 INVADER_SPLASH_SCREEN
00241E 0000 0000 0000 03890         DB 0,0,0,0,0,0
002424 0000 0000 0000 03891         DB 0,0,0,0,0,0
00242A 0000 0000 0000 03892         DB 0,0,0,0,0,0
002430 0000 0000 0000 03893         DB 0,0,0,0,0,0
002436 0000 0000 4000 03894         DB 0,0,0,0,0,64
00243C 7870 7C7C 7C7C 03895         DB 112,120,124,124,124,124
002442 FC7C F0F8 C0E0 03896         DB 124,252,248,240,224,192
002448 7CC0 7C7C 7C7C 03897         DB 192,124,124,124,124,124
00244E 7C7C 7C7C 7C7C 03898         DB 124,124,124,124,124,124
002454 F0F8 C0E0 0000 03899         DB 248,240,224,192,0,0
00245A 7C80 7C7C 7C7C 03900         DB 128,124,124,124,124,124
002460 7C7C 707C 0080 03901         DB 124,124,124,112,128,0
002466 0000 C080 F8F0 03902         DB 0,0,128,192,240,248
00246C 3E3E 3E3E 3E3E 03903         DB 62,62,62,62,62,62
002472 3E3E 7C3E E0F8 03904         DB 62,62,62,124,248,224
002478 FEC0 3EFE 3E3E 03905         DB 192,254,254,62,62,62
00247E 3E3E 3E3E 3E3E 03906         DB 62,62,62,62,62,62
002484 3E3E A020 0000 03907         DB 62,62,32,160,0,0
00248A 0000 0000 0000 03908         DB 0,0,0,0,0,0
002490 0000 0000 0000 03909         DB 0,0,0,0,0,0
002496 0000 0000 0000 03910         DB 0,0,0,0,0,0
00249C 0000 0000 0000 03911         DB 0,0,0,0,0,0
0024A2 0000 0000 0000 03912         DB 0,0,0,0,0,0
0024A8 0000 0000 0000 03913         DB 0,0,0,0,0,0
0024AE 0000 0000 0000 03914         DB 0,0,0,0,0,0
0024B4 0000 F060 060C 03915         DB 0,0,96,240,12,6
0024BA 0606 8606 8686 03916         DB 6,6,6,134,134,134
0024C0 0606 0C06 F319 03917         DB 6,6,6,12,25,243
0024C6 3FC7 02FF 0202 03918         DB 199,63,255,2,2,2
0024CC 0202 8282 8282 03919         DB 2,2,130,130,130,130
0024D2 0602 190C E733 03920         DB 2,6,12,25,51,231
0024D8 00F8 02FF 0202 03921         DB 248,0,255,2,2,2
0024DE 0202 0202 0602 03922         DB 2,2,2,2,2,6
0024E4 00FF FE00 F3FF 03923         DB 255,0,0,254,255,243
0024EA 0871 060C 0202 03924         DB 113,8,12,6,2,2
0024F0 8282 0282 0202 03925         DB 130,130,130,2,2,2
0024F6 0F07 3FFF FCC0 03926         DB 7,15,255,63,192,252
0024FC 021E 0202 C303 03927         DB 30,2,2,2,3,195
002502 C3C3 C3C3 43C3 03928         DB 195,195,195,195,195,67
002508 1F73 0003 0000 03929         DB 115,31,3,0,0,0
00250E 0000 0000 0000 03930         DB 0,0,0,0,0,0
002514 0000 0000 0000 03931         DB 0,0,0,0,0,0
00251A 0000 0000 0000 03932         DB 0,0,0,0,0,0
002520 0000 0000 0000 03933         DB 0,0,0,0,0,0
002526 0000 0000 0000 03934         DB 0,0,0,0,0,0
00252C 0000 0000 0000 03935         DB 0,0,0,0,0,0
002532 0000 0000 0300 03936         DB 0,0,0,0,0,3
002538 E03C 0080 0300 03937         DB 60,224,128,0,0,3
00253E 611E 585E 5858 03938         DB 30,97,94,88,88,88
002544 9958 40BF FF03 03939         DB 88,153,191,64,3,255
00254A 00C0 0000 FF01 03940         DB 192,0,0,0,1,255
002550 FF83 0000 0000 03941         DB 131,255,0,0,0,0
002556 FF00 FE07 000F 03942         DB 0,255,7,254,15,0
00255C 0000 7FF8 00E0 03943         DB 0,0,248,127,224,0
002562 0000 FC0F FF00 03944         DB 0,0,15,252,0,255
002568 FF01 0000 0000 03945         DB 1,255,0,0,0,0
00256E FE00 0C1F 080F 03946         DB 0,254,31,12,15,8
002574 0808 7EF8 FC07 03947         DB 8,8,248,126,7,252
00257A 031F 0000 0000 03948         DB 31,3,0,0,0,0
002580 0F0F E80D 0038 03949         DB 15,15,13,232,56,0
002586 0000 0000 0000 03950         DB 0,0,0,0,0,0
00258C 0000 0000 0000 03951         DB 0,0,0,0,0,0
002592 0000 0000 0000 03952         DB 0,0,0,0,0,0
002598 0000 0000 0000 03953         DB 0,0,0,0,0,0
00259E 0000 0000 0000 03954         DB 0,0,0,0,0,0
0025A4 0000 0000 0000 03955         DB 0,0,0,0,0,0
0025AA 0000 0000 0000 03956         DB 0,0,0,0,0,0
0025B0 0000 0000 0000 03957         DB 0,0,0,0,0,0
0025B6 0000 0000 6301 03958         DB 0,0,0,0,1,99
0025BC 2CE6 2828 E868 03959         DB 230,44,40,40,104,232
0025C2 F098 0100 0701 03960         DB 152,240,0,1,1,7
0025C8 83FE F07F 0000 03961         DB 254,131,127,240,0,0
0025CE 0100 21E1 3060 03962         DB 0,1,225,33,96,48
0025D4 0C30 0106 FF00 03963         DB 48,12,6,1,0,255
0025DA 0000 0000 8C8F 03964         DB 0,0,0,0,143,140
0025E0 008F 0000 3F00 03965         DB 143,0,0,0,0,63
0025E6 3FF8 07FE 0000 03966         DB 248,63,254,7,0,0
0025EC 8000 C1FF 0EFE 03967         DB 0,128,255,193,254,14
0025F2 0202 FB82 E01F 03968         DB 2,2,130,251,31,224
0025F8 03FF 0000 F000 03969         DB 255,3,0,0,0,240
0025FE 83BE E383 8382 03970         DB 190,131,131,227,130,131
002604 0000 0000 0000 03971         DB 0,0,0,0,0,0
00260A 0000 0000 0000 03972         DB 0,0,0,0,0,0
002610 0000 0000 0000 03973         DB 0,0,0,0,0,0
002616 0000 0000 0000 03974         DB 0,0,0,0,0,0
00261C 0000 0000 0000 03975         DB 0,0,0,0,0,0
002622 C000 4040 7C5C 03976         DB 0,192,64,64,92,124
002628 FC7C F0FC 4C40 03977         DB 124,252,252,240,64,76
00262E 7C7C FC7C F8FC 03978         DB 124,124,124,252,252,248
002634 0020 3C0C 7C3C 03979         DB 32,0,12,60,60,124
00263A FCFC 06F3 180C 03980         DB 252,252,243,6,12,24
002640 7130 F1F1 D0F1 03981         DB 48,113,241,241,241,208
002646 0C18 3D3F FF3C 03982         DB 24,12,63,61,60,255
00264C F8FC 1818 1EDF 03983         DB 252,248,24,24,223,30
002652 3C3C 3C3C 3C3C 03984         DB 60,60,60,60,60,60
002658 F83F 0808 0E08 03985         DB 63,248,8,8,8,14
00265E 3C0F 3F3F 3838 03986         DB 15,60,63,63,56,56
002664 3838 3E3F F37D 03987         DB 56,56,63,62,125,243
00266A 08EC F8F8 3878 03988         DB 236,8,248,248,120,56
002670 3838 3F3C 3E3F 03989         DB 56,56,60,63,63,62
002676 3F3E 3838 E838 03990         DB 62,63,56,56,56,232
00267C F888 3878 3C38 03991         DB 136,248,120,56,56,60
002682 3E3F 383E 2030 03992         DB 63,62,62,56,48,32
002688 8040 F0C0 FCF8 03993         DB 64,128,192,240,248,252
00268E 7EFE 1E3E 1E1E 03994         DB 254,126,62,30,30,30
002694 1E1E 101C 4000 03995         DB 30,30,28,16,0,64
00269A 0080 0000 0600 03996         DB 128,0,0,0,0,6
0026A0 360E 82C6 0602 03997         DB 14,54,198,130,2,6
0026A6 301C 8FC6 E33B 03998         DB 28,48,198,143,59,227
0026AC 0282 0C06 6E30 03999         DB 130,2,6,12,48,110
0026B2 C3FB 0203 0202 04000         DB 251,195,3,2,2,2
0026B8 731E 739F 83C3 04001         DB 30,115,159,115,195,131
0026BE 0703 701C 07C1 04002         DB 3,7,28,112,193,7
0026C4 C37F 0303 0303 04003         DB 127,195,3,3,3,3
0026CA C07F FFFF FFFF 04004         DB 127,192,255,255,255,255
0026D0 0303 0303 0303 04005         DB 3,3,3,3,3,3
0026D6 0703 C33E E07F 04006         DB 3,7,62,195,127,224
0026DC 0000 03FF 0103 04007         DB 0,0,255,3,3,1
0026E2 E1E1 E121 0101 04008         DB 225,225,33,225,1,1
0026E8 0603 F88F 3FFF 04009         DB 3,6,143,248,255,63
0026EE 07FC 0101 0101 04010         DB 252,7,1,1,1,1
0026F4 E1E1 A1A1 21A1 04011         DB 225,225,161,161,161,33
0026FA F1E1 E33F 073C 04012         DB 225,241,63,227,60,7
002700 0101 C101 E161 04013         DB 1,1,1,193,97,225
002706 0161 0101 C701 04014         DB 97,1,1,1,1,199
00270C 997F 3C70 0206 04015         DB 127,153,112,60,6,2
002712 C103 B131 3171 04016         DB 3,193,49,177,113,49
002718 0101 C181 1876 04017         DB 1,1,129,193,118,24
00271E 0000 0000 0100 04018         DB 0,0,0,0,0,1
002724 0C06 4030 0180 04019         DB 6,12,48,64,128,1
00272A 0C06 C631 709C 04020         DB 6,12,49,198,156,112
002730 00C0 0100 0007 04021         DB 192,0,0,1,7,0
002736 0080 0000 1E07 04022         DB 128,0,0,0,7,30
00273C 83F0 380E 80E0 04023         DB 240,131,14,56,224,128
002742 0700 7F0C 0080 04024         DB 0,7,12,127,128,0
002748 0000 FF00 FF07 04025         DB 0,0,0,255,7,255
00274E FFFF 0000 0000 04026         DB 255,255,0,0,0,0
002754 E0FF 0000 0700 04027         DB 255,224,0,0,0,7
00275A 8FF8 80FC 00FF 04028         DB 248,143,252,128,255,0
002760 0000 07FF FF00 04029         DB 0,0,255,7,0,255
002766 0000 8000 FFFF 04030         DB 0,0,0,128,255,255
00276C 7E8F 0003 0000 04031         DB 143,126,3,0,0,0
002772 E400 A6A7 26A6 04032         DB 0,228,167,166,166,38
002778 7EFE F9CF 010F 04033         DB 254,126,207,249,15,1
00277E 0000 C8C0 09CE 04034         DB 0,0,192,200,206,9
002784 0107 F030 2C68 04035         DB 7,1,48,240,104,44
00278A 3927 C33E 4040 04036         DB 39,57,62,195,64,64
002790 4EC8 080B 9B0A 04037         DB 200,78,11,8,10,155
002796 03F2 0303 0001 04038         DB 242,3,3,3,1,0
00279C 0000 0000 0000 04039         DB 0,0,0,0,0,0
0027A2 0000 0000 0000 04040         DB 0,0,0,0,0,0
0027A8 0201 300C C060 04041         DB 1,2,12,48,96,192
0027AE C6C1 F75D 30CC 04042         DB 193,198,93,247,204,48
0027B4 C0E0 47C0 6C5E 04043         DB 224,192,192,71,94,108
0027BA 6030 4340 745E 04044         DB 48,96,64,67,94,116
0027C0 0504 1806 4070 04045         DB 4,5,6,24,112,64
0027C6 4040 4040 4740 04046         DB 64,64,64,64,64,71
0027CC 077E 7F01 4040 04047         DB 126,7,1,127,64,64
0027D2 4040 0979 7009 04048         DB 64,64,121,9,9,112
0027D8 4040 4F40 0174 04049         DB 64,64,64,79,116,1
0027DE 407F 4040 4447 04050         DB 127,64,64,64,71,68
0027E4 4146 2040 0F10 04051         DB 70,65,64,32,16,15
0027EA 4301 407F 4040 04052         DB 1,67,127,64,64,64
0027F0 4040 484F 4848 04053         DB 64,64,79,72,72,72
0027F6 0878 5E70 4043 04054         DB 120,8,112,94,67,64
0027FC 6040 4738 477B 04055         DB 64,96,56,71,123,71
002802 4041 1C70 0307 04056         DB 65,64,112,28,7,3
002808 613E 6141 6F69 04057         DB 62,97,65,97,105,111
00280E 666D 3061 1C10 04058         DB 109,102,97,48,16,28
002814 0306 0000 0000 04059         DB 6,3,0,0,0,0
00281A 0000 0000      04060         DB 0,0,0,0
  0000281E            04061 F1_EOF EQU $ ; INVADERS.BAS
                      04062
                      04063  #INCLUDE "D:\PRODEV\VSM\BASIC\ISIS_DSNS\INVADERS\INVADERS.STR"
                      00001 ; String PRESS FIRE TO START
00281E                00002 STR@LB1
00281E 5250 5345 2053 00003         DB 80,82,69,83,83,32,70,73,82,69,32,84,79,32,83,84,65,82,84,0
       4946 4552 5420
       204F 5453 5241
       0054
                      00004 ;---------------------------------------------
                      00005 ; String Scoring
002832                00006 STR@LB2
002832 6353 726F 6E69 00007         DB 83,99,111,114,105,110,103,0
       0067
                      00008 ;---------------------------------------------
                      00009 ; String  = 100+ Points
00283A                00010 STR@LB3
00283A 3D20 3120 3030 00011         DB 32,61,32,49,48,48,43,32,80,111,105,110,116,115,0
       202B 6F50 6E69
       7374 0000
                      00012 ;---------------------------------------------
                      00013 ; String  = 20 Points
00284A                00014 STR@LB4
00284A 3D20 3220 2030 00015         DB 32,61,32,50,48,32,80,111,105,110,116,115,0
       6F50 6E69 7374
       0000
                      00016 ;---------------------------------------------
                      00017 ; String  = 10 Points
002858                00018 STR@LB5
002858 3D20 3120 2030 00019         DB 32,61,32,49,48,32,80,111,105,110,116,115,0
       6F50 6E69 7374
       0000
                      00020 ;---------------------------------------------
                      00021 ; String  = 5 Points
002866                00022 STR@LB6
002866 3D20 3520 5020 00023         DB 32,61,32,53,32,80,111,105,110,116,115,0
       696F 746E 0073
                      00024 ;---------------------------------------------
                      00025 ; String PRESS FIRE TO START
002872                00026 STR@LB7
002872 5250 5345 2053 00027         DB 80,82,69,83,83,32,70,73,82,69,32,84,79,32,83,84,65,82,84,0
       4946 4552 5420
       204F 5453 5241
       0054
                      00028 ;---------------------------------------------
                      00029 ; String GAME OVER
002886                00030 STR@LB8
002886 4147 454D 4F20 00031         DB 71,65,77,69,32,79,86,69,82,0
       4556 0052
                      00032 ;---------------------------------------------
                      00033 ; String PRESS FIRE TO START
002890                00034 STR@LB9
002890 5250 5345 2053 00035         DB 80,82,69,83,83,32,70,73,82,69,32,84,79,32,83,84,65,82,84,0
       4946 4552 5420
       204F 5453 5241
       0054
                      00036 ;---------------------------------------------
                      04064         END
MPASM 03.80 Released                             INVADERS.ASM   7-30-2004  12:15:53         PAGE  2


SYMBOL TABLE
  LABEL                             VALUE

A                                 00000000
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCS0                             00000006
ADCS1                             00000007
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRES                             00000FC3
ADRESH                            00000FC4
ADRESL                            00000FC3
ADRESLH                           00000FC4
AN0                               00000000
AN1                               00000001
AN2                               00000002
AN3                               00000003
AN4                               00000005
AN5                               00000000
AN6                               00000001
AN7                               00000002
BACKWARD                          0
BANK0_END                         255
BANK0_START                       128
BANK1_END                         511
BANK1_START                       256
BANK2_END                         767
BANK2_START                       512
BANK3_END                         1023
BANK3_START                       768
BANK4_END                         1279
BANK4_START                       1024
BANK5_END                         1535
BANK5_START                       1280
BANKA_END                         127
BANKA_START                       0
BANKED                            00000001
BASE_ENABLED                      0000003D
BASE_ENABLED#0                    0000003D
BASE_ENABLED#1                    0000003E
BASE_ENABLED#2                    0000003F
BASE_ENABLED#3                    00000040
BASE_ENABLED#4                    00000041
BASE_ENABLED#5                    00000042
BASE_ENABLED#6                    00000043
BASE_ENABLED#7                    00000044
BASE_ENABLED#8                    00000045
BASE_HIT                          MISSILE_STATUS,2
BASE_HITS                         00000046
BASE_HITS#0                       00000046
BASE_HITS#1                       00000047
BASE_HITS#2                       00000048
BASE_HITS#3                       00000049
BASE_HITS#4                       0000004A
BASE_HITS#5                       0000004B
BASE_HITS#6                       0000004C
BASE_HITS#7                       0000004D
BASE_HITS#8                       0000004E
BASE_XPOS_TEST                    0000008F
BC@LL1                            0000090C
BC@LL10                           00000766
BC@LL100                          00000BC4
BC@LL101                          00000BC4
BC@LL102                          00000BC4
BC@LL105                          0000110E
BC@LL107                          00000CBC
BC@LL109                          00000CBC
BC@LL11                           00000768
BC@LL111                          00000CDE
BC@LL113                          00000CDE
BC@LL115                          00000E1C
BC@LL117                          00000E1C
BC@LL118                          00000E1C
BC@LL119                          00000E1C
BC@LL121                          00000E1E
BC@LL122                          0000110E
BC@LL124                          00001106
BC@LL126                          00001106
BC@LL127                          00001106
BC@LL128                          00001106
BC@LL13                           000007A8
BC@LL130                          00001046
BC@LL131                          00000F3A
BC@LL134                          00000FC2
BC@LL136                          00001046
BC@LL137                          00001102
BC@LL138                          000010D8
BC@LL139                          000010E8
BC@LL140                          00001102
BC@LL142                          00001102
BC@LL144                          00001100
BC@LL145                          00001102
BC@LL147                          0000114E
BC@LL149                          00001128
BC@LL15                           000007A2
BC@LL151                          0000114E
BC@LL153                          0000115A
BC@LL155                          0000116A
BC@LL156                          00001178
BC@LL157                          000012F0
BC@LL159                          000012EC
BC@LL16                           000007A4
BC@LL161                          0000126A
BC@LL163                          00001284
BC@LL165                          000012FC
BC@LL166                          00001300
BC@LL167                          000013E6
BC@LL168                          000013DE
BC@LL169                          0000134E
BC@LL172                          00001398
BC@LL174                          000013DE
BC@LL176                          00001456
BC@LL177                          000013F2
BC@LL178                          00001452
BC@LL18                           000007E4
BC@LL180                          0000144A
BC@LL182                          0000144A
BC@LL183                          000014B6
BC@LL184                          00001458
BC@LL185                          000014B6
BC@LL187                          000014AE
BC@LL189                          000014AE
BC@LL191                          000014BE
BC@LL192                          000014C0
BC@LL193                          000017C8
BC@LL195                          000017C0
BC@LL197                          00001650
BC@LL198                          0000164A
BC@LL199                          00001556
BC@LL2                            00000730
BC@LL20                           000007DE
BC@LL202                          000015D2
BC@LL204                          0000164A
BC@LL205                          000017C0
BC@LL206                          000017BE
BC@LL207                          000016CA
BC@LL21                           000007E0
BC@LL210                          00001746
BC@LL212                          000017BE
BC@LL214                          00001934
BC@LL216                          000018CA
BC@LL218                          000018C4
BC@LL219                          000018C8
BC@LL221                          00001930
BC@LL222                          00001936
BC@LL224                          00001948
BC@LL226                          00001958
BC@LL228                          0000196A
BC@LL23                           00000820
BC@LL230                          0000197C
BC@LL232                          0000198C
BC@LL233                          0000199C
BC@LL234                          000019EA
BC@LL235                          0000199E
BC@LL236                          000019E2
BC@LL237                          00001A0E
BC@LL238                          00001A16
BC@LL239                          00001A16
BC@LL240                          00001A1E
BC@LL241                          00001BEE
BC@LL242                          00001BF6
BC@LL243                          00001BF6
BC@LL244                          00001BFE
BC@LL245                          00001C2A
BC@LL246                          00001C50
BC@LL247                          00001D0A
BC@LL248                          00002002
BC@LL25                           0000081A
BC@LL250                          00001D42
BC@LL252                          00001D42
BC@LL254                          00001D54
BC@LL256                          00001D5E
BC@LL258                          00001D7A
BC@LL26                           0000081C
BC@LL260                          00001D7A
BC@LL262                          00001DE2
BC@LL264                          00001DE2
BC@LL266                          00001DEC
BC@LL268                          00001E0A
BC@LL270                          00001E08
BC@LL272                          00001E28
BC@LL274                          00001E20
BC@LL276                          00001FFA
BC@LL278                          00001FF6
BC@LL279                          00001FFA
BC@LL28                           0000085C
BC@LL280                          00002056
BC@LL281                          000020A6
BC@LL283                          0000209C
BC@LL284                          000020AE
BC@LL285                          000020CA
BC@LL286                          00002104
BC@LL287                          0000210C
BC@LL288                          00002112
BC@LL289                          0000211A
BC@LL30                           00000856
BC@LL31                           00000858
BC@LL33                           00000898
BC@LL35                           00000892
BC@LL36                           00000894
BC@LL38                           000008D4
BC@LL40                           000008CE
BC@LL41                           000008D0
BC@LL43                           0000090C
BC@LL45                           0000090A
BC@LL46                           0000090C
BC@LL48                           00000914
BC@LL5                            0000072A
BC@LL50                           00000946
BC@LL52                           00000926
BC@LL54                           00000946
BC@LL56                           00000978
BC@LL58                           00000958
BC@LL6                            0000072C
BC@LL60                           00000978
BC@LL62                           00000A1A
BC@LL63                           00000982
BC@LL64                           00000A1A
BC@LL66                           00000A12
BC@LL67                           00000A12
BC@LL68                           00000A12
BC@LL71                           00000AEC
BC@LL72                           00000AEC
BC@LL73                           00000AEC
BC@LL74                           00000A52
BC@LL75                           00000A54
BC@LL76                           00000AEC
BC@LL78                           00000AE4
BC@LL79                           00000AE4
BC@LL8                            0000076C
BC@LL80                           00000AE4
BC@LL83                           00000B58
BC@LL85                           00000B10
BC@LL87                           00000B10
BC@LL89                           00000B58
BC@LL90                           00000B58
BC@LL91                           00000B58
BC@LL94                           00000BC4
BC@LL96                           00000B7C
BC@LL98                           00000B7C
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BELL                              00000007
BF                                00000000
BIT_BIT
BIT_BYTE
BIT_DWORD
BIT_FLOAT
BIT_WORD
BIT_WREG
BKSP                              00000008
BOR                               00000000
BORV_20_2                         000000FF
BORV_27_2                         000000FB
BORV_42_2                         000000F7
BORV_45_2                         000000F3
BOR_OFF_2                         000000FD
BOR_ON_2                          000000FF
BPF                               00000000
BPFH                              00000001
BRGH                              00000002
BSR                               00000FE0
BYTE_BIT
BYTE_BYTE
BYTE_DWORD
BYTE_FLOAT
BYTE_WORD
BYTE_WREG
C                                 00000000
CCP1                              00000002
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1X                             00000005
CCP1Y                             00000004
CCP2                              00000001
CCP2A                             00000003
CCP2CON                           00000FBA
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MX_OFF_3                      000000FE
CCP2MX_ON_3                       000000FF
CCP2X                             00000005
CCP2Y                             00000004
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR1LH                           00000FBF
CCPR2H                            00000FBC
CCPR2L                            00000FBB
CCPR2LH                           00000FBC
CFGS                              00000006
CH@SND                            00000416
CHECK@PAGE                        00000366
CHECK_BASE_HIT                    000006F2
CHECK_FOR_INVADER_MISSILE2_HIT    00000B5A
CHECK_FOR_INVADER_MISSILE_HIT     00000AEE
CHECK_FOR_MISSILE_HIT             00000C96
CHS0                              00000003
CHS1                              00000004
CHS2                              00000005
CIR@CLE                           00000184
CK                                00000006
CKE                               00000006
CKP                               00000004
CLEAR_INVADER_MISSILE             000005A2
CLEAR_INVADER_MISSILE2            0000060E
CLEAR_MISSILE                     00000BC6
CLEAR_SAUCER                      000017CA
CLKO                              00000006
CLRC                              BCF STATUS,C
CLRW                              CLRF WREG
CLRZ                              BCF STATUS,Z
CN@EQ                             0000001E
CONFIG1H                          00300001
CONFIG1L                          00300000
CONFIG2H                          00300003
CONFIG2L                          00300002
CONFIG3H                          00300005
CONFIG3L                          00300004
CONFIG4H                          00300007
CONFIG4L                          00300006
CONFIG5H                          00300009
CONFIG5L                          00300008
CONFIG6H                          0030000B
CONFIG6L                          0030000A
CONFIG7H                          0030000D
CONFIG7L                          0030000C
CP0_OFF_5                         000000FF
CP0_ON_5                          000000FE
CP1_OFF_5                         000000FF
CP1_ON_5                          000000FD
CP2_OFF_5                         000000FF
CP2_ON_5                          000000FB
CP3_OFF_5                         000000FF
CP3_ON_5                          000000F7
CP@LB11                           00000BBC
CP@LB12                           00000D0E
CP@LB13                           00000EA4
CP@LB15                           00001E16
CP@LB2                            000009C0
CP@LB4                            00000A3A
CP@LB5                            00000A52
CP@LB6                            00000A92
CP@LB9                            00000B50
CPB_OFF_5                         000000FF
CPB_ON_5                          000000BF
CPD_OFF_5                         000000FF
CPD_ON_5                          0000007F
CR                                0000000D
CRC@LP1                           000001A2
CRC@LP2                           000001D4
CRC@LP3                           000001FE
CREN                              00000004
CS                                00000002
CSRC                              00000007
CSTR@CT                           00000002
D                                 00000005
D@DIG                             0000005E
D@K                               0000055C
D@VD                              00000532
D@VD2                             00000536
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DEBUG_OFF_4                       000000FF
DEBUG_ON_4                        0000007F
DEFAULT_INVADER_SPEED             00000093
DEVID1                            003FFFFE
DEVID2                            003FFFFF
DIG@DIV                           000004AE
DISPLAY_SPASH_SCREEN              0000198E
DIV32@1                           000004BC
DIV32@2                           000004E4
DIV32@3                           000004F4
DIV32@FIN                         00000514
DIV32@SKPNEG                      00000490
DL@H                              00000472
DL@LP                             00000446
DL@MS                             00000442
DL@US                             0000045E
DLUS@LP                           0000046C
DLUS@W                            00000460
DLY@W                             00000444
DRAW_INVADERS                     000014BE
DRAW_INVADER_MISSILE              000005D8
DRAW_INVADER_MISSILE2             00000644
DRAW_MISSILE                      00000C08
DRAW_SAUCER                       0000183E
DRAW_SHIP                         00000C4A
DV@LP                             0000053A
DWORD_BIT
DWORD_BYTE
DWORD_DWORD
DWORD_FLOAT
DWORD_WORD
DWORD_WREG
D_A                               00000005
EBTR0_OFF_7                       000000FF
EBTR0_ON_7                        000000FE
EBTR1_OFF_7                       000000FF
EBTR1_ON_7                        000000FD
EBTR2_OFF_7                       000000FF
EBTR2_ON_7                        000000FB
EBTR3_OFF_7                       000000FF
EBTR3_ON_7                        000000F7
EBTRB_OFF_7                       000000FF
EBTRB_ON_7                        000000BF
ECIO_OSC_1                        000000FD
EC_OSC_1                          000000FC
EEADR                             00000FA9
EECON1                            00000FA6
EECON2                            00000FA7
EEDAT                             00000FA8
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
EN@RIGHT                          00000372
EX@SEND@IT                        0000008E
F1_000137                         00000590
F1_000138                         00000592
F1_000139                         00000594
F1_000140                         00000596
F1_000141                         0000059A
F1_000142                         0000059C
F1_000143                         0000059E
F1_000148                         000005A2
F1_000149                         000005AA
F1_000150                         000005B2
F1_000151                         000005BA
F1_000152                         000005C2
F1_000153                         000005CC
F1_000154                         000005D6
F1_000156                         000005D8
F1_000157                         000005E0
F1_000158                         000005E8
F1_000159                         000005F0
F1_000160                         000005F8
F1_000161                         00000602
F1_000162                         0000060C
F1_000167                         0000060E
F1_000168                         00000616
F1_000169                         0000061E
F1_000170                         00000626
F1_000171                         0000062E
F1_000172                         00000638
F1_000173                         00000642
F1_000175                         00000644
F1_000176                         0000064C
F1_000177                         00000654
F1_000178                         0000065C
F1_000179                         00000664
F1_000180                         00000670
F1_000181                         0000067C
F1_000185                         0000067E
F1_000188                         000006F0
F1_000194                         000006F2
F1_000195                         000006F4
F1_000196                         000006F4
F1_000197                         00000704
F1_000198                         00000722
F1_000199                         00000724
F1_000200                         0000072A
F1_000201                         0000072A
F1_000202                         0000072C
F1_000203                         00000730
F1_000204                         00000740
F1_000205                         0000075E
F1_000206                         00000760
F1_000207                         00000766
F1_000208                         00000766
F1_000209                         00000768
F1_000210                         0000076C
F1_000211                         0000077C
F1_000212                         0000079A
F1_000213                         0000079C
F1_000214                         000007A2
F1_000215                         000007A2
F1_000216                         000007A4
F1_000217                         000007A8
F1_000218                         000007B8
F1_000219                         000007D6
F1_000220                         000007D8
F1_000221                         000007DE
F1_000222                         000007DE
F1_000223                         000007E0
F1_000224                         000007E4
F1_000225                         000007F4
F1_000226                         00000812
F1_000227                         00000814
F1_000228                         0000081A
F1_000229                         0000081A
F1_000230                         0000081C
F1_000231                         00000820
F1_000232                         00000830
F1_000233                         0000084E
F1_000234                         00000850
F1_000235                         00000856
F1_000236                         00000856
F1_000237                         00000858
F1_000238                         0000085C
F1_000239                         0000086C
F1_000240                         0000088A
F1_000241                         0000088C
F1_000242                         00000892
F1_000243                         00000892
F1_000244                         00000894
F1_000245                         00000898
F1_000246                         000008A8
F1_000247                         000008C6
F1_000248                         000008C8
F1_000249                         000008CE
F1_000250                         000008CE
F1_000251                         000008D0
F1_000252                         000008D4
F1_000253                         000008E4
F1_000254                         00000902
F1_000255                         00000904
F1_000256                         0000090A
F1_000257                         0000090A
F1_000258                         0000090C
F1_000259                         0000090C
F1_000260                         0000090C
F1_000261                         00000914
F1_000268                         00000916
F1_000269                         0000091C
F1_000270                         00000922
F1_000271                         00000924
F1_000272                         00000926
F1_000273                         00000926
F1_000274                         00000940
F1_000275                         00000942
F1_000276                         00000944
F1_000277                         00000946
F1_000278                         00000946
F1_000279                         00000946
F1_000286                         00000948
F1_000287                         0000094E
F1_000288                         00000954
F1_000289                         00000956
F1_000290                         00000958
F1_000291                         00000958
F1_000292                         00000972
F1_000293                         00000974
F1_000294                         00000976
F1_000295                         00000978
F1_000296                         00000978
F1_000297                         00000978
F1_000306                         0000097A
F1_000307                         00000980
F1_000308                         00000982
F1_000309                         00000982
F1_000310                         00000998
F1_000311                         000009B2
F1_000312                         000009D8
F1_000313                         000009DA
F1_000314                         000009F0
F1_000315                         00000A12
F1_000316                         00000A12
F1_000317                         00000A12
F1_000318                         00000A14
F1_000319                         00000A1A
F1_000320                         00000A1A
F1_000330                         00000A1C
F1_000332                         00000A22
F1_000333                         00000A2C
F1_000334                         00000A52
F1_000335                         00000A54
F1_000336                         00000A54
F1_000337                         00000A6A
F1_000338                         00000A84
F1_000339                         00000AAA
F1_000340                         00000AAC
F1_000341                         00000AC2
F1_000342                         00000AE4
F1_000343                         00000AE4
F1_000344                         00000AE4
F1_000345                         00000AE6
F1_000346                         00000AEC
F1_000348                         00000AEC
F1_000349                         00000AEC
F1_000354                         00000AEE
F1_000355                         00000AF0
F1_000357                         00000AF6
F1_000358                         00000AFE
F1_000359                         00000B02
F1_000360                         00000B06
F1_000361                         00000B0C
F1_000362                         00000B0E
F1_000363                         00000B10
F1_000364                         00000B10
F1_000367                         00000B10
F1_000368                         00000B18
F1_000369                         00000B26
F1_000370                         00000B50
F1_000371                         00000B54
F1_000372                         00000B56
F1_000373                         00000B58
F1_000374                         00000B58
F1_000375                         00000B58
F1_000376                         00000B58
F1_000381                         00000B5A
F1_000382                         00000B5C
F1_000384                         00000B62
F1_000385                         00000B6A
F1_000386                         00000B6E
F1_000387                         00000B72
F1_000388                         00000B78
F1_000389                         00000B7A
F1_000390                         00000B7C
F1_000391                         00000B7C
F1_000394                         00000B7C
F1_000395                         00000B84
F1_000396                         00000B92
F1_000397                         00000BBC
F1_000398                         00000BC0
F1_000399                         00000BC2
F1_000400                         00000BC4
F1_000401                         00000BC4
F1_000402                         00000BC4
F1_000403                         00000BC4
F1_000407                         00000BC6
F1_000408                         00000BD0
F1_000409                         00000BDA
F1_000410                         00000BE4
F1_000411                         00000BEE
F1_000412                         00000BFA
F1_000413                         00000C06
F1_000415                         00000C08
F1_000416                         00000C12
F1_000417                         00000C1C
F1_000418                         00000C26
F1_000419                         00000C30
F1_000420                         00000C3C
F1_000421                         00000C48
F1_000425                         00000C4A
F1_000426                         00000C94
F1_000431                         00000C96
F1_000432                         00000C98
F1_000433                         00000C9A
F1_000435                         00000CA0
F1_000436                         00000CA8
F1_000437                         00000CAC
F1_000438                         00000CB0
F1_000439                         00000CB6
F1_000440                         00000CB8
F1_000441                         00000CBA
F1_000442                         00000CBC
F1_000443                         00000CBC
F1_000446                         00000CBC
F1_000447                         00000CCC
F1_000448                         00000CCE
F1_000449                         00000CD0
F1_000450                         00000CD2
F1_000451                         00000CDC
F1_000452                         00000CDE
F1_000455                         00000CDE
F1_000456                         00000CE4
F1_000457                         00000CEC
F1_000458                         00000CEC
F1_000459                         00000D0E
F1_000460                         00000D10
F1_000461                         00000D12
F1_000462                         00000D14
F1_000463                         00000D18
F1_000464                         00000D72
F1_000465                         00000D78
F1_000466                         00000DE4
F1_000467                         00000DE8
F1_000468                         00000DEE
F1_000469                         00000DF2
F1_000470                         00000DF8
F1_000471                         00000E18
F1_000472                         00000E1A
F1_000473                         00000E1C
F1_000474                         00000E1C
F1_000475                         00000E1C
F1_000478                         00000E1C
F1_000479                         00000E1E
F1_000480                         00000E1E
F1_000481                         00000E34
F1_000482                         00000E62
F1_000483                         00000E72
F1_000484                         00000EA4
F1_000485                         00000EB2
F1_000486                         00000EB4
F1_000487                         00000EB6
F1_000488                         00000EBA
F1_000489                         00000EBA
F1_000490                         00000EC2
F1_000491                         00000F2A
F1_000492                         00000F3A
F1_000493                         00000F4A
F1_000494                         00000FB2
F1_000495                         00000FC2
F1_000496                         00000FD2
F1_000497                         0000103A
F1_000498                         00001046
F1_000499                         00001046
F1_000500                         0000104C
F1_000501                         00001050
F1_000502                         00001056
F1_000503                         0000105A
F1_000504                         00001060
F1_000507                         000010C8
F1_000509                         000010CA
F1_000510                         000010D0
F1_000511                         000010D8
F1_000512                         000010E0
F1_000513                         000010E8
F1_000515                         000010E8
F1_000516                         000010F0
F1_000517                         000010F8
F1_000518                         00001100
F1_000519                         00001100
F1_000520                         00001102
F1_000521                         00001102
F1_000522                         00001102
F1_000523                         00001102
F1_000524                         00001104
F1_000525                         00001106
F1_000526                         00001106
F1_000527                         00001106
F1_000528                         00001106
F1_000529                         00001108
F1_000530                         0000110E
F1_000531                         0000110E
F1_000538                         00001110
F1_000539                         00001116
F1_000540                         0000111C
F1_000541                         00001120
F1_000542                         00001122
F1_000543                         00001128
F1_000544                         00001128
F1_000545                         00001142
F1_000546                         00001144
F1_000547                         00001146
F1_000548                         0000114A
F1_000549                         0000114E
F1_000550                         0000114E
F1_000551                         0000114E
F1_000555                         00001150
F1_000556                         0000115A
F1_000557                         0000115E
F1_000558                         00001160
F1_000562                         00001162
F1_000563                         0000116A
F1_000564                         0000116E
F1_000565                         00001170
F1_000571                         00001172
F1_000572                         00001174
F1_000573                         00001178
F1_000574                         00001178
F1_000575                         0000117A
F1_000576                         00001190
F1_000577                         000011F8
F1_000578                         0000121C
F1_000579                         00001234
F1_000580                         00001246
F1_000581                         0000126A
F1_000582                         0000126A
F1_000583                         00001284
F1_000584                         000012EC
F1_000585                         000012EC
F1_000586                         000012F0
F1_000587                         000012F2
F1_000588                         000012FC
F1_000595                         000012FE
F1_000596                         00001300
F1_000597                         00001300
F1_000598                         00001310
F1_000599                         00001310
F1_000600                         00001318
F1_000601                         0000133A
F1_000602                         0000134E
F1_000603                         0000135E
F1_000604                         00001384
F1_000605                         00001398
F1_000606                         000013A8
F1_000607                         000013CE
F1_000608                         000013DE
F1_000609                         000013DE
F1_000610                         000013E0
F1_000611                         000013E6
F1_000617                         000013E8
F1_000618                         000013EA
F1_000619                         000013F0
F1_000620                         000013F2
F1_000621                         000013F2
F1_000622                         00001408
F1_000623                         0000142C
F1_000624                         00001444
F1_000625                         00001446
F1_000626                         00001448
F1_000627                         0000144A
F1_000628                         0000144A
F1_000629                         0000144A
F1_000630                         0000144C
F1_000631                         00001456
F1_000632                         00001456
F1_000633                         00001458
F1_000634                         00001458
F1_000635                         0000146E
F1_000636                         00001492
F1_000637                         000014AA
F1_000638                         000014AC
F1_000639                         000014AE
F1_000640                         000014AE
F1_000641                         000014AE
F1_000642                         000014B0
F1_000643                         000014B6
F1_000644                         000014B6
F1_000660                         000014BE
F1_000661                         000014C0
F1_000662                         000014C0
F1_000663                         000014D6
F1_000664                         000014DC
F1_000665                         000014DE
F1_000666                         000014E2
F1_000667                         000014E2
F1_000668                         000014EA
F1_000669                         00001556
F1_000670                         00001566
F1_000671                         000015D2
F1_000672                         000015E2
F1_000673                         0000164A
F1_000675                         0000164A
F1_000676                         00001650
F1_000677                         00001650
F1_000678                         00001652
F1_000679                         00001656
F1_000680                         00001656
F1_000681                         0000165E
F1_000682                         000016CA
F1_000683                         000016DA
F1_000684                         00001746
F1_000685                         00001756
F1_000686                         000017BE
F1_000687                         000017BE
F1_000688                         000017C0
F1_000689                         000017C0
F1_000690                         000017C0
F1_000691                         000017C2
F1_000692                         000017C8
F1_000696                         000017CA
F1_000697                         0000183C
F1_000701                         0000183E
F1_000702                         00001898
F1_000707                         0000189A
F1_000708                         000018A0
F1_000709                         000018A2
F1_000710                         000018A8
F1_000711                         000018AA
F1_000712                         000018BC
F1_000713                         000018C4
F1_000714                         000018C4
F1_000715                         000018C8
F1_000716                         000018C8
F1_000717                         000018CA
F1_000718                         000018CA
F1_000719                         000018E4
F1_000720                         000018E6
F1_000721                         000018E8
F1_000722                         000018EC
F1_000723                         00001930
F1_000724                         00001934
F1_000725                         00001934
F1_000726                         00001936
F1_000727                         00001936
F1_000733                         00001938
F1_000734                         0000193A
F1_000735                         0000193C
F1_000736                         00001942
F1_000737                         00001944
F1_000738                         00001948
F1_000741                         00001948
F1_000742                         0000194A
F1_000743                         0000194C
F1_000744                         00001952
F1_000745                         00001954
F1_000746                         00001958
F1_000749                         00001958
F1_000750                         0000195A
F1_000751                         0000195C
F1_000752                         00001966
F1_000753                         00001968
F1_000754                         0000196A
F1_000756                         0000196A
F1_000757                         0000196C
F1_000758                         0000196E
F1_000759                         00001978
F1_000760                         0000197A
F1_000761                         0000197C
F1_000764                         0000197C
F1_000765                         0000197E
F1_000766                         00001980
F1_000767                         00001986
F1_000768                         00001988
F1_000769                         0000198C
F1_000770                         0000198C
F1_000776                         0000198E
F1_000777                         00001992
F1_000778                         0000199A
F1_000779                         0000199C
F1_000780                         0000199C
F1_000781                         0000199E
F1_000782                         0000199E
F1_000783                         000019C2
F1_000784                         000019D0
F1_000785                         000019DA
F1_000786                         000019DC
F1_000787                         000019E2
F1_000788                         000019E4
F1_000789                         000019EA
F1_000793                         000019EC
F1_000794                         000019EE
F1_000795                         000019F8
F1_000796                         00001A0E
F1_000797                         00001A16
F1_000798                         00001A1E
F1_000800                         00001A24
F1_000801                         00001A28
F1_000802                         00001A3C
F1_000803                         00001A96
F1_000805                         00001AAC
F1_000806                         00001AFA
F1_000807                         00001B10
F1_000808                         00001B5E
F1_000809                         00001B74
F1_000810                         00001BC2
F1_000811                         00001BD8
F1_000812                         00001BEE
F1_000813                         00001BF6
F1_000814                         00001BFE
F1_000816                         00001C04
F1_000817                         00001C08
F1_000818                         00001C0C
F1_000819                         00001C10
F1_000820                         00001C18
F1_000821                         00001C1C
F1_000822                         00001C20
F1_000823                         00001C24
F1_000825                         00001C28
F1_000826                         00001C2A
F1_000827                         00001C2A
F1_000828                         00001C3A
F1_000829                         00001C48
F1_000830                         00001C4A
F1_000833                         00001C50
F1_000834                         00001C52
F1_000835                         00001C54
F1_000836                         00001C56
F1_000837                         00001C58
F1_000838                         00001C5A
F1_000840                         00001C5C
F1_000841                         00001C5E
F1_000849                         00001C62
F1_000850                         00001C68
F1_000851                         00001C6C
F1_000852                         00001C70
F1_000853                         00001C72
F1_000854                         00001C74
F1_000855                         00001C78
F1_000856                         00001C7A
F1_000857                         00001C7E
F1_000858                         00001C80
F1_000859                         00001C82
F1_000860                         00001C84
F1_000861                         00001C86
F1_000862                         00001C88
F1_000863                         00001C8A
F1_000864                         00001C8C
F1_000865                         00001C8E
F1_000867                         00001C90
F1_000868                         00001C94
F1_000869                         00001C98
F1_000871                         00001C9C
F1_000872                         00001C9E
F1_000873                         00001CA2
F1_000874                         00001CA4
F1_000875                         00001CA6
F1_000876                         00001CA8
F1_000877                         00001CAC
F1_000878                         00001CAE
F1_000879                         00001CB0
F1_000880                         00001CB4
F1_000881                         00001CB8
F1_000882                         00001CBA
F1_000883                         00001CBE
F1_000884                         00001CC2
F1_000886                         00001CC6
F1_000888                         00001D0A
F1_000889                         00001D0A
F1_000890                         00001D10
F1_000891                         00001D14
F1_000892                         00001D16
F1_000893                         00001D18
F1_000894                         00001D20
F1_000897                         00001D22
F1_000898                         00001D26
F1_000899                         00001D2A
F1_000900                         00001D38
F1_000901                         00001D42
F1_000902                         00001D42
F1_000904                         00001D46
F1_000906                         00001D4A
F1_000907                         00001D54
F1_000910                         00001D5E
F1_000911                         00001D6A
F1_000912                         00001D70
F1_000913                         00001D72
F1_000914                         00001D78
F1_000915                         00001D7A
F1_000918                         00001D7A
F1_000919                         00001D7E
F1_000921                         00001D82
F1_000922                         00001D98
F1_000924                         00001D9E
F1_000925                         00001DE2
F1_000926                         00001DE2
F1_000928                         00001DE2
F1_000929                         00001DE8
F1_000930                         00001DEC
F1_000931                         00001DEC
F1_000932                         00001DF0
F1_000934                         00001DF4
F1_000935                         00001DFA
F1_000936                         00001DFE
F1_000937                         00001E08
F1_000938                         00001E0A
F1_000940                         00001E0A
F1_000941                         00001E16
F1_000942                         00001E1C
F1_000943                         00001E20
F1_000944                         00001E20
F1_000945                         00001E24
F1_000946                         00001E28
F1_000948                         00001E28
F1_000949                         00001E2E
F1_000951                         00001E30
F1_000952                         00001E32
F1_000953                         00001E34
F1_000954                         00001E38
F1_000955                         00001E3C
F1_000956                         00001E86
F1_000957                         00001E8C
F1_000958                         00001E90
F1_000959                         00001E94
F1_000960                         00001EDE
F1_000961                         00001EE4
F1_000962                         00001EE8
F1_000963                         00001EEC
F1_000964                         00001F36
F1_000965                         00001F3C
F1_000966                         00001F86
F1_000967                         00001F8C
F1_000968                         00001F8E
F1_000969                         00001F90
F1_000970                         00001F92
F1_000971                         00001F9A
F1_000972                         00001FE4
F1_000973                         00001FF6
F1_000974                         00001FF6
F1_000975                         00001FFA
F1_000976                         00001FFA
F1_000977                         00001FFA
F1_000978                         00002000
F1_000982                         00002002
F1_000983                         00002046
F1_000984                         00002048
F1_000985                         0000204A
F1_000986                         0000204E
F1_000987                         00002052
F1_000988                         00002056
F1_000989                         00002056
F1_000990                         0000205A
F1_000991                         0000205E
F1_000992                         0000206E
F1_000993                         00002080
F1_000994                         00002088
F1_000995                         0000209C
F1_000996                         0000209C
F1_000997                         000020A0
F1_000998                         000020A6
F1_000999                         000020A8
F1_001000                         000020AA
F1_001001                         000020AE
F1_001002                         000020AE
F1_001003                         000020C0
F1_001004                         000020C4
F1_001006                         000020CA
F1_001007                         000020E4
F1_001008                         000020EE
F1_001009                         00002104
F1_001010                         0000210C
F1_001011                         00002112
F1_001012                         0000211A
F1_001013                         00002120
F1_EOF                            0000281E
F1_SOF                            0000058C
F2_000068                         0000058C
F2_EOF                            00000590
F2_SOF                            0000058C
F@CALL
F@JUMP
FALSE                             0
FAST                              00000001
FERR                              00000002
FIRE_BUTTON                       PORTB,2
FIRE_INVADER_MISSILE              0000097A
FIRE_INVADER_MISSILE2             00000A1C
FLOAT_BIT
FLOAT_BYTE
FLOAT_DWORD
FLOAT_FLOAT
FLOAT_WORD
FLOAT_WREG
FONT                              00002124
FONT_SLAVE#ADDR                   0
FORWARD                           1
FREE                              00000004
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR0LH                            00000FEA
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR1LH                            00000FE2
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FSR2LH                            00000FDA
G@OTO
GAME_OVER                         00002002
GCEN                              00000007
GEN                               00000003
GEN2                              00000004
GEN2H                             00000005
GEN3                              00000006
GEN3H                             00000007
GEN4                              00000008
GEN4H                             00000009
GENH                              0000000A
GETBIT@POS                        000002A0
GIE                               INTCON,7
GIEH                              00000007
GIEL                              00000006
GLCD@CLS                          000003D0
GLCD@FLP                          0000010E
GLCD@L2                           000003EC
GLCD@P                            000002D2
GLCD_CUR                          000003A0
GLCD_L@2                          00000134
GLD@L1                            000003E0
GO                                00000002
GO@TO
GOVERN_SPEEDS                     00001938
GO_DONE                           00000002
GPR                               0000000B
HOME                              00000001
HSPLL_OSC_1                       000000FE
HS_OSC_1                          000000FA
I2C_DAT                           00000005
I2C_RD                            00000002
I@NT                              00000582
I@NTR                             00000584
IBF                               00000007
IBOV                              00000005
IDLOC0                            00200000
IDLOC1                            00200001
IDLOC2                            00200002
IDLOC3                            00200003
IDLOC4                            00200004
IDLOC5                            00200005
IDLOC6                            00200006
IDLOC7                            00200007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT2                              00000002
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INTCON                            00000FF2
INTCON1                           00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTERNAL#FONT                     1
INTERNAL_INVADER_SOUND_ENABLE     NOTE_STATUS,4
INTERRUPT_COUNTER1                00000032
INVADERS_DIRECTION                _B#VR1,1
INVADERS_ENABLED                  0000008D
INVADERS_REACHED_BOTTOM           _B#VR1,4
INVADER_CHARACTER                 _B#VR1,5
INVADER_ENABLED                   00000073
INVADER_ENABLED#0                 00000073
INVADER_ENABLED#1                 00000074
INVADER_ENABLED#10                0000007D
INVADER_ENABLED#11                0000007E
INVADER_ENABLED#12                0000007F
INVADER_ENABLED#13                00000080
INVADER_ENABLED#14                00000081
INVADER_ENABLED#15                00000082
INVADER_ENABLED#16                00000083
INVADER_ENABLED#17                00000084
INVADER_ENABLED#2                 00000075
INVADER_ENABLED#3                 00000076
INVADER_ENABLED#4                 00000077
INVADER_ENABLED#5                 00000078
INVADER_ENABLED#6                 00000079
INVADER_ENABLED#7                 0000007A
INVADER_ENABLED#8                 0000007B
INVADER_ENABLED#9                 0000007C
INVADER_FREQ                      00000034
INVADER_LOOP                      0000003C
INVADER_MISSILE2_FIRED            _B#VR1,7
INVADER_MISSILE2_HIT              _B#VR2,0
INVADER_MISSILE2_SPEED            00000097
INVADER_MISSILE2_TICK             00000094
INVADER_MISSILE2_XPOS             00000096
INVADER_MISSILE2_YPOS             00000095
INVADER_MISSILE_FIRED             MISSILE_STATUS,5
INVADER_MISSILE_HIT               MISSILE_STATUS,6
INVADER_MISSILE_SPEED             00000092
INVADER_MISSILE_TICK              0000008A
INVADER_MISSILE_XPOS              00000091
INVADER_MISSILE_YPOS              00000090
INVADER_RIGHT_LIMIT               117
INVADER_SOUND_COUNTER             00000033
INVADER_SOUND_DURATION            00000035
INVADER_SOUND_DURATION_COUNTER    00000036
INVADER_SOUND_ENABLE              NOTE_STATUS,0
INVADER_SPEED                     0000008E
INVADER_SPLASH_SCREEN             0000241E
INVADER_TICK                      00000089
INVADER_WIDTH                     10
INVADER_XPOS                      0000004F
INVADER_XPOS#0                    0000004F
INVADER_XPOS#1                    00000050
INVADER_XPOS#10                   00000059
INVADER_XPOS#11                   0000005A
INVADER_XPOS#12                   0000005B
INVADER_XPOS#13                   0000005C
INVADER_XPOS#14                   0000005D
INVADER_XPOS#15                   0000005E
INVADER_XPOS#16                   0000005F
INVADER_XPOS#17                   00000060
INVADER_XPOS#2                    00000051
INVADER_XPOS#3                    00000052
INVADER_XPOS#4                    00000053
INVADER_XPOS#5                    00000054
INVADER_XPOS#6                    00000055
INVADER_XPOS#7                    00000056
INVADER_XPOS#8                    00000057
INVADER_XPOS#9                    00000058
INVADER_YPOS                      00000061
INVADER_YPOS#0                    00000061
INVADER_YPOS#1                    00000062
INVADER_YPOS#10                   0000006B
INVADER_YPOS#11                   0000006C
INVADER_YPOS#12                   0000006D
INVADER_YPOS#13                   0000006E
INVADER_YPOS#14                   0000006F
INVADER_YPOS#15                   00000070
INVADER_YPOS#16                   00000071
INVADER_YPOS#17                   00000072
INVADER_YPOS#2                    00000063
INVADER_YPOS#3                    00000064
INVADER_YPOS#4                    00000065
INVADER_YPOS#5                    00000066
INVADER_YPOS#6                    00000067
INVADER_YPOS#7                    00000068
INVADER_YPOS#8                    00000069
INVADER_YPOS#9                    0000006A
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IRVST                             00000005
JUMP
L@DIV                             00000486
L@MOD                             00000486
LATA                              00000F89
LATB                              00000F8A
LATC                              00000F8B
LATD                              00000F8C
LATE                              00000F8D
LCD#CS1PIN                        1
LCD#CS1PORT                       PORTE
LCD#CS2PIN                        2
LCD#CS2PORT                       PORTE
LCD#DTPIN                         4
LCD#DTPORT                        PORTD
LCD#ENPIN                         0
LCD#ENPORT                        PORTE
LCD#RSPIN                         1
LCD#RSPORT                        PORTC
LCD#RWPIN                         0
LCD#RWPORT                        PORTC
LCD#TYPE                          1
LCD@DONE                          00000152
LCD@PLOT                          00000268
LCD@UNPLOT                        0000026C
LCDWRITE                          00000158
LCDWRITE@WREG                     0000015A
LEVEL                             0000009E
LEVELH                            0000009F
LIVES                             000000A0
LP_OSC_1                          000000F8
LVDCON                            00000FD2
LVDEN                             00000004
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
LVDL0                             00000000
LVDL1                             00000001
LVDL2                             00000002
LVDL3                             00000003
LVP_OFF_4                         000000FB
LVP_ON_4                          000000FF
L_BUTTON                          PORTB,0
MAIN_PROGRAM_LOOP                 000019EC
MISSILE_FIRED                     MISSILE_STATUS,0
MISSILE_FREQ                      00000038
MISSILE_HIT                       MISSILE_STATUS,1
MISSILE_SOUND_COUNTER             00000037
MISSILE_SOUND_ENABLE              NOTE_STATUS,1
MISSILE_STATUS                    0000003B
MISSILE_XPOS                      00000087
MISSILE_YPOS                      00000086
MOVE_INVADERS                     000013E8
MOVE_INVADERS_DOWN                00001172
MOVE_INVADER_MISSILE              00000916
MOVE_INVADER_MISSILE2             00000948
MOVE_MISSILE                      00001110
MOVE_SAUCER                       0000189A
MOVFW
N                                 00000004
N1200                             0000432D
N1200H                            00000043
N2400                             0000418C
N2400H                            00000041
N300                              00004CF1
N300H                             0000004C
N4800                             000040BC
N4800H                            00000040
N600                              0000466E
N600H                             00000046
N9600                             00004054
N9600H                            00000040
N@GT32                            0000056A
NEGW                              NEGF WREG
NEW_SHEET                         00001C62
NOTE_STATUS                       00000031
NOT_A                             00000005
NOT_BOR                           00000000
NOT_DONE                          00000002
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RC8                           00000006
NOT_RI                            00000004
NOT_T1SYNC                        00000002
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NOT_TX8                           00000006
NOT_W                             00000002
NUM_BIT
NUM_BYTE
NUM_DWORD
NUM_FLOAT
NUM_WORD
NUM_WREG
O@D32L1                           0000009C
O@D32L2                           000000AE
O@D32L3                           000000DC
O@D32SKP                          000000D4
OBF                               00000006
OERR                              00000001
ON1200                            0000C32D
ON1200H                           000000C3
ON2400                            0000C18C
ON2400H                           000000C1
ON300                             0000CCF1
ON300H                            000000CC
ON9600                            0000C054
ON9600H                           000000C0
OSC2                              00000006
OSCCON                            00000FD3
OSCS_OFF_1                        000000FF
OSCS_ON_1                         000000DF
OT1200                            0000832D
OT1200H                           00000083
OT2400                            0000818C
OT2400H                           00000081
OT300                             00008CF1
OT300H                            0000008C
OT9600                            00008054
OT9600H                           00000080
OUT@DEC                           00000032
OUT@DEC32                         00000090
OV                                00000003
P                                 00000004
PBP#RND                           0000000C
PBP#RNDH                          0000000D
PBP#VAR0                          0000000E
PBP#VAR0H                         0000000F
PBP#VAR1                          00000010
PBP#VAR1H                         00000011
PCFG0                             00000000
PCFG1                             00000001
PCFG2                             00000002
PCFG3                             00000003
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PEIE                              00000006
PEN                               00000002
PIE1                              00000F9D
PIE2                              00000FA0
PIR1                              00000F9E
PIR2                              00000FA1
PLOT@8                            00000206
PLOT@IT                           0000026E
PLT@EXIT                          0000029C
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTD                             00000F83
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PP0                               00000012
PP0H                              00000013
PP0HH                             00000014
PP0HHH                            00000015
PP1                               00000016
PP1H                              00000017
PP2                               00000018
PP2H                              00000019
PP2HH                             0000001A
PP2HHH                            0000001B
PP3                               0000001C
PP3H                              0000001D
PP4                               0000001E
PP4H                              0000001F
PP5                               00000020
PP5H                              00000021
PP6                               00000022
PP6H                              00000023
PP7                               00000024
PP7H                              00000025
PP7HH                             00000026
PP7HHH                            00000027
PPZ                               00000028
PPZH                              00000029
PPZHH                             0000002A
PPZHHH                            0000002B
PR2                               00000FCB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
PRINT                             00000108
PRINT@MSTR                        000000E4
PRODH                             00000FF4
PRODL                             00000FF3
PRODLH                            00000FF4
PSA                               00000003
PSP0                              00000000
PSP1                              00000001
PSP2                              00000002
PSP3                              00000003
PSP4                              00000004
PSP5                              00000005
PSP6                              00000006
PSP7                              00000007
PSPIE                             00000007
PSPIF                             00000007
PSPIP                             00000007
PSPMODE                           00000004
PWRT_OFF_2                        000000FF
PWRT_ON_2                         000000FE
R                                 00000002
R@B
R@SLP1                            0000038A
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RAM_BANK                          00000000
RAM_BANKS                         6
RANDOM_VALUE                      000000A1
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
RBIP                              00000000
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC2                               00000002
RC3                               00000003
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RC8_9                             00000006
RC9                               00000006
RCD8                              00000000
RCEN                              00000003
RCIE                              00000005
RCIF                              00000005
RCIO_OSC_1                        000000FF
RCIP                              00000005
RCON                              00000FD0
RCREG                             00000FAE
RCSTA                             00000FAB
RC_OSC_1                          000000FB
RD                                00000000
RD0                               00000000
RD1                               00000001
RD16                              00000007
RD2                               00000002
RD3                               00000003
RD4                               00000004
RD5                               00000005
RD6                               00000006
RD7                               00000007
RE0                               00000000
RE1                               00000001
RE2                               00000002
READ@BYTE                         00000300
READ@IT                           0000030C
READ@STATUS                       00000384
READBYTE@XPOS                     000002FE
RESET_INVADERS                    000012FE
RI                                00000004
RLF
RN@DM                             0000041C
ROT32@PP0                         00000528
RRF
RSEN                              00000001
RSOUT@                            00000416
RX                                00000007
RX9                               00000006
RX9D                              00000000
R_BUTTON                          PORTB,1
R_W                               00000002
S                                 00000003
S@B
SAUCER_ENABLED                    _B#VR2,3
SAUCER_FREQ                       0000003A
SAUCER_HIT                        _B#VR2,1
SAUCER_SOUND_COUNTER              00000039
SAUCER_SOUND_ENABLE               NOTE_STATUS,2
SAUCER_SPEED                      00000099
SAUCER_WIDTH                      14
SAUCER_XPOS                       00000098
SCK                               00000003
SCL                               00000003
SCORE                             0000009A
SCOREH                            0000009B
SCOREHH                           0000009C
SCOREHHH                          0000009D
SCS                               00000000
SDA                               00000004
SDI                               00000004
SDO                               00000005
SEN                               00000000
SEND@IT                           0000006E
SETC                              BSF STATUS,C
SETUP@LCD                         0000032C
SETZ                              BSF STATUS,Z
SHIP_HIT                          _B#VR1,2
SHIP_LEFT                         00001162
SHIP_MISSILE_TICK                 0000008B
SHIP_RIGHT                        00001150
SHIP_SPEED                        00000088
SHIP_WIDTH                        9
SHIP_XPOS                         00000085
SKP@GCSIN                         00000362
SKPC                              BTFSS STATUS,C
SKPNC                             BTFSC STATUS,C
SKPNZ                             BTFSC STATUS,Z
SKPZ                              BTFSS STATUS,Z
SMP                               00000007
SP#P9                             0000002C
SPBRG                             00000FAF
SPEAKER                           PORTB,3
SPEN                              00000007
SREN                              00000005
SS                                00000005
SSPADD                            00000FC8
SSPBUF                            00000FC9
SSPCON1                           00000FC6
SSPCON2                           00000FC5
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPOV                             00000006
SSPSTAT                           00000FC7
START@                            00000586
STATUS                            00000FD8
STKFUL                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STR@LB1                           0000281E
STR@LB2                           00002832
STR@LB3                           0000283A
STR@LB4                           0000284A
STR@LB5                           00002858
STR@LB6                           00002866
STR@LB7                           00002872
STR@LB8                           00002886
STR@LB9                           00002890
STVR_OFF_4                        000000FE
STVR_ON_4                         000000FF
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              INTCON,2
T0IP                              00000002
T0PS0                             00000000
T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T1200                             0000032D
T1200H                            00000003
T1CKI                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1INSYNC                          00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1SYNC                            00000002
T2400                             0000018C
T2400H                            00000001
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FCA
T300                              00000CF1
T300H                             0000000C
T3CCP1                            00000003
T3CCP2                            00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3INSYNC                          00000002
T3SYNC                            00000002
T4800                             000000BC
T600                              0000066E
T600H                             00000006
T9600                             00000054
T@E                               0000000C
T@EB                              00000008
T@EW                              0000000A
T@ST                              00000012
TAB                               00000009
TABLAT                            00000FF5
TBLPTRH                           00000FF7
TBLPTRL                           00000FF6
TBLPTRLH                          00000FF7
TBLPTRU                           00000FF8
TEMP_LOOP                         0000008C
TG@L                              0000037A
TIME_TO_MOVE_BASE                 _B#VR1,0
TIME_TO_MOVE_INVADERS             MISSILE_STATUS,7
TIME_TO_MOVE_INVADERS_DOWN        _B#VR1,3
TIME_TO_MOVE_INV_MISSILE          MISSILE_STATUS,4
TIME_TO_MOVE_INV_MISSILE2         _B#VR1,6
TIME_TO_MOVE_SAUCER               _B#VR2,2
TIME_TO_MOVE_SHIP_MISSILE         MISSILE_STATUS,3
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0LH                            00000FD7
TMR0ON                            00000007
TMR1CS                            00000001
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1LH                            00000FCF
TMR1ON                            00000000
TMR2                              00000FCC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2ON                            00000002
TMR3CS                            00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3LH                            00000FB3
TMR3ON                            00000000
TOSH                              00000FFE
TOSL                              00000FFD
TOSLH                             00000FFE
TOSU                              00000FFF
TOUTPS0                           00000003
TOUTPS1                           00000004
TOUTPS2                           00000005
TOUTPS3                           00000006
TRISA                             00000F92
TRISB                             00000F93
TRISC                             00000F94
TRISD                             00000F95
TRISE                             00000F96
TRISE0                            00000000
TRISE1                            00000001
TRISE2                            00000002
TRMT                              00000001
TRUE                              1
TX8_9                             00000006
TX9                               00000006
TX9D                              00000000
TXD8                              00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXSTA                             00000FAC
UA                                00000001
UPDATE_BASES                      0000067E
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WDTPS_128_2                       000000FF
WDTPS_16_2                        000000F9
WDTPS_1_2                         000000F1
WDTPS_2_2                         000000F3
WDTPS_32_2                        000000FB
WDTPS_4_2                         000000F5
WDTPS_64_2                        000000FD
WDTPS_8_2                         000000F7
WDT_OFF_2                         000000FE
WDT_ON_2                          000000FF
WORD_BIT
WORD_BYTE
WORD_DWORD
WORD_FLOAT
WORD_WORD
WORD_WREG
WR                                00000001
WREG                              00000FE8
WREG_BIT
WREG_BYTE
WREG_DWORD
WREG_FLOAT
WREG_WORD
WREN                              00000002
WRERR                             00000003
WRT0_OFF_6                        000000FF
WRT0_ON_6                         000000FE
WRT1_OFF_6                        000000FF
WRT1_ON_6                         000000FD
WRT2_OFF_6                        000000FF
WRT2_ON_6                         000000FB
WRT3_OFF_6                        000000FF
WRT3_ON_6                         000000F7
WRTB_OFF_6                        000000FF
WRTB_ON_6                         000000BF
WRTC_OFF_6                        000000FF
WRTC_ON_6                         000000DF
WRTD_OFF_6                        000000FF
WRTD_ON_6                         0000007F
XTAL                              8
XT_OSC_1                          000000F9
Z                                 00000002
_ADC                              8
_ADC_RES                          10
_B#VR1                            0000002D
_B#VR2                            0000002E
_CORE                             16
_DATA_ADDRESS                     00000005
_EEPROM                           256
_FLASH                            1
_GLCD_FLAG                        0000002F
_GLCD_XPOS                        00000030
_I2C_SCL_PIN                      00000003
_I2C_SCL_PORT                     00000F94
_I2C_SDA_PIN                      00000004
_I2C_SDA_PORT                     00000F94
_I2C_STP                          00000004
_I2C_STRT                         00000003
_MAXMEM                           32768
_MAXRAM                           1536
_NOT_ADDRESS                      00000005
_NOT_WRITE                        00000002
_RAM_END                          1535
_READ_WRITE                       00000002
_SYSTEM_VARIABLE_COUNT            49
_USART                            1
_USB                              0
_USELFSR                          1
__18F452                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXX----XXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
00C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
01C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
02C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
03C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
04C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
05C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
06C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
07C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
08C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
09C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
0FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
10C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
11C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
12C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
13C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
14C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
15C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
16C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
17C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
18C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1900 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1940 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1980 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
19C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1A80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1AC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1B80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1BC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1C80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1CC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1D80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1DC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1E80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1EC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F00 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F40 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1F80 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
1FC0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2040 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2080 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
20C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2100 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2140 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2180 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
21C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2200 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2240 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2280 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
22C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2300 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2340 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2380 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
23C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2400 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2440 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2480 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
24C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2500 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2540 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2580 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
25C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2600 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2640 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2680 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
26C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2700 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2740 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2780 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
27C0 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2800 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2840 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2880 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXX------------ ----------------
0000 : XXXXXXXX-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Bytes Used: 10408
Program Memory Bytes Free: 22360


Errors   :     0
Warnings :     0 reported,    40 suppressed
Messages :     1 reported,     1 suppressed

